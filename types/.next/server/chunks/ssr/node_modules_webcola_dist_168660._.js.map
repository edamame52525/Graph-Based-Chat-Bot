{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"file":"powergraph.js","sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/node_modules/webcola/WebCola/src/powergraph.ts"],"sourcesContent":["import {LinkAccessor} from './linklengths'\r\n\r\nexport interface LinkTypeAccessor<Link> extends LinkAccessor<Link> {\r\n        // return a unique identifier for the type of the link\r\n        getType(l: Link): number;\r\n    }\r\n\r\n    export class PowerEdge {\r\n        constructor(\r\n            public source: any,\r\n            public target: any,\r\n            public type: number) { }\r\n    }\r\n\r\n    export class Configuration<Link> {\r\n        // canonical list of modules.\r\n        // Initialized to a module for each leaf node, such that the ids and indexes of the module in the array match the indexes of the nodes in links\r\n        // Modules created through merges are appended to the end of this.\r\n        modules: Module[];\r\n        // top level modules and candidates for merges\r\n        roots: ModuleSet[];\r\n        // remaining edge count\r\n        R: number;\r\n        constructor(n: number, edges: Link[], private linkAccessor: LinkTypeAccessor<Link>, rootGroup?: any[]) {\r\n            this.modules = new Array(n);\r\n            this.roots = [];\r\n            if (rootGroup) {\r\n                this.initModulesFromGroup(rootGroup);\r\n            } else {\r\n                this.roots.push(new ModuleSet());\r\n                for (var i = 0; i < n; ++i)\r\n                    this.roots[0].add(this.modules[i] = new Module(i));\r\n            }\r\n            this.R = edges.length;\r\n            edges.forEach(e => {\r\n                var s = this.modules[linkAccessor.getSourceIndex(e)],\r\n                    t = this.modules[linkAccessor.getTargetIndex(e)],\r\n                    type = linkAccessor.getType(e);\r\n                s.outgoing.add(type, t);\r\n                t.incoming.add(type, s);\r\n            });\r\n        }\r\n\r\n        private initModulesFromGroup(group): ModuleSet {\r\n            var moduleSet = new ModuleSet();\r\n            this.roots.push(moduleSet);\r\n            for (var i = 0; i < group.leaves.length; ++i) {\r\n                var node = group.leaves[i];\r\n                var module = new Module(node.id);\r\n                this.modules[node.id] = module;\r\n                moduleSet.add(module);\r\n            }\r\n            if (group.groups) {\r\n                for (var j = 0; j < group.groups.length; ++j) {\r\n                    var child = group.groups[j];\r\n                    // Propagate group properties (like padding, stiffness, ...) as module definition so that the generated power graph group will inherit it\r\n                    var definition = {};\r\n                    for (var prop in child)\r\n                        if (prop !== \"leaves\" && prop !== \"groups\" && child.hasOwnProperty(prop))\r\n                            definition[prop] = child[prop];\r\n                    // Use negative module id to avoid clashes between predefined and generated modules\r\n                    moduleSet.add(new Module(-1-j, new LinkSets(), new LinkSets(), this.initModulesFromGroup(child), definition));\r\n                }\r\n            }\r\n            return moduleSet;\r\n         }\r\n\r\n        // merge modules a and b keeping track of their power edges and removing the from roots\r\n        merge(a: Module, b: Module, k: number = 0): Module {\r\n            var inInt = a.incoming.intersection(b.incoming),\r\n                outInt = a.outgoing.intersection(b.outgoing);\r\n            var children = new ModuleSet();\r\n            children.add(a);\r\n            children.add(b);\r\n            var m = new Module(this.modules.length, outInt, inInt, children);\r\n            this.modules.push(m);\r\n            var update = (s: LinkSets, i: string, o: string) => {\r\n                s.forAll((ms, linktype) => {\r\n                    ms.forAll(n => {\r\n                        var nls = <LinkSets>n[i];\r\n                        nls.add(linktype, m);\r\n                        nls.remove(linktype, a);\r\n                        nls.remove(linktype, b);\r\n                        (<LinkSets>a[o]).remove(linktype, n);\r\n                        (<LinkSets>b[o]).remove(linktype, n);\r\n                    });\r\n                });\r\n            };\r\n            update(outInt, \"incoming\", \"outgoing\");\r\n            update(inInt, \"outgoing\", \"incoming\");\r\n            this.R -= inInt.count() + outInt.count();\r\n            this.roots[k].remove(a);\r\n            this.roots[k].remove(b);\r\n            this.roots[k].add(m);\r\n            return m;\r\n        }\r\n\r\n        private rootMerges(k: number = 0): {\r\n            id: number;\r\n            nEdges: number;\r\n            a: Module;\r\n            b: Module;\r\n        }[] {\r\n            var rs = this.roots[k].modules();\r\n            var n = rs.length;\r\n            var merges = new Array(n * (n - 1));\r\n            var ctr = 0;\r\n            for (var i = 0, i_ = n - 1; i < i_; ++i) {\r\n                for (var j = i+1; j < n; ++j) {\r\n                    var a = rs[i], b = rs[j];\r\n                    merges[ctr] = { id: ctr, nEdges: this.nEdges(a, b), a: a, b: b };\r\n                    ctr++;\r\n                }\r\n            }\r\n            return merges;\r\n        }\r\n\r\n        greedyMerge(): boolean {\r\n            for (var i = 0; i < this.roots.length; ++i) {\r\n                // Handle single nested module case\r\n                if (this.roots[i].modules().length < 2) continue;\r\n\r\n                // find the merge that allows for the most edges to be removed.  secondary ordering based on arbitrary id (for predictability)\r\n                var ms = this.rootMerges(i).sort((a, b) => a.nEdges == b.nEdges ? a.id - b.id : a.nEdges - b.nEdges);\r\n                var m = ms[0];\r\n                if (m.nEdges >= this.R) continue;\r\n                this.merge(m.a, m.b, i);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        private nEdges(a: Module, b: Module): number {\r\n            var inInt = a.incoming.intersection(b.incoming),\r\n                outInt = a.outgoing.intersection(b.outgoing);\r\n            return this.R - inInt.count() - outInt.count();\r\n        }\r\n\r\n        getGroupHierarchy(retargetedEdges: PowerEdge[]): any[]{\r\n            var groups = [];\r\n            var root = {};\r\n            toGroups(this.roots[0], root, groups);\r\n            var es = this.allEdges();\r\n            es.forEach(e => {\r\n                var a = this.modules[e.source];\r\n                var b = this.modules[e.target];\r\n                retargetedEdges.push(new PowerEdge(\r\n                    typeof a.gid === \"undefined\" ? e.source : groups[a.gid],\r\n                    typeof b.gid === \"undefined\" ? e.target : groups[b.gid],\r\n                    e.type\r\n                ));\r\n            });\r\n            return groups;\r\n        }\r\n\r\n        allEdges(): PowerEdge[] {\r\n            var es = [];\r\n            Configuration.getEdges(this.roots[0], es);\r\n            return es;\r\n        }\r\n\r\n        static getEdges(modules: ModuleSet, es: PowerEdge[]) {\r\n            modules.forAll(m => {\r\n                m.getEdges(es);\r\n                Configuration.getEdges(m.children, es);\r\n            });\r\n        }\r\n    }\r\n\r\n    function toGroups(modules: ModuleSet, group, groups) {\r\n        modules.forAll(m => {\r\n            if (m.isLeaf()) {\r\n                if (!group.leaves) group.leaves = [];\r\n                group.leaves.push(m.id);\r\n            } else {\r\n                var g = group;\r\n                m.gid = groups.length;\r\n                if (!m.isIsland() || m.isPredefined()) {\r\n                    g = { id: m.gid };\r\n                    if (m.isPredefined())\r\n                        // Apply original group properties\r\n                        for (var prop in m.definition)\r\n                            g[prop] = m.definition[prop];\r\n                    if (!group.groups) group.groups = [];\r\n                    group.groups.push(m.gid);\r\n                    groups.push(g);\r\n                }\r\n                toGroups(m.children, g, groups);\r\n            }\r\n        });\r\n    }\r\n\r\n    export class Module {\r\n        gid: number;\r\n\r\n        constructor(\r\n            public id: number,\r\n            public outgoing: LinkSets = new LinkSets(),\r\n            public incoming: LinkSets = new LinkSets(),\r\n            public children: ModuleSet = new ModuleSet(),\r\n            public definition?: any) { }\r\n\r\n        getEdges(es: PowerEdge[]) {\r\n            this.outgoing.forAll((ms, edgetype) => {\r\n                ms.forAll(target => {\r\n                    es.push(new PowerEdge(this.id, target.id, edgetype));\r\n                });\r\n            });\r\n        }\r\n\r\n        isLeaf() {\r\n            return this.children.count() === 0;\r\n        }\r\n\r\n        isIsland() {\r\n            return this.outgoing.count() === 0 && this.incoming.count() === 0;\r\n        }\r\n\r\n        isPredefined(): boolean {\r\n            return typeof this.definition !== \"undefined\";\r\n        }\r\n    }\r\n\r\n    function intersection(m: any, n: any): any {\r\n        var i = {};\r\n        for (var v in m) if (v in n) i[v] = m[v];\r\n        return i;\r\n    }\r\n\r\n    export class ModuleSet {\r\n        table: any = {};\r\n        count() {\r\n            return Object.keys(this.table).length;\r\n        }\r\n        intersection(other: ModuleSet): ModuleSet {\r\n            var result = new ModuleSet();\r\n            result.table = intersection(this.table, other.table);\r\n            return result;\r\n        }\r\n        intersectionCount(other: ModuleSet): number {\r\n            return this.intersection(other).count();\r\n        }\r\n        contains(id: number): boolean {\r\n            return id in this.table;\r\n        }\r\n        add(m: Module): void {\r\n            this.table[m.id] = m;\r\n        }\r\n        remove(m: Module): void {\r\n            delete this.table[m.id];\r\n        }\r\n        forAll(f: (m: Module) => void) {\r\n            for (var mid in this.table) {\r\n                f(this.table[mid]);\r\n            }\r\n        }\r\n        modules(): Module[] {\r\n            var vs = [];\r\n            this.forAll(m => {\r\n                if (!m.isPredefined())\r\n                    vs.push(m);\r\n            });\r\n            return vs;\r\n        }\r\n    }\r\n\r\n    export class LinkSets {\r\n        sets: any = {};\r\n        n: number = 0;\r\n        count(): number {\r\n            return this.n;\r\n        }\r\n        contains(id: number) {\r\n            var result = false;\r\n            this.forAllModules(m => {\r\n                if (!result && m.id == id) {\r\n                    result = true;\r\n                }\r\n            });\r\n            return result;\r\n        }\r\n        add(linktype: number, m: Module) {\r\n            var s: ModuleSet = linktype in this.sets ? this.sets[linktype] : this.sets[linktype] = new ModuleSet();\r\n            s.add(m);\r\n            ++this.n;\r\n        }\r\n        remove(linktype: number, m: Module) {\r\n            var ms = <ModuleSet>this.sets[linktype];\r\n            ms.remove(m);\r\n            if (ms.count() === 0) {\r\n                delete this.sets[linktype];\r\n            }\r\n            --this.n;\r\n        }\r\n        forAll(f: (ms: ModuleSet, linktype: number) => void) {\r\n            for (var linktype in this.sets) {\r\n                f(<ModuleSet>this.sets[linktype], Number(linktype));\r\n            }\r\n        }\r\n        forAllModules(f: (m: Module) => void) {\r\n            this.forAll((ms, lt) => ms.forAll(f));\r\n        }\r\n        intersection(other: LinkSets): LinkSets {\r\n            var result: LinkSets = new LinkSets();\r\n            this.forAll((ms, lt) => {\r\n                if (lt in other.sets) {\r\n                    var i = ms.intersection(other.sets[lt]),\r\n                        n = i.count();\r\n                    if (n > 0) {\r\n                        result.sets[lt] = i;\r\n                        result.n += n;\r\n                    }\r\n                }\r\n            });\r\n            return result;\r\n        }\r\n    }\r\n\r\n    function intersectionCount(m: any, n: any): number {\r\n        return Object.keys(intersection(m, n)).length\r\n    }\r\n\r\n    export function getGroups<Link>(nodes: any[], links: Link[], la: LinkTypeAccessor<Link>, rootGroup?: any[]): { groups: any[]; powerEdges: PowerEdge[] } {\r\n        var n = nodes.length,\r\n            c = new Configuration(n, links, la, rootGroup);\r\n        while (c.greedyMerge());\r\n        var powerEdges: PowerEdge[] = [];\r\n        var g = c.getGroupHierarchy(powerEdges);\r\n        powerEdges.forEach(function (e) {\r\n            var f = (end) => {\r\n                var g = e[end];\r\n                if (typeof g == \"number\") e[end] = nodes[g];\r\n            };\r\n            f(\"source\");\r\n            f(\"target\");\r\n        });\r\n        return { groups: g, powerEdges: powerEdges };\r\n    }\r\n"],"names":[],"mappings":";;;;AAOI,IAAA,YAAA;IACI,SAAA,UACW,MAAW,EACX,MAAW,EACX,IAAY;QAFZ,IAAA,CAAA,MAAM,GAAN,MAAM,CAAK;QACX,IAAA,CAAA,MAAM,GAAN,MAAM,CAAK;QACX,IAAA,CAAA,IAAI,GAAJ,IAAI,CAAQ;IAAI,CAAC;IAChC,OAAA,SAAC;AAAD,CAAC,AALD,IAKC;AALY,QAAA,SAAA,GAAA,UAAS;AAOtB,IAAA,gBAAA;IASI,SAAA,cAAY,CAAS,EAAE,KAAa,EAAU,YAAoC,EAAE,SAAiB;QAArG,IAAA,QAAA,IAAA,CAkBC;QAlB6C,IAAA,CAAA,YAAY,GAAZ,YAAY,CAAwB;QAC9E,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,SAAS,EAAE;YACX,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;SACxC,MAAM;YACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;YACjC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CACtB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1D;QACD,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;QACtB,KAAK,CAAC,OAAO,CAAC,SAAA,CAAC;YACX,IAAI,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAChD,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,EAChD,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACnC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACxB,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,cAAA,SAAA,CAAA,oBAAoB,GAA5B,SAA6B,KAAK;QAC9B,IAAI,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;QAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,CAAE;YAC1C,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC;YAC/B,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACzB;QACD,IAAI,KAAK,CAAC,MAAM,EAAE;YACd,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,CAAE;gBAC1C,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAE5B,IAAI,UAAU,GAAG,CAAA,CAAE,CAAC;gBACpB,IAAK,IAAI,IAAI,IAAI,KAAK,CAClB,IAAI,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,QAAQ,IAAI,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,EACpE,UAAU,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;gBAEvC,SAAS,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAC,CAAC,EAAE,IAAI,QAAQ,EAAE,EAAE,IAAI,QAAQ,EAAE,EAAE,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;aACjH;SACJ;QACD,OAAO,SAAS,CAAC;IACpB,CAAC;IAGF,cAAA,SAAA,CAAA,KAAK,GAAL,SAAM,CAAS,EAAE,CAAS,EAAE,CAAa;QAAb,IAAA,MAAA,KAAA,GAAA;YAAA,IAAA,CAAa;QAAA;QACrC,IAAI,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,EAC3C,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QACjD,IAAI,QAAQ,GAAG,IAAI,SAAS,EAAE,CAAC;QAC/B,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAChB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QACjE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACrB,IAAI,MAAM,GAAG,SAAC,CAAW,EAAE,CAAS,EAAE,CAAS;YAC3C,CAAC,CAAC,MAAM,CAAC,SAAC,EAAE,EAAE,QAAQ;gBAClB,EAAE,CAAC,MAAM,CAAC,SAAA,CAAC;oBACP,IAAI,GAAG,GAAa,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzB,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;oBACrB,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;oBACxB,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;oBACb,CAAC,CAAC,CAAC,CAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;oBAC1B,CAAC,CAAC,CAAC,CAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBACzC,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;QACF,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QACvC,MAAM,CAAC,KAAK,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QACtC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QACzC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACrB,OAAO,CAAC,CAAC;IACb,CAAC;IAEO,cAAA,SAAA,CAAA,UAAU,GAAlB,SAAmB,CAAa;QAAb,IAAA,MAAA,KAAA,GAAA;YAAA,IAAA,CAAa;QAAA;QAM5B,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QACjC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;QAClB,IAAI,MAAM,GAAG,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACpC,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAE;YACrC,IAAK,IAAI,CAAC,GAAG,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAE;gBAC1B,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzB,MAAM,CAAC,GAAG,CAAC,GAAG;oBAAE,EAAE,EAAE,GAAG;oBAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;oBAAE,CAAC,EAAE,CAAC;oBAAE,CAAC,EAAE,CAAC;gBAAA,CAAE,CAAC;gBACjE,GAAG,EAAE,CAAC;aACT;SACJ;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,cAAA,SAAA,CAAA,WAAW,GAAX;QACI,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,CAAE;YAExC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE,SAAS;YAGjD,IAAI,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAC,CAAC,EAAE,CAAC;gBAAK,OAAA,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM;YAAxD,CAAwD,CAAC,CAAC;YACrG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,EAAE,SAAS;YACjC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACxB,OAAO,IAAI,CAAC;SACf;IACL,CAAC;IAEO,cAAA,SAAA,CAAA,MAAM,GAAd,SAAe,CAAS,EAAE,CAAS;QAC/B,IAAI,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,EAC3C,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;IACnD,CAAC;IAED,cAAA,SAAA,CAAA,iBAAiB,GAAjB,SAAkB,eAA4B;QAA9C,IAAA,QAAA,IAAA,CAeC;QAdG,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,GAAG,CAAA,CAAE,CAAC;QACd,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QACtC,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QACzB,EAAE,CAAC,OAAO,CAAC,SAAA,CAAC;YACR,IAAI,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAC/B,IAAI,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAC/B,eAAe,CAAC,IAAI,CAAC,IAAI,SAAS,CAC9B,OAAO,CAAC,CAAC,GAAG,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EACvD,OAAO,CAAC,CAAC,GAAG,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EACvD,CAAC,CAAC,IAAI,CACT,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,cAAA,SAAA,CAAA,QAAQ,GAAR;QACI,IAAI,EAAE,GAAG,EAAE,CAAC;QACZ,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAC1C,OAAO,EAAE,CAAC;IACd,CAAC;IAEM,cAAA,QAAQ,GAAf,SAAgB,OAAkB,EAAE,EAAe;QAC/C,OAAO,CAAC,MAAM,CAAC,SAAA,CAAC;YACZ,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACf,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;IACL,OAAA,aAAC;AAAD,CAAC,AAxJD,IAwJC;AAxJY,QAAA,aAAA,GAAA,cAAa;AA0J1B,SAAS,QAAQ,CAAC,OAAkB,EAAE,KAAK,EAAE,MAAM;IAC/C,OAAO,CAAC,MAAM,CAAC,SAAA,CAAC;QACZ,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACZ,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;YACrC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAC3B,MAAM;YACH,IAAI,CAAC,GAAG,KAAK,CAAC;YACd,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;YACtB,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,YAAY,EAAE,EAAE;gBACnC,CAAC,GAAG;oBAAE,EAAE,EAAE,CAAC,CAAC,GAAG;gBAAA,CAAE,CAAC;gBAClB,IAAI,CAAC,CAAC,YAAY,EAAE,EAEhB,IAAK,IAAI,IAAI,IAAI,CAAC,CAAC,UAAU,CACzB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACrC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;gBACrC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACzB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAClB;YACD,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;SACnC;IACL,CAAC,CAAC,CAAC;AACP,CAAC;AAED,IAAA,SAAA;IAGI,SAAA,OACW,EAAU,EACV,QAAmC,EACnC,QAAmC,EACnC,QAAqC,EACrC,UAAgB;QAHhB,IAAA,aAAA,KAAA,GAAA;YAAA,WAAA,IAAyB,QAAQ,EAAE;QAAA;QACnC,IAAA,aAAA,KAAA,GAAA;YAAA,WAAA,IAAyB,QAAQ,EAAE;QAAA;QACnC,IAAA,aAAA,KAAA,GAAA;YAAA,WAAA,IAA0B,SAAS,EAAE;QAAA;QAHrC,IAAA,CAAA,EAAE,GAAF,EAAE,CAAQ;QACV,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAA2B;QACnC,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAA2B;QACnC,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAA6B;QACrC,IAAA,CAAA,UAAU,GAAV,UAAU,CAAM;IAAI,CAAC;IAEhC,OAAA,SAAA,CAAA,QAAQ,GAAR,SAAS,EAAe;QAAxB,IAAA,QAAA,IAAA,CAMC;QALG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAC,EAAE,EAAE,QAAQ;YAC9B,EAAE,CAAC,MAAM,CAAC,SAAA,MAAM;gBACZ,EAAE,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,KAAI,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,OAAA,SAAA,CAAA,MAAM,GAAN;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACvC,CAAC;IAED,OAAA,SAAA,CAAA,QAAQ,GAAR;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACtE,CAAC;IAED,OAAA,SAAA,CAAA,YAAY,GAAZ;QACI,OAAO,OAAO,IAAI,CAAC,UAAU,KAAK,WAAW,CAAC;IAClD,CAAC;IACL,OAAA,MAAC;AAAD,CAAC,AA7BD,IA6BC;AA7BY,QAAA,MAAA,GAAA,OAAM;AA+BnB,SAAS,YAAY,CAAC,CAAM,EAAE,CAAM;IAChC,IAAI,CAAC,GAAG,CAAA,CAAE,CAAC;IACX,IAAK,IAAI,CAAC,IAAI,CAAC,CAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,OAAO,CAAC,CAAC;AACb,CAAC;AAED,IAAA,YAAA;IAAA,SAAA;QACI,IAAA,CAAA,KAAK,GAAQ,CAAA,CAAE,CAAC;IAkCpB,CAAC;IAjCG,UAAA,SAAA,CAAA,KAAK,GAAL;QACI,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;IAC1C,CAAC;IACD,UAAA,SAAA,CAAA,YAAY,GAAZ,SAAa,KAAgB;QACzB,IAAI,MAAM,GAAG,IAAI,SAAS,EAAE,CAAC;QAC7B,MAAM,CAAC,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QACrD,OAAO,MAAM,CAAC;IAClB,CAAC;IACD,UAAA,SAAA,CAAA,iBAAiB,GAAjB,SAAkB,KAAgB;QAC9B,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;IAC5C,CAAC;IACD,UAAA,SAAA,CAAA,QAAQ,GAAR,SAAS,EAAU;QACf,OAAO,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC;IAC5B,CAAC;IACD,UAAA,SAAA,CAAA,GAAG,GAAH,SAAI,CAAS;QACT,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IACD,UAAA,SAAA,CAAA,MAAM,GAAN,SAAO,CAAS;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC;IACD,UAAA,SAAA,CAAA,MAAM,GAAN,SAAO,CAAsB;QACzB,IAAK,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAE;YACxB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;SACtB;IACL,CAAC;IACD,UAAA,SAAA,CAAA,OAAO,GAAP;QACI,IAAI,EAAE,GAAG,EAAE,CAAC;QACZ,IAAI,CAAC,MAAM,CAAC,SAAA,CAAC;YACT,IAAI,CAAC,CAAC,CAAC,YAAY,EAAE,EACjB,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QACH,OAAO,EAAE,CAAC;IACd,CAAC;IACL,OAAA,SAAC;AAAD,CAAC,AAnCD,IAmCC;AAnCY,QAAA,SAAA,GAAA,UAAS;AAqCtB,IAAA,WAAA;IAAA,SAAA;QACI,IAAA,CAAA,IAAI,GAAQ,CAAA,CAAE,CAAC;QACf,IAAA,CAAA,CAAC,GAAW,CAAC,CAAC;IAgDlB,CAAC;IA/CG,SAAA,SAAA,CAAA,KAAK,GAAL;QACI,OAAO,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC;IACD,SAAA,SAAA,CAAA,QAAQ,GAAR,SAAS,EAAU;QACf,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,aAAa,CAAC,SAAA,CAAC;YAChB,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE;gBACvB,MAAM,GAAG,IAAI,CAAC;aACjB;QACL,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAClB,CAAC;IACD,SAAA,SAAA,CAAA,GAAG,GAAH,SAAI,QAAgB,EAAE,CAAS;QAC3B,IAAI,CAAC,GAAc,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,SAAS,EAAE,CAAC;QACvG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACT,EAAE,IAAI,CAAC,CAAC,CAAC;IACb,CAAC;IACD,SAAA,SAAA,CAAA,MAAM,GAAN,SAAO,QAAgB,EAAE,CAAS;QAC9B,IAAI,EAAE,GAAc,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACb,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;YAClB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC9B;QACD,EAAE,IAAI,CAAC,CAAC,CAAC;IACb,CAAC;IACD,SAAA,SAAA,CAAA,MAAM,GAAN,SAAO,CAA4C;QAC/C,IAAK,IAAI,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAE;YAC5B,CAAC,CAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;SACvD;IACL,CAAC;IACD,SAAA,SAAA,CAAA,aAAa,GAAb,SAAc,CAAsB;QAChC,IAAI,CAAC,MAAM,CAAC,SAAC,EAAE,EAAE,EAAE;YAAK,OAAA,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;QAAZ,CAAY,CAAC,CAAC;IAC1C,CAAC;IACD,SAAA,SAAA,CAAA,YAAY,GAAZ,SAAa,KAAe;QACxB,IAAI,MAAM,GAAa,IAAI,QAAQ,EAAE,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,SAAC,EAAE,EAAE,EAAE;YACf,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,EAAE;gBAClB,IAAI,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EACnC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;gBAClB,IAAI,CAAC,GAAG,CAAC,EAAE;oBACP,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;oBACpB,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC;iBACjB;aACJ;QACL,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAClB,CAAC;IACL,OAAA,QAAC;AAAD,CAAC,AAlDD,IAkDC;AAlDY,QAAA,QAAA,GAAA,SAAQ;AAoDrB,SAAS,iBAAiB,CAAC,CAAM,EAAE,CAAM;IACrC,OAAO,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAA;AACjD,CAAC;AAED,SAAgB,SAAS,CAAO,KAAY,EAAE,KAAa,EAAE,EAA0B,EAAE,SAAiB;IACtG,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,EAChB,CAAC,GAAG,IAAI,aAAa,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;IACnD,MAAO,CAAC,CAAC,WAAW,EAAE;IACtB,IAAI,UAAU,GAAgB,EAAE,CAAC;IACjC,IAAI,CAAC,GAAG,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;IACxC,UAAU,CAAC,OAAO,CAAC,SAAU,CAAC;QAC1B,IAAI,CAAC,GAAG,SAAC,GAAG;YACR,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YACf,IAAI,OAAO,CAAC,IAAI,QAAQ,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAChD,CAAC,CAAC;QACF,CAAC,CAAC,QAAQ,CAAC,CAAC;QACZ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC;IACH,OAAO;QAAE,MAAM,EAAE,CAAC;QAAE,UAAU,EAAE,UAAU;IAAA,CAAE,CAAC;AACjD,CAAC;AAfD,QAAA,SAAA,GAAA,UAeC","ignoreList":[0]}},
    {"offset": {"line": 332, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"file":"linklengths.js","sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/node_modules/webcola/WebCola/src/linklengths.ts"],"sourcesContent":["    export interface LinkAccessor<Link> {\r\n        getSourceIndex(l: Link): number;\r\n        getTargetIndex(l: Link): number;\r\n    }\r\n\r\n    export interface LinkLengthAccessor<Link> extends LinkAccessor<Link> {\r\n        setLength(l: Link, value: number): void;\r\n    }\r\n\r\n    // compute the size of the union of two sets a and b\r\n    function unionCount(a: any, b: any): number {\r\n        var u = {};\r\n        for (var i in a) u[i] = {};\r\n        for (var i in b) u[i] = {};\r\n        return Object.keys(u).length;\r\n    }\r\n\r\n    // compute the size of the intersection of two sets a and b\r\n    function intersectionCount(a: number[], b: number[]): number {\r\n        var n = 0;\r\n        for (var i in a) if (typeof b[i] !== 'undefined') ++n;\r\n        return n;\r\n    }\r\n\r\n    function getNeighbours<Link>(links: Link[], la: LinkAccessor<Link>): any {\r\n        var neighbours = {};\r\n        var addNeighbours = (u, v) => {\r\n            if (typeof neighbours[u] === 'undefined')\r\n                neighbours[u] = {};\r\n            neighbours[u][v] = {};\r\n        };\r\n        links.forEach(e => {\r\n            var u = la.getSourceIndex(e), v = la.getTargetIndex(e);\r\n            addNeighbours(u, v);\r\n            addNeighbours(v, u);\r\n        });\r\n        return neighbours;\r\n    }\r\n\r\n    // modify the lengths of the specified links by the result of function f weighted by w\r\n    function computeLinkLengths<Link>(links: Link[], w: number, f: (a: any, b: any) => number, la: LinkLengthAccessor<Link>) {\r\n        var neighbours = getNeighbours(links, la);\r\n        links.forEach(l => {\r\n            var a = neighbours[la.getSourceIndex(l)];\r\n            var b = neighbours[la.getTargetIndex(l)];\r\n            la.setLength(l, 1 + w * f(a, b));\r\n        });\r\n    }\r\n\r\n    /** modify the specified link lengths based on the symmetric difference of their neighbours\r\n     * @class symmetricDiffLinkLengths\r\n     */\r\n    export function symmetricDiffLinkLengths<Link>(links: Link[], la: LinkLengthAccessor<Link>, w: number = 1) {\r\n        computeLinkLengths(links, w, (a, b) => Math.sqrt(unionCount(a, b) - intersectionCount(a, b)), la);\r\n    }\r\n\r\n    /** modify the specified links lengths based on the jaccard difference between their neighbours\r\n     * @class jaccardLinkLengths\r\n     */\r\n    export function jaccardLinkLengths<Link>(links: Link[], la: LinkLengthAccessor<Link>, w: number = 1) {\r\n        computeLinkLengths(links, w, (a, b) =>\r\n            Math.min(Object.keys(a).length, Object.keys(b).length) < 1.1 ? 0 : intersectionCount(a, b) / unionCount(a, b)\r\n            , la);\r\n    }\r\n\r\n    export interface IConstraint {\r\n        left: number;\r\n        right: number;\r\n        gap: number;\r\n    }\r\n\r\n    export interface DirectedEdgeConstraints {\r\n        axis: string;\r\n        gap: number;\r\n    }\r\n\r\n    export interface LinkSepAccessor<Link> extends LinkAccessor<Link> {\r\n        getMinSeparation(l: Link): number;\r\n    }\r\n\r\n    /** generate separation constraints for all edges unless both their source and sink are in the same strongly connected component\r\n     * @class generateDirectedEdgeConstraints\r\n     */\r\n    export function generateDirectedEdgeConstraints<Link>(n: number, links: Link[], axis: string,\r\n        la: LinkSepAccessor<Link>): IConstraint[]\r\n    {\r\n        var components = stronglyConnectedComponents(n, links, la);\r\n        var nodes = {};\r\n        components.forEach((c,i) =>\r\n            c.forEach(v => nodes[v] = i)\r\n        );\r\n        var constraints: any[] = [];\r\n        links.forEach(l => {\r\n            var ui = la.getSourceIndex(l), vi = la.getTargetIndex(l),\r\n                u = nodes[ui], v = nodes[vi];\r\n            if (u !== v) {\r\n                constraints.push({\r\n                    axis: axis,\r\n                    left: ui,\r\n                    right: vi,\r\n                    gap: la.getMinSeparation(l)\r\n                });\r\n            }\r\n        });\r\n        return constraints;\r\n    }\r\n\r\n    /**\r\n     * Tarjan's strongly connected components algorithm for directed graphs\r\n     * returns an array of arrays of node indicies in each of the strongly connected components.\r\n     * a vertex not in a SCC of two or more nodes is it's own SCC.\r\n     * adaptation of https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm\r\n     */\r\n    export function stronglyConnectedComponents<Link>(numVertices: number, edges: Link[], la: LinkAccessor<Link>): number[][]{\r\n        var nodes = [];\r\n        var index = 0;\r\n        var stack = [];\r\n        var components = [];\r\n        function strongConnect(v) {\r\n            // Set the depth index for v to the smallest unused index\r\n            v.index = v.lowlink = index++;\r\n            stack.push(v);\r\n            v.onStack = true;\r\n\r\n            // Consider successors of v\r\n            for (var w of v.out) {\r\n                if (typeof w.index === 'undefined') {\r\n                    // Successor w has not yet been visited; recurse on it\r\n                    strongConnect(w);\r\n                    v.lowlink = Math.min(v.lowlink, w.lowlink);\r\n                } else if (w.onStack) {\r\n                    // Successor w is in stack S and hence in the current SCC\r\n                    v.lowlink = Math.min(v.lowlink, w.index);\r\n                }\r\n            }\r\n\r\n            // If v is a root node, pop the stack and generate an SCC\r\n            if (v.lowlink === v.index) {\r\n                // start a new strongly connected component\r\n                var component = [];\r\n                while (stack.length) {\r\n                    w = stack.pop();\r\n                    w.onStack = false;\r\n                    //add w to current strongly connected component\r\n                    component.push(w);\r\n                    if (w === v) break;\r\n                }\r\n                // output the current strongly connected component\r\n                components.push(component.map(v => v.id));\r\n            }\r\n        }\r\n        for (var i = 0; i < numVertices; i++) {\r\n            nodes.push({id: i, out: []});\r\n        }\r\n        for (var e of edges) {\r\n            let v = nodes[la.getSourceIndex(e)],\r\n                w = nodes[la.getTargetIndex(e)];\r\n            v.out.push(w);\r\n        }\r\n        for (var v of nodes) if (typeof v.index === 'undefined') strongConnect(v);\r\n        return components;\r\n    }\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 468, "column": 0}, "map": {"version":3,"file":"descent.js","sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/node_modules/webcola/WebCola/src/descent.ts"],"sourcesContent":["    /**\r\n     * Descent respects a collection of locks over nodes that should not move\r\n     * @class Locks\r\n     */\r\n    export class Locks {\r\n        locks: { [key:number]:number[]} = {};\r\n        /**\r\n         * add a lock on the node at index id\r\n         * @method add\r\n         * @param id index of node to be locked\r\n         * @param x required position for node\r\n         */\r\n        add(id: number, x: number[]) {\r\n/* DEBUG\r\n            if (isNaN(x[0]) || isNaN(x[1])) debugger;\r\nDEBUG */\r\n            this.locks[id] = x;\r\n        }\r\n        /**\r\n         * @method clear clear all locks\r\n         */\r\n        clear() {\r\n            this.locks = {};\r\n        }\r\n        /**\r\n         * @isEmpty\r\n         * @returns false if no locks exist\r\n         */\r\n        isEmpty(): boolean {\r\n            for (var l in this.locks) return false;\r\n            return true;\r\n        }\r\n        /**\r\n         * perform an operation on each lock\r\n         * @apply\r\n         */\r\n        apply(f: (id: number, x: number[]) => void) {\r\n            for (var l in this.locks) {\r\n                f(Number(l), this.locks[l]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Uses a gradient descent approach to reduce a stress or p-stress goal function over a graph with specified ideal edge lengths or a square matrix of dissimilarities.\r\n     * The standard stress function over a graph nodes with position vectors x,y,z is (mathematica input):\r\n     *   stress[x_,y_,z_,D_,w_]:=Sum[w[[i,j]] (length[x[[i]],y[[i]],z[[i]],x[[j]],y[[j]],z[[j]]]-d[[i,j]])^2,{i,Length[x]-1},{j,i+1,Length[x]}]\r\n     * where: D is a square matrix of ideal separations between nodes, w is matrix of weights for those separations\r\n     *        length[x1_, y1_, z1_, x2_, y2_, z2_] = Sqrt[(x1 - x2)^2 + (y1 - y2)^2 + (z1 - z2)^2]\r\n     * below, we use wij = 1/(Dij^2)\r\n     *\r\n     * @class Descent\r\n     */\r\n    export class Descent {\r\n        public threshold: number = 0.0001;\r\n        /** Hessian Matrix\r\n         * @property H {number[][][]}\r\n         */\r\n        public H: number[][][];\r\n        /** gradient vector\r\n         * @property G {number[][]}\r\n         */\r\n        public g: number[][];\r\n        /** positions vector\r\n         * @property x {number[][]}\r\n         */\r\n        public x: number[][];\r\n        /**\r\n         * @property k {number} dimensionality\r\n         */\r\n        public k: number;\r\n        /**\r\n         * number of data-points / nodes / size of vectors/matrices\r\n         * @property n {number}\r\n         */\r\n        public n: number;\r\n\r\n        public locks: Locks;\r\n\r\n        private static zeroDistance: number = 1e-10;\r\n        private minD: number;\r\n\r\n        // pool of arrays of size n used internally, allocated in constructor\r\n        private Hd: number[][];\r\n        private a: number[][];\r\n        private b: number[][];\r\n        private c: number[][];\r\n        private d: number[][];\r\n        private e: number[][];\r\n        private ia: number[][];\r\n        private ib: number[][];\r\n        private xtmp: number[][];\r\n\r\n\r\n        // Parameters for grid snap stress.\r\n        // TODO: Make a pluggable \"StressTerm\" class instead of this\r\n        // mess.\r\n        public numGridSnapNodes: number = 0;\r\n        public snapGridSize: number = 100;\r\n        public snapStrength: number = 1000;\r\n        public scaleSnapByMaxH: boolean = false;\r\n\r\n        private random = new PseudoRandom();\r\n\r\n        public project: { (x0: number[], y0: number[], r: number[]): void }[] = null;\r\n\r\n        /**\r\n         * @method constructor\r\n         * @param x {number[][]} initial coordinates for nodes\r\n         * @param D {number[][]} matrix of desired distances between pairs of nodes\r\n         * @param G {number[][]} [default=null] if specified, G is a matrix of weights for goal terms between pairs of nodes.\r\n         * If G[i][j] > 1 and the separation between nodes i and j is greater than their ideal distance, then there is no contribution for this pair to the goal\r\n         * If G[i][j] <= 1 then it is used as a weighting on the contribution of the variance between ideal and actual separation between i and j to the goal function\r\n         */\r\n        constructor(x: number[][], public D: number[][], public G: number[][]= null) {\r\n            this.x = x;\r\n            this.k = x.length; // dimensionality\r\n            var n = this.n = x[0].length; // number of nodes\r\n            this.H = new Array(this.k);\r\n            this.g = new Array(this.k);\r\n            this.Hd = new Array(this.k);\r\n            this.a = new Array(this.k);\r\n            this.b = new Array(this.k);\r\n            this.c = new Array(this.k);\r\n            this.d = new Array(this.k);\r\n            this.e = new Array(this.k);\r\n            this.ia = new Array(this.k);\r\n            this.ib = new Array(this.k);\r\n            this.xtmp = new Array(this.k);\r\n            this.locks = new Locks();\r\n            this.minD = Number.MAX_VALUE;\r\n            var i = n, j;\r\n            while (i--) {\r\n                j = n;\r\n                while (--j > i) {\r\n                    var d = D[i][j];\r\n                    if (d > 0 && d < this.minD) {\r\n                        this.minD = d;\r\n                    }\r\n                }\r\n            }\r\n            if (this.minD === Number.MAX_VALUE) this.minD = 1;\r\n            i = this.k;\r\n            while (i--) {\r\n                this.g[i] = new Array(n);\r\n                this.H[i] = new Array(n);\r\n                j = n;\r\n                while (j--) {\r\n                    this.H[i][j] = new Array(n);\r\n                }\r\n                this.Hd[i] = new Array(n);\r\n                this.a[i] = new Array(n);\r\n                this.b[i] = new Array(n);\r\n                this.c[i] = new Array(n);\r\n                this.d[i] = new Array(n);\r\n                this.e[i] = new Array(n);\r\n                this.ia[i] = new Array(n);\r\n                this.ib[i] = new Array(n);\r\n                this.xtmp[i] = new Array(n);\r\n            }\r\n        }\r\n\r\n        public static createSquareMatrix(n: number, f: (i: number, j: number) => number): number[][] {\r\n            var M = new Array(n);\r\n            for (var i = 0; i < n; ++i) {\r\n                M[i] = new Array(n);\r\n                for (var j = 0; j < n; ++j) {\r\n                    M[i][j] = f(i, j);\r\n                }\r\n            }\r\n            return M;\r\n        }\r\n\r\n        private offsetDir(): number[] {\r\n            var u = new Array(this.k);\r\n            var l = 0;\r\n            for (var i = 0; i < this.k; ++i) {\r\n                var x = u[i] = this.random.getNextBetween(0.01, 1) - 0.5;\r\n                l += x * x;\r\n            }\r\n            l = Math.sqrt(l);\r\n            return u.map(x=> x *= this.minD / l);\r\n        }\r\n\r\n        // compute first and second derivative information storing results in this.g and this.H\r\n        public computeDerivatives(x: number[][]) {\r\n            var n: number = this.n;\r\n            if (n < 1) return;\r\n            var i: number;\r\n/* DEBUG\r\n            for (var u: number = 0; u < n; ++u)\r\n                for (i = 0; i < this.k; ++i)\r\n                    if (isNaN(x[i][u])) debugger;\r\nDEBUG */\r\n            var d: number[] = new Array(this.k);\r\n            var d2: number[] = new Array(this.k);\r\n            var Huu: number[] = new Array(this.k);\r\n            var maxH: number = 0;\r\n            for (var u: number = 0; u < n; ++u) {\r\n                for (i = 0; i < this.k; ++i) Huu[i] = this.g[i][u] = 0;\r\n                for (var v = 0; v < n; ++v) {\r\n                    if (u === v) continue;\r\n\r\n                    // The following loop randomly displaces nodes that are at identical positions\r\n                    var maxDisplaces = n; // avoid infinite loop in the case of numerical issues, such as huge values\r\n                    while (maxDisplaces--) {\r\n                        var sd2 = 0;\r\n                        for (i = 0; i < this.k; ++i) {\r\n                            var dx = d[i] = x[i][u] - x[i][v];\r\n                            sd2 += d2[i] = dx * dx;\r\n                        }\r\n                        if (sd2 > 1e-9) break;\r\n                        var rd = this.offsetDir();\r\n                        for (i = 0; i < this.k; ++i) x[i][v] += rd[i];\r\n                    }\r\n                    var l: number = Math.sqrt(sd2);\r\n                    var D: number = this.D[u][v];\r\n                    var weight = this.G != null ? this.G[u][v] : 1;\r\n                    if (weight > 1 && l > D || !isFinite(D)) {\r\n                        for (i = 0; i < this.k; ++i) this.H[i][u][v] = 0;\r\n                        continue;\r\n                    }\r\n                    if (weight > 1) {\r\n                        weight = 1;\r\n                    }\r\n                    var D2: number = D * D;\r\n                    var gs: number = 2 * weight * (l - D) / (D2 * l);\r\n                    var l3 = l * l * l;\r\n                    var hs: number = 2 * -weight / (D2 * l3);\r\n                    if (!isFinite(gs))\r\n                        console.log(gs);\r\n                    for (i = 0; i < this.k; ++i) {\r\n                        this.g[i][u] += d[i] * gs;\r\n                        Huu[i] -= this.H[i][u][v] = hs * (l3 + D * (d2[i] - sd2) + l * sd2);\r\n                    }\r\n                }\r\n                for (i = 0; i < this.k; ++i) maxH = Math.max(maxH, this.H[i][u][u] = Huu[i]);\r\n            }\r\n            // Grid snap forces\r\n            var r = this.snapGridSize/2;\r\n            var g = this.snapGridSize;\r\n            var w = this.snapStrength;\r\n            var k = w / (r * r);\r\n            var numNodes = this.numGridSnapNodes;\r\n            //var numNodes = n;\r\n            for (var u: number = 0; u < numNodes; ++u) {\r\n                for (i = 0; i < this.k; ++i) {\r\n                    var xiu = this.x[i][u];\r\n                    var m = xiu / g;\r\n                    var f = m % 1;\r\n                    var q = m - f;\r\n                    var a = Math.abs(f);\r\n                    var dx = (a <= 0.5) ? xiu - q * g :\r\n                        (xiu > 0) ? xiu - (q + 1) * g : xiu - (q - 1) * g;\r\n                    if (-r < dx && dx <= r) {\r\n                        if (this.scaleSnapByMaxH) {\r\n                            this.g[i][u] += maxH * k * dx;\r\n                            this.H[i][u][u] += maxH * k;\r\n                        } else {\r\n                            this.g[i][u] += k * dx;\r\n                            this.H[i][u][u] += k;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!this.locks.isEmpty()) {\r\n                this.locks.apply((u, p) => {\r\n                    for (i = 0; i < this.k; ++i) {\r\n                        this.H[i][u][u] += maxH;\r\n                        this.g[i][u] -= maxH * (p[i] - x[i][u]);\r\n                    }\r\n                });\r\n            }\r\n/* DEBUG\r\n            for (var u: number = 0; u < n; ++u)\r\n                for (i = 0; i < this.k; ++i) {\r\n                    if (isNaN(this.g[i][u])) debugger;\r\n                    for (var v: number = 0; v < n; ++v)\r\n                        if (isNaN(this.H[i][u][v])) debugger;\r\n                }\r\nDEBUG */\r\n        }\r\n\r\n        private static dotProd(a: number[], b: number[]): number {\r\n            var x = 0, i = a.length;\r\n            while (i--) x += a[i] * b[i];\r\n            return x;\r\n        }\r\n\r\n        // result r = matrix m * vector v\r\n        private static rightMultiply(m: number[][], v: number[], r: number[]) {\r\n            var i = m.length;\r\n            while (i--) r[i] = Descent.dotProd(m[i], v);\r\n        }\r\n\r\n        // computes the optimal step size to take in direction d using the\r\n        // derivative information in this.g and this.H\r\n        // returns the scalar multiplier to apply to d to get the optimal step\r\n        public computeStepSize(d: number[][]): number {\r\n            var numerator = 0, denominator = 0;\r\n            for (var i = 0; i < this.k; ++i) {\r\n                numerator += Descent.dotProd(this.g[i], d[i]);\r\n                Descent.rightMultiply(this.H[i], d[i], this.Hd[i]);\r\n                denominator += Descent.dotProd(d[i], this.Hd[i]);\r\n            }\r\n            if (denominator === 0 || !isFinite(denominator)) return 0;\r\n            return 1 * numerator / denominator;\r\n        }\r\n\r\n        public reduceStress(): number {\r\n            this.computeDerivatives(this.x);\r\n            var alpha = this.computeStepSize(this.g);\r\n            for (var i = 0; i < this.k; ++i) {\r\n                this.takeDescentStep(this.x[i], this.g[i], alpha);\r\n            }\r\n            return this.computeStress();\r\n        }\r\n\r\n        private static copy(a: number[][], b: number[][]): void {\r\n            var m = a.length, n = b[0].length;\r\n            for (var i = 0; i < m; ++i) {\r\n                for (var j = 0; j < n; ++j) {\r\n                    b[i][j] = a[i][j];\r\n                }\r\n            }\r\n        }\r\n\r\n        // takes a step of stepSize * d from x0, and then project against any constraints.\r\n        // result is returned in r.\r\n        // x0: starting positions\r\n        // r: result positions will be returned here\r\n        // d: unconstrained descent vector\r\n        // stepSize: amount to step along d\r\n        private stepAndProject(x0: number[][], r: number[][], d: number[][], stepSize: number): void {\r\n            Descent.copy(x0, r);\r\n            this.takeDescentStep(r[0], d[0], stepSize);\r\n            if (this.project) this.project[0](x0[0], x0[1], r[0]);\r\n            this.takeDescentStep(r[1], d[1], stepSize);\r\n            if (this.project) this.project[1](r[0], x0[1], r[1]);\r\n\r\n            // todo: allow projection against constraints in higher dimensions\r\n            for (var i = 2; i < this.k; i++)\r\n                this.takeDescentStep(r[i], d[i], stepSize);\r\n\r\n            // the following makes locks extra sticky... but hides the result of the projection from the consumer\r\n            //if (!this.locks.isEmpty()) {\r\n            //    this.locks.apply((u, p) => {\r\n            //        for (var i = 0; i < this.k; i++) {\r\n            //            r[i][u] = p[i];\r\n            //        }\r\n            //    });\r\n            //}\r\n        }\r\n\r\n        private static mApply(m: number, n: number, f: (i: number, j: number) => any) {\r\n            var i = m; while (i-- > 0) {\r\n                var j = n; while (j-- > 0) f(i, j);\r\n            }\r\n        }\r\n        private matrixApply(f: (i: number, j: number) => any) {\r\n            Descent.mApply(this.k, this.n, f);\r\n        }\r\n\r\n        private computeNextPosition(x0: number[][], r: number[][]): void {\r\n            this.computeDerivatives(x0);\r\n            var alpha = this.computeStepSize(this.g);\r\n            this.stepAndProject(x0, r, this.g, alpha);\r\n/* DEBUG\r\n            for (var u: number = 0; u < this.n; ++u)\r\n                for (var i = 0; i < this.k; ++i)\r\n                    if (isNaN(r[i][u])) debugger;\r\nDEBUG */\r\n            if (this.project) {\r\n                this.matrixApply((i, j) => this.e[i][j] = x0[i][j] - r[i][j]);\r\n                var beta = this.computeStepSize(this.e);\r\n                beta = Math.max(0.2, Math.min(beta, 1));\r\n                this.stepAndProject(x0, r, this.e, beta);\r\n            }\r\n        }\r\n\r\n        public run(iterations: number): number {\r\n            var stress = Number.MAX_VALUE, converged = false;\r\n            while (!converged && iterations-- > 0) {\r\n                var s = this.rungeKutta();\r\n                converged = Math.abs(stress / s - 1) < this.threshold;\r\n                stress = s;\r\n            }\r\n            return stress;\r\n        }\r\n\r\n        public rungeKutta(): number {\r\n            this.computeNextPosition(this.x, this.a);\r\n            Descent.mid(this.x, this.a, this.ia);\r\n            this.computeNextPosition(this.ia, this.b);\r\n            Descent.mid(this.x, this.b, this.ib);\r\n            this.computeNextPosition(this.ib, this.c);\r\n            this.computeNextPosition(this.c, this.d);\r\n            var disp = 0;\r\n            this.matrixApply((i, j) => {\r\n                var x = (this.a[i][j] + 2.0 * this.b[i][j] + 2.0 * this.c[i][j] + this.d[i][j]) / 6.0,\r\n                    d = this.x[i][j] - x;\r\n                disp += d * d;\r\n                this.x[i][j] = x;\r\n            });\r\n            return disp;\r\n        }\r\n\r\n        private static mid(a: number[][], b: number[][], m: number[][]): void {\r\n            Descent.mApply(a.length, a[0].length, (i, j) =>\r\n                m[i][j] = a[i][j] + (b[i][j] - a[i][j]) / 2.0);\r\n        }\r\n\r\n        public takeDescentStep(x: number[], d: number[], stepSize: number): void {\r\n            for (var i = 0; i < this.n; ++i) {\r\n                x[i] = x[i] - stepSize * d[i];\r\n            }\r\n        }\r\n\r\n        public computeStress(): number {\r\n            var stress = 0;\r\n            for (var u = 0, nMinus1 = this.n - 1; u < nMinus1; ++u) {\r\n                for (var v = u + 1, n = this.n; v < n; ++v) {\r\n                    var l = 0;\r\n                    for (var i = 0; i < this.k; ++i) {\r\n                        var dx = this.x[i][u] - this.x[i][v];\r\n                        l += dx * dx;\r\n                    }\r\n                    l = Math.sqrt(l);\r\n                    var d = this.D[u][v];\r\n                    if (!isFinite(d)) continue;\r\n                    var rl = d - l;\r\n                    var d2 = d * d;\r\n                    stress += rl * rl / d2;\r\n                }\r\n            }\r\n            return stress;\r\n        }\r\n    }\r\n\r\n    // Linear congruential pseudo random number generator\r\n    export class PseudoRandom {\r\n        private a: number = 214013;\r\n        private c: number = 2531011;\r\n        private m: number = 2147483648;\r\n        private range: number = 32767;\r\n\r\n        constructor(public seed: number = 1) { }\r\n\r\n        // random real between 0 and 1\r\n        getNext(): number {\r\n            this.seed = (this.seed * this.a + this.c) % this.m;\r\n            return (this.seed >> 16) / this.range;\r\n        }\r\n\r\n        // random real between min and max\r\n        getNextBetween(min: number, max: number) {\r\n            return min + this.getNext() * (max - min);\r\n        }\r\n    }\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 802, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 807, "column": 0}, "map": {"version":3,"file":"vpsc.js","sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/node_modules/webcola/WebCola/src/vpsc.ts"],"sourcesContent":["    export class PositionStats {\r\n        AB: number = 0;\r\n        AD: number = 0;\r\n        A2: number = 0;\r\n\r\n        constructor(public scale: number) {}\r\n\r\n        addVariable(v: Variable): void {\r\n            var ai = this.scale / v.scale;\r\n            var bi = v.offset / v.scale;\r\n            var wi = v.weight;\r\n            this.AB += wi * ai * bi;\r\n            this.AD += wi * ai * v.desiredPosition;\r\n            this.A2 += wi * ai * ai;\r\n        }\r\n\r\n        getPosn(): number {\r\n            return (this.AD - this.AB) / this.A2;\r\n        }\r\n    }\r\n\r\n    export class Constraint {\r\n        lm: number;\r\n        active: boolean = false;\r\n        unsatisfiable: boolean = false;\r\n\r\n        constructor(public left: Variable, public right: Variable, public gap: number, public equality: boolean = false) {\r\n            this.left = left;\r\n            this.right = right;\r\n            this.gap = gap;\r\n            this.equality = equality;\r\n        }\r\n\r\n        slack(): number {\r\n            return this.unsatisfiable ? Number.MAX_VALUE\r\n                : this.right.scale * this.right.position() - this.gap\r\n                - this.left.scale * this.left.position();\r\n        }\r\n    }\r\n\r\n    export class Variable {\r\n        offset: number = 0;\r\n        block: Block;\r\n        cIn: Constraint[];\r\n        cOut: Constraint[];\r\n\r\n        constructor(public desiredPosition: number, public weight: number = 1, public scale: number = 1) {}\r\n\r\n        dfdv(): number {\r\n            return 2.0 * this.weight * (this.position() - this.desiredPosition);\r\n        }\r\n\r\n        position(): number {\r\n            return (this.block.ps.scale * this.block.posn + this.offset) / this.scale;\r\n        }\r\n\r\n        // visit neighbours by active constraints within the same block\r\n        visitNeighbours(prev: Variable, f: (c: Constraint, next: Variable) => void ): void {\r\n            var ff = (c, next) => c.active && prev !== next && f(c, next);\r\n            this.cOut.forEach(c=> ff(c, c.right));\r\n            this.cIn.forEach(c=> ff(c, c.left));\r\n        }\r\n    }\r\n\r\n    export class Block {\r\n        vars: Variable[] = [];\r\n        posn: number;\r\n        ps: PositionStats;\r\n        blockInd: number;\r\n\r\n        constructor(v: Variable) {\r\n            v.offset = 0;\r\n            this.ps = new PositionStats(v.scale);\r\n            this.addVariable(v);\r\n        }\r\n\r\n        private addVariable(v: Variable): void {\r\n            v.block = this;\r\n            this.vars.push(v);\r\n            this.ps.addVariable(v);\r\n            this.posn = this.ps.getPosn();\r\n        }\r\n\r\n        // move the block where it needs to be to minimize cost\r\n        updateWeightedPosition(): void {\r\n            this.ps.AB = this.ps.AD = this.ps.A2 = 0;\r\n            for (var i = 0, n = this.vars.length; i < n; ++i)\r\n                this.ps.addVariable(this.vars[i]);\r\n            this.posn = this.ps.getPosn();\r\n        }\r\n\r\n        private compute_lm(v: Variable, u: Variable, postAction: (c: Constraint)=>void): number {\r\n            var dfdv = v.dfdv();\r\n            v.visitNeighbours(u, (c, next) => {\r\n                var _dfdv = this.compute_lm(next, v, postAction);\r\n                if (next === c.right) {\r\n                    dfdv += _dfdv * c.left.scale;\r\n                    c.lm = _dfdv;\r\n                } else {\r\n                    dfdv += _dfdv * c.right.scale;\r\n                    c.lm = -_dfdv;\r\n                }\r\n                postAction(c);\r\n            });\r\n            return dfdv / v.scale;\r\n        }\r\n\r\n        private populateSplitBlock(v: Variable, prev: Variable): void {\r\n            v.visitNeighbours(prev, (c, next) => {\r\n                next.offset = v.offset + (next === c.right ? c.gap : -c.gap);\r\n                this.addVariable(next);\r\n                this.populateSplitBlock(next, v);\r\n            });\r\n        }\r\n\r\n        // traverse the active constraint tree applying visit to each active constraint\r\n        traverse(visit: (c: Constraint) => any, acc: any[], v: Variable = this.vars[0], prev: Variable=null) {\r\n            v.visitNeighbours(prev, (c, next) => {\r\n                acc.push(visit(c));\r\n                this.traverse(visit, acc, next, v);\r\n            });\r\n        }\r\n\r\n        // calculate lagrangian multipliers on constraints and\r\n        // find the active constraint in this block with the smallest lagrangian.\r\n        // if the lagrangian is negative, then the constraint is a split candidate.\r\n        findMinLM(): Constraint {\r\n            var m: Constraint = null;\r\n            this.compute_lm(this.vars[0], null, c=> {\r\n                if (!c.equality && (m === null || c.lm < m.lm)) m = c;\r\n            });\r\n            return m;\r\n        }\r\n\r\n        private findMinLMBetween(lv: Variable, rv: Variable): Constraint {\r\n            this.compute_lm(lv, null, () => {});\r\n            var m = null;\r\n            this.findPath(lv, null, rv, (c, next)=> {\r\n                if (!c.equality && c.right === next && (m === null || c.lm < m.lm)) m = c;\r\n            });\r\n            return m;\r\n        }\r\n\r\n        private findPath(v: Variable, prev: Variable, to: Variable, visit: (c: Constraint, next:Variable)=>void): boolean {\r\n            var endFound = false;\r\n            v.visitNeighbours(prev, (c, next) => {\r\n                if (!endFound && (next === to || this.findPath(next, v, to, visit)))\r\n                {\r\n                    endFound = true;\r\n                    visit(c, next);\r\n                }\r\n            });\r\n            return endFound;\r\n        }\r\n\r\n        // Search active constraint tree from u to see if there is a directed path to v.\r\n        // Returns true if path is found.\r\n        isActiveDirectedPathBetween(u: Variable, v: Variable) : boolean {\r\n            if (u === v) return true;\r\n            var i = u.cOut.length;\r\n            while(i--) {\r\n                var c = u.cOut[i];\r\n                if (c.active && this.isActiveDirectedPathBetween(c.right, v))\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // split the block into two by deactivating the specified constraint\r\n        static split(c: Constraint): Block[]{\r\n/* DEBUG\r\n            console.log(\"split on \" + c);\r\n            console.assert(c.active, \"attempt to split on inactive constraint\");\r\nDEBUG */\r\n            c.active = false;\r\n            return [Block.createSplitBlock(c.left), Block.createSplitBlock(c.right)];\r\n        }\r\n\r\n        private static createSplitBlock(startVar: Variable): Block {\r\n            var b = new Block(startVar);\r\n            b.populateSplitBlock(startVar, null);\r\n            return b;\r\n        }\r\n\r\n        // find a split point somewhere between the specified variables\r\n        splitBetween(vl: Variable, vr: Variable): { constraint: Constraint; lb: Block; rb: Block } {\r\n/* DEBUG\r\n            console.assert(vl.block === this);\r\n            console.assert(vr.block === this);\r\nDEBUG */\r\n            var c = this.findMinLMBetween(vl, vr);\r\n            if (c !== null) {\r\n                var bs = Block.split(c);\r\n                return { constraint: c, lb: bs[0], rb: bs[1] };\r\n            }\r\n            // couldn't find a split point - for example the active path is all equality constraints\r\n            return null;\r\n        }\r\n\r\n        mergeAcross(b: Block, c: Constraint, dist: number): void {\r\n            c.active = true;\r\n            for (var i = 0, n = b.vars.length; i < n; ++i) {\r\n                var v = b.vars[i];\r\n                v.offset += dist;\r\n                this.addVariable(v);\r\n            }\r\n            this.posn = this.ps.getPosn();\r\n        }\r\n\r\n        cost(): number {\r\n            var sum = 0, i = this.vars.length;\r\n            while (i--) {\r\n                var v = this.vars[i],\r\n                    d = v.position() - v.desiredPosition;\r\n                sum += d * d * v.weight;\r\n            }\r\n            return sum;\r\n        }\r\n\r\n/* DEBUG\r\n        toString(): string {\r\n            var cs = [];\r\n            this.traverse(c=> c.toString() + \"\\n\", cs)\r\n            return \"b\"+this.blockInd + \"@\" + this.posn + \": vars=\" + this.vars.map(v=> v.toString()+\":\"+v.offset) + \";\\n cons=\\n\" + cs;\r\n        }\r\nDEBUG */\r\n    }\r\n\r\n    export class Blocks {\r\n        private list: Block[];\r\n\r\n        constructor(public vs: Variable[]) {\r\n            var n = vs.length;\r\n            this.list = new Array(n);\r\n            while (n--) {\r\n                var b = new Block(vs[n]);\r\n                this.list[n] = b;\r\n                b.blockInd = n;\r\n            }\r\n        }\r\n\r\n        cost(): number {\r\n            var sum = 0, i = this.list.length;\r\n            while (i--) sum += this.list[i].cost();\r\n            return sum;\r\n        }\r\n\r\n        insert(b: Block) {\r\n/* DEBUG\r\n            console.assert(!this.contains(b), \"blocks error: tried to reinsert block \" + b.blockInd)\r\nDEBUG */\r\n            b.blockInd = this.list.length;\r\n            this.list.push(b);\r\n/* DEBUG\r\n            console.log(\"insert block: \" + b.blockInd);\r\n            this.contains(b);\r\nDEBUG */\r\n        }\r\n\r\n        remove(b: Block) {\r\n/* DEBUG\r\n            console.log(\"remove block: \" + b.blockInd);\r\n            console.assert(this.contains(b));\r\nDEBUG */\r\n            var last = this.list.length - 1;\r\n            var swapBlock = this.list[last];\r\n            this.list.length = last;\r\n            if (b !== swapBlock) {\r\n                this.list[b.blockInd] = swapBlock;\r\n                swapBlock.blockInd = b.blockInd;\r\n/* DEBUG\r\n                console.assert(this.contains(swapBlock));\r\nDEBUG */\r\n            }\r\n        }\r\n\r\n        // merge the blocks on either side of the specified constraint, by copying the smaller block into the larger\r\n        // and deleting the smaller.\r\n        merge(c: Constraint): void {\r\n            var l = c.left.block, r = c.right.block;\r\n/* DEBUG\r\n            console.assert(l!==r, \"attempt to merge within the same block\");\r\nDEBUG */\r\n            var dist = c.right.offset - c.left.offset - c.gap;\r\n            if (l.vars.length < r.vars.length) {\r\n                r.mergeAcross(l, c, dist);\r\n                this.remove(l);\r\n            } else {\r\n                l.mergeAcross(r, c, -dist);\r\n                this.remove(r);\r\n            }\r\n/* DEBUG\r\n            console.assert(Math.abs(c.slack()) < 1e-6, \"Error: Constraint should be at equality after merge!\");\r\n            console.log(\"merged on \" + c);\r\nDEBUG */\r\n        }\r\n\r\n        forEach(f: (b: Block, i: number) => void ) {\r\n            this.list.forEach(f);\r\n        }\r\n\r\n        // useful, for example, after variable desired positions change.\r\n        updateBlockPositions(): void {\r\n            this.list.forEach(b=> b.updateWeightedPosition());\r\n        }\r\n\r\n        // split each block across its constraint with the minimum lagrangian\r\n        split(inactive: Constraint[]): void {\r\n            this.updateBlockPositions();\r\n            this.list.forEach(b=> {\r\n                var v = b.findMinLM();\r\n                if (v !== null && v.lm < Solver.LAGRANGIAN_TOLERANCE) {\r\n                    b = v.left.block;\r\n                    Block.split(v).forEach(nb=>this.insert(nb));\r\n                    this.remove(b);\r\n                    inactive.push(v);\r\n/* DEBUG\r\n                    console.assert(this.contains(v.left.block));\r\n                    console.assert(this.contains(v.right.block));\r\nDEBUG */\r\n                }\r\n            });\r\n        }\r\n\r\n/* DEBUG\r\n        // checks b is in the block, and does a sanity check over list index integrity\r\n        contains(b: Block): boolean {\r\n            var result = false;\r\n            this.list.forEach((bb, i) => {\r\n                if (bb.blockInd !== i) {\r\n                    console.error(\"blocks error, blockInd \" + b.blockInd + \" found at \" + i);\r\n                    return false;\r\n                }\r\n                result = result || b === bb;\r\n            });\r\n            return result;\r\n        }\r\n\r\n        toString(): string {\r\n            return this.list.toString();\r\n        }\r\nDEBUG */\r\n    }\r\n\r\n    export class Solver {\r\n        bs: Blocks;\r\n        inactive: Constraint[];\r\n\r\n        static LAGRANGIAN_TOLERANCE = -1e-4;\r\n        static ZERO_UPPERBOUND = -1e-10;\r\n\r\n        constructor(public vs: Variable[], public cs: Constraint[]) {\r\n            this.vs = vs;\r\n            vs.forEach(v => {\r\n                v.cIn = [], v.cOut = [];\r\n/* DEBUG\r\n                v.toString = () => \"v\" + vs.indexOf(v);\r\nDEBUG */\r\n            });\r\n            this.cs = cs;\r\n            cs.forEach(c => {\r\n                c.left.cOut.push(c);\r\n                c.right.cIn.push(c);\r\n/* DEBUG\r\n                c.toString = () => c.left + \"+\" + c.gap + \"<=\" + c.right + \" slack=\" + c.slack() + \" active=\" + c.active;\r\nDEBUG */\r\n            });\r\n            this.inactive = cs.map(c=> { c.active = false; return c; });\r\n            this.bs = null;\r\n        }\r\n\r\n        cost(): number {\r\n            return this.bs.cost();\r\n        }\r\n\r\n        // set starting positions without changing desired positions.\r\n        // Note: it throws away any previous block structure.\r\n        setStartingPositions(ps: number[]): void {\r\n            this.inactive = this.cs.map(c=> { c.active = false; return c; });\r\n            this.bs = new Blocks(this.vs);\r\n            this.bs.forEach((b, i) => b.posn = ps[i]);\r\n        }\r\n\r\n        setDesiredPositions(ps: number[]): void {\r\n            this.vs.forEach((v, i) => v.desiredPosition = ps[i]);\r\n        }\r\n\r\n/* DEBUG\r\n        private getId(v: Variable): number {\r\n            return this.vs.indexOf(v);\r\n        }\r\n\r\n        // sanity check of the index integrity of the inactive list\r\n        checkInactive(): void {\r\n            var inactiveCount = 0;\r\n            this.cs.forEach(c=> {\r\n                var i = this.inactive.indexOf(c);\r\n                console.assert(!c.active && i >= 0 || c.active && i < 0, \"constraint should be in the inactive list if it is not active: \" + c);\r\n                if (i >= 0) {\r\n                    inactiveCount++;\r\n                } else {\r\n                    console.assert(c.active, \"inactive constraint not found in inactive list: \" + c);\r\n                }\r\n            });\r\n            console.assert(inactiveCount === this.inactive.length, inactiveCount + \" inactive constraints found, \" + this.inactive.length + \"in inactive list\");\r\n        }\r\n        // after every call to satisfy the following should check should pass\r\n        checkSatisfied(): void {\r\n            this.cs.forEach(c=>console.assert(c.slack() >= vpsc.Solver.ZERO_UPPERBOUND, \"Error: Unsatisfied constraint! \"+c));\r\n        }\r\nDEBUG */\r\n\r\n        private mostViolated(): Constraint {\r\n            var minSlack = Number.MAX_VALUE,\r\n                v: Constraint = null,\r\n                l = this.inactive,\r\n                n = l.length,\r\n                deletePoint = n;\r\n            for (var i = 0; i < n; ++i) {\r\n                var c = l[i];\r\n                if (c.unsatisfiable) continue;\r\n                var slack = c.slack();\r\n                if (c.equality || slack < minSlack) {\r\n                    minSlack = slack;\r\n                    v = c;\r\n                    deletePoint = i;\r\n                    if (c.equality) break;\r\n                }\r\n            }\r\n            if (deletePoint !== n &&\r\n                (minSlack < Solver.ZERO_UPPERBOUND && !v.active || v.equality))\r\n            {\r\n                l[deletePoint] = l[n - 1];\r\n                l.length = n - 1;\r\n            }\r\n            return v;\r\n        }\r\n\r\n        // satisfy constraints by building block structure over violated constraints\r\n        // and moving the blocks to their desired positions\r\n        satisfy(): void {\r\n            if (this.bs == null) {\r\n                this.bs = new Blocks(this.vs);\r\n            }\r\n/* DEBUG\r\n            console.log(\"satisfy: \" + this.bs);\r\nDEBUG */\r\n            this.bs.split(this.inactive);\r\n            var v: Constraint = null;\r\n            while ((v = this.mostViolated()) && (v.equality || v.slack() < Solver.ZERO_UPPERBOUND && !v.active)) {\r\n                var lb = v.left.block, rb = v.right.block;\r\n/* DEBUG\r\n                console.log(\"most violated is: \" + v);\r\n                this.bs.contains(lb);\r\n                this.bs.contains(rb);\r\nDEBUG */\r\n                if (lb !== rb) {\r\n                    this.bs.merge(v);\r\n                } else {\r\n                    if (lb.isActiveDirectedPathBetween(v.right, v.left)) {\r\n                        // cycle found!\r\n                        v.unsatisfiable = true;\r\n                        continue;\r\n                    }\r\n                    // constraint is within block, need to split first\r\n                    var split = lb.splitBetween(v.left, v.right);\r\n                    if (split !== null) {\r\n                        this.bs.insert(split.lb);\r\n                        this.bs.insert(split.rb);\r\n                        this.bs.remove(lb);\r\n                        this.inactive.push(split.constraint);\r\n                    } else {\r\n/* DEBUG\r\n                        console.log(\"unsatisfiable constraint found\");\r\nDEBUG */\r\n                        v.unsatisfiable = true;\r\n                        continue;\r\n                    }\r\n                    if (v.slack() >= 0) {\r\n/* DEBUG\r\n                        console.log(\"violated constraint indirectly satisfied: \" + v);\r\nDEBUG */\r\n                        // v was satisfied by the above split!\r\n                        this.inactive.push(v);\r\n                    } else {\r\n/* DEBUG\r\n                        console.log(\"merge after split:\");\r\nDEBUG */\r\n                        this.bs.merge(v);\r\n                    }\r\n                }\r\n/* DEBUG\r\n                this.bs.contains(v.left.block);\r\n                this.bs.contains(v.right.block);\r\n                this.checkInactive();\r\nDEBUG */\r\n            }\r\n/* DEBUG\r\n            this.checkSatisfied();\r\nDEBUG */\r\n        }\r\n\r\n        // repeatedly build and split block structure until we converge to an optimal solution\r\n        solve(): number {\r\n            this.satisfy();\r\n            var lastcost = Number.MAX_VALUE, cost = this.bs.cost();\r\n            while (Math.abs(lastcost - cost) > 0.0001) {\r\n                this.satisfy();\r\n                lastcost = cost;\r\n                cost = this.bs.cost();\r\n            }\r\n            return cost;\r\n        }\r\n    }\r\n    /**\r\n      * Remove overlap between spans while keeping their centers as close as possible to the specified desiredCenters.\r\n      * Lower and upper bounds will be respected if the spans physically fit between them\r\n      * (otherwise they'll be moved and their new position returned).\r\n      * If no upper/lower bound is specified then the bounds of the moved spans will be returned.\r\n      * returns a new center for each span.\r\n      */\r\n    export function removeOverlapInOneDimension(spans: { size: number, desiredCenter: number }[], lowerBound?: number, upperBound?: number)\r\n        : { newCenters: number[], lowerBound: number, upperBound: number }\r\n    {\r\n        const vs: Variable[] = spans.map(s => new Variable(s.desiredCenter));\r\n        const cs: Constraint[] = [];\r\n        const n = spans.length;\r\n        for (var i = 0; i < n - 1; i++) {\r\n            const left = spans[i], right = spans[i + 1];\r\n            cs.push(new Constraint(vs[i], vs[i + 1], (left.size + right.size) / 2));\r\n        }\r\n        const leftMost = vs[0],\r\n            rightMost = vs[n - 1],\r\n            leftMostSize = spans[0].size / 2,\r\n            rightMostSize = spans[n - 1].size / 2;\r\n        let vLower: Variable = null, vUpper: Variable = null;\r\n        if (lowerBound) {\r\n            vLower = new Variable(lowerBound, leftMost.weight * 1000);\r\n            vs.push(vLower);\r\n            cs.push(new Constraint(vLower, leftMost, leftMostSize));\r\n        }\r\n        if (upperBound) {\r\n            vUpper = new Variable(upperBound, rightMost.weight * 1000);\r\n            vs.push(vUpper);\r\n            cs.push(new Constraint(rightMost, vUpper, rightMostSize));\r\n        }\r\n        var solver = new Solver(vs, cs);\r\n        solver.solve();\r\n        return {\r\n            newCenters: vs.slice(0, spans.length).map(v => v.position()),\r\n            lowerBound: vLower ? vLower.position() : leftMost.position() - leftMostSize,\r\n            upperBound: vUpper ? vUpper.position() : rightMost.position() + rightMostSize\r\n        };\r\n    }\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1224, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1229, "column": 0}, "map": {"version":3,"file":"rbtree.js","sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/node_modules/webcola/WebCola/src/rbtree.ts"],"sourcesContent":["    //Based on js_es:\r\n    //\r\n    //https://github.com/vadimg/js_bintrees\r\n    //\r\n    //Copyright (C) 2011 by Vadim Graboys\r\n    //\r\n    //Permission is hereby granted, free of charge, to any person obtaining a copy\r\n    //of this software and associated documentation files (the \"Software\"), to deal\r\n    //in the Software without restriction, including without limitation the rights\r\n    //to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n    //copies of the Software, and to permit persons to whom the Software is\r\n    //furnished to do so, subject to the following conditions:\r\n    //\r\n    //The above copyright notice and this permission notice shall be included in\r\n    //all copies or substantial portions of the Software.\r\n    //\r\n    //THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n    //IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n    //FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n    //AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n    //LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n    //OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n    //THE SOFTWARE.\r\n    export class TreeBase {\r\n        _root;\r\n        size;\r\n        _comparator;\r\n        // removes all nodes from the tree\r\n        clear() {\r\n            this._root = null;\r\n            this.size = 0;\r\n        };\r\n\r\n        // returns node data if found, null otherwise\r\n        find(data) {\r\n            var res = this._root;\r\n\r\n            while (res !== null) {\r\n                var c = this._comparator(data, res.data);\r\n                if (c === 0) {\r\n                    return res.data;\r\n                }\r\n                else {\r\n                    res = res.get_child(c > 0);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        // returns iterator to node if found, null otherwise\r\n        findIter = function (data) {\r\n            var res = this._root;\r\n            var iter = this.iterator();\r\n\r\n            while (res !== null) {\r\n                var c = this._comparator(data, res.data);\r\n                if (c === 0) {\r\n                    iter._cursor = res;\r\n                    return iter;\r\n                }\r\n                else {\r\n                    iter._ancestors.push(res);\r\n                    res = res.get_child(c > 0);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        // Returns an interator to the tree node immediately before (or at) the element\r\n        lowerBound(data) {\r\n            return this._bound(data, this._comparator);\r\n        };\r\n\r\n        // Returns an interator to the tree node immediately after (or at) the element\r\n        upperBound(data) {\r\n            var cmp = this._comparator;\r\n\r\n            function reverse_cmp(a, b) {\r\n                return cmp(b, a);\r\n            }\r\n\r\n            return this._bound(data, reverse_cmp);\r\n        };\r\n\r\n        // returns null if tree is empty\r\n        min() {\r\n            var res = this._root;\r\n            if (res === null) {\r\n                return null;\r\n            }\r\n\r\n            while (res.left !== null) {\r\n                res = res.left;\r\n            }\r\n\r\n            return res.data;\r\n        };\r\n\r\n        // returns null if tree is empty\r\n        max() {\r\n            var res = this._root;\r\n            if (res === null) {\r\n                return null;\r\n            }\r\n\r\n            while (res.right !== null) {\r\n                res = res.right;\r\n            }\r\n\r\n            return res.data;\r\n        };\r\n\r\n        // returns a null iterator\r\n        // call next() or prev() to point to an element\r\n        iterator(): Iterator {\r\n            return new Iterator(this);\r\n        };\r\n\r\n        // calls cb on each node's data, in order\r\n        each(cb) {\r\n            var it = this.iterator(), data;\r\n            while ((data = it.next()) !== null) {\r\n                cb(data);\r\n            }\r\n        };\r\n\r\n        // calls cb on each node's data, in reverse order\r\n        reach(cb) {\r\n            var it = this.iterator(), data;\r\n            while ((data = it.prev()) !== null) {\r\n                cb(data);\r\n            }\r\n        };\r\n\r\n        // used for lowerBound and upperBound\r\n        _bound(data, cmp) {\r\n            var cur = this._root;\r\n            var iter = this.iterator();\r\n\r\n            while (cur !== null) {\r\n                var c = this._comparator(data, cur.data);\r\n                if (c === 0) {\r\n                    iter._cursor = cur;\r\n                    return iter;\r\n                }\r\n                iter._ancestors.push(cur);\r\n                cur = cur.get_child(c > 0);\r\n            }\r\n\r\n            for (var i = iter._ancestors.length - 1; i >= 0; --i) {\r\n                cur = iter._ancestors[i];\r\n                if (cmp(data, cur.data) > 0) {\r\n                    iter._cursor = cur;\r\n                    iter._ancestors.length = i;\r\n                    return iter;\r\n                }\r\n            }\r\n\r\n            iter._ancestors.length = 0;\r\n            return iter;\r\n        };\r\n    }\r\n    export class Iterator {\r\n        _tree;\r\n        _ancestors;\r\n        _cursor;\r\n        constructor(tree) {\r\n            this._tree = tree;\r\n            this._ancestors = [];\r\n            this._cursor = null;\r\n        }\r\n\r\n        data() {\r\n            return this._cursor !== null ? this._cursor.data : null;\r\n        };\r\n\r\n        // if null-iterator, returns first node\r\n        // otherwise, returns next node\r\n        next() {\r\n            if (this._cursor === null) {\r\n                var root = this._tree._root;\r\n                if (root !== null) {\r\n                    this._minNode(root);\r\n                }\r\n            }\r\n            else {\r\n                if (this._cursor.right === null) {\r\n                    // no greater node in subtree, go up to parent\r\n                    // if coming from a right child, continue up the stack\r\n                    var save;\r\n                    do {\r\n                        save = this._cursor;\r\n                        if (this._ancestors.length) {\r\n                            this._cursor = this._ancestors.pop();\r\n                        }\r\n                        else {\r\n                            this._cursor = null;\r\n                            break;\r\n                        }\r\n                    } while (this._cursor.right === save);\r\n                }\r\n                else {\r\n                    // get the next node from the subtree\r\n                    this._ancestors.push(this._cursor);\r\n                    this._minNode(this._cursor.right);\r\n                }\r\n            }\r\n            return this._cursor !== null ? this._cursor.data : null;\r\n        };\r\n\r\n        // if null-iterator, returns last node\r\n        // otherwise, returns previous node\r\n        prev() {\r\n            if (this._cursor === null) {\r\n                var root = this._tree._root;\r\n                if (root !== null) {\r\n                    this._maxNode(root);\r\n                }\r\n            }\r\n            else {\r\n                if (this._cursor.left === null) {\r\n                    var save;\r\n                    do {\r\n                        save = this._cursor;\r\n                        if (this._ancestors.length) {\r\n                            this._cursor = this._ancestors.pop();\r\n                        }\r\n                        else {\r\n                            this._cursor = null;\r\n                            break;\r\n                        }\r\n                    } while (this._cursor.left === save);\r\n                }\r\n                else {\r\n                    this._ancestors.push(this._cursor);\r\n                    this._maxNode(this._cursor.left);\r\n                }\r\n            }\r\n            return this._cursor !== null ? this._cursor.data : null;\r\n        };\r\n\r\n        _minNode(start) {\r\n            while (start.left !== null) {\r\n                this._ancestors.push(start);\r\n                start = start.left;\r\n            }\r\n            this._cursor = start;\r\n        };\r\n\r\n        _maxNode(start) {\r\n            while (start.right !== null) {\r\n                this._ancestors.push(start);\r\n                start = start.right;\r\n            }\r\n            this._cursor = start;\r\n        };\r\n    }\r\n\r\n    class Node {\r\n        data;\r\n        left;\r\n        right;\r\n        red;\r\n        constructor(data) {\r\n            this.data = data;\r\n            this.left = null;\r\n            this.right = null;\r\n            this.red = true;\r\n        }\r\n\r\n        get_child(dir) {\r\n            return dir ? this.right : this.left;\r\n        };\r\n\r\n        set_child(dir, val) {\r\n            if (dir) {\r\n                this.right = val;\r\n            }\r\n            else {\r\n                this.left = val;\r\n            }\r\n        };\r\n    }\r\n\r\n    export class RBTree<T> extends TreeBase {\r\n\r\n        _root;\r\n        _comparator;\r\n        size;\r\n        constructor(comparator: (a: T, b: T) => number) {\r\n            super();\r\n            this._root = null;\r\n            this._comparator = comparator;\r\n            this.size = 0;\r\n        }\r\n\r\n        // returns true if inserted, false if duplicate\r\n        insert(data) {\r\n            var ret = false;\r\n\r\n            if (this._root === null) {\r\n                // empty tree\r\n                this._root = new Node(data);\r\n                ret = true;\r\n                this.size++;\r\n            }\r\n            else {\r\n                var head = new Node(undefined); // fake tree root\r\n\r\n                var dir = false;\r\n                var last = false;\r\n\r\n                // setup\r\n                var gp = null; // grandparent\r\n                var ggp = head; // grand-grand-parent\r\n                var p = null; // parent\r\n                var node = this._root;\r\n                ggp.right = this._root;\r\n\r\n                // search down\r\n                while (true) {\r\n                    if (node === null) {\r\n                        // insert new node at the bottom\r\n                        node = new Node(data);\r\n                        p.set_child(dir, node);\r\n                        ret = true;\r\n                        this.size++;\r\n                    }\r\n                    else if (RBTree.is_red(node.left) && RBTree.is_red(node.right)) {\r\n                        // color flip\r\n                        node.red = true;\r\n                        node.left.red = false;\r\n                        node.right.red = false;\r\n                    }\r\n\r\n                    // fix red violation\r\n                    if (RBTree.is_red(node) && RBTree.is_red(p)) {\r\n                        var dir2 = ggp.right === gp;\r\n\r\n                        if (node === p.get_child(last)) {\r\n                            ggp.set_child(dir2, RBTree.single_rotate(gp, !last));\r\n                        }\r\n                        else {\r\n                            ggp.set_child(dir2, RBTree.double_rotate(gp, !last));\r\n                        }\r\n                    }\r\n\r\n                    var cmp = this._comparator(node.data, data);\r\n\r\n                    // stop if found\r\n                    if (cmp === 0) {\r\n                        break;\r\n                    }\r\n\r\n                    last = dir;\r\n                    dir = cmp < 0;\r\n\r\n                    // update helpers\r\n                    if (gp !== null) {\r\n                        ggp = gp;\r\n                    }\r\n                    gp = p;\r\n                    p = node;\r\n                    node = node.get_child(dir);\r\n                }\r\n\r\n                // update root\r\n                this._root = head.right;\r\n            }\r\n\r\n            // make root black\r\n            this._root.red = false;\r\n\r\n            return ret;\r\n        };\r\n\r\n        // returns true if removed, false if not found\r\n        remove(data) {\r\n            if (this._root === null) {\r\n                return false;\r\n            }\r\n\r\n            var head = new Node(undefined); // fake tree root\r\n            var node = head;\r\n            node.right = this._root;\r\n            var p = null; // parent\r\n            var gp = null; // grand parent\r\n            var found = null; // found item\r\n            var dir = true;\r\n\r\n            while (node.get_child(dir) !== null) {\r\n                var last = dir;\r\n\r\n                // update helpers\r\n                gp = p;\r\n                p = node;\r\n                node = node.get_child(dir);\r\n\r\n                var cmp = this._comparator(data, node.data);\r\n\r\n                dir = cmp > 0;\r\n\r\n                // save found node\r\n                if (cmp === 0) {\r\n                    found = node;\r\n                }\r\n\r\n                // push the red node down\r\n                if (!RBTree.is_red(node) && !RBTree.is_red(node.get_child(dir))) {\r\n                    if (RBTree.is_red(node.get_child(!dir))) {\r\n                        var sr = RBTree.single_rotate(node, dir);\r\n                        p.set_child(last, sr);\r\n                        p = sr;\r\n                    }\r\n                    else if (!RBTree.is_red(node.get_child(!dir))) {\r\n                        var sibling = p.get_child(!last);\r\n                        if (sibling !== null) {\r\n                            if (!RBTree.is_red(sibling.get_child(!last)) && !RBTree.is_red(sibling.get_child(last))) {\r\n                                // color flip\r\n                                p.red = false;\r\n                                sibling.red = true;\r\n                                node.red = true;\r\n                            }\r\n                            else {\r\n                                var dir2 = gp.right === p;\r\n\r\n                                if (RBTree.is_red(sibling.get_child(last))) {\r\n                                    gp.set_child(dir2, RBTree.double_rotate(p, last));\r\n                                }\r\n                                else if (RBTree.is_red(sibling.get_child(!last))) {\r\n                                    gp.set_child(dir2, RBTree.single_rotate(p, last));\r\n                                }\r\n\r\n                                // ensure correct coloring\r\n                                var gpc = gp.get_child(dir2);\r\n                                gpc.red = true;\r\n                                node.red = true;\r\n                                gpc.left.red = false;\r\n                                gpc.right.red = false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // replace and remove if found\r\n            if (found !== null) {\r\n                found.data = node.data;\r\n                p.set_child(p.right === node, node.get_child(node.left === null));\r\n                this.size--;\r\n            }\r\n\r\n            // update root and make it black\r\n            this._root = head.right;\r\n            if (this._root !== null) {\r\n                this._root.red = false;\r\n            }\r\n\r\n            return found !== null;\r\n        };\r\n\r\n        static is_red(node) {\r\n            return node !== null && node.red;\r\n        }\r\n\r\n        static single_rotate(root, dir) {\r\n            var save = root.get_child(!dir);\r\n\r\n            root.set_child(!dir, save.get_child(dir));\r\n            save.set_child(dir, root);\r\n\r\n            root.red = true;\r\n            save.red = false;\r\n\r\n            return save;\r\n        }\r\n\r\n        static double_rotate(root, dir) {\r\n            root.set_child(!dir, RBTree.single_rotate(root.get_child(!dir), !dir));\r\n            return RBTree.single_rotate(root, dir);\r\n        }\r\n    }\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1611, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1616, "column": 0}, "map": {"version":3,"file":"rectangle.js","sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/node_modules/webcola/WebCola/src/rectangle.ts"],"sourcesContent":["import {Constraint, Variable, Solver} from './vpsc'\r\nimport {RBTree} from './rbtree'\r\nimport {Point} from './geom'\r\n\r\n    export interface Leaf {\r\n        bounds: Rectangle;\r\n        variable: Variable;\r\n    }\r\n\r\n    export interface ProjectionGroup {\r\n        bounds: Rectangle;\r\n        padding: number;\r\n        stiffness: number;\r\n        leaves: Leaf[];\r\n        groups: ProjectionGroup[];\r\n        minVar: Variable;\r\n        maxVar: Variable;\r\n    }\r\n\r\n    export function computeGroupBounds(g: ProjectionGroup): Rectangle {\r\n        g.bounds = typeof g.leaves !== \"undefined\" ?\r\n            g.leaves.reduce((r: Rectangle, c) => c.bounds.union(r), Rectangle.empty()) :\r\n            Rectangle.empty();\r\n        if (typeof g.groups !== \"undefined\")\r\n            g.bounds = <Rectangle>g.groups.reduce((r: Rectangle, c) => computeGroupBounds(c).union(r), g.bounds);\r\n        g.bounds = g.bounds.inflate(g.padding);\r\n        return g.bounds;\r\n    }\r\n\r\n    export class Rectangle {\r\n        constructor(\r\n            public x: number,\r\n            public X: number,\r\n            public y: number,\r\n            public Y: number) { }\r\n\r\n        static empty(): Rectangle { return new Rectangle(Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY); }\r\n\r\n        cx(): number { return (this.x + this.X) / 2; }\r\n\r\n        cy(): number { return (this.y + this.Y) / 2; }\r\n\r\n        overlapX(r: Rectangle): number {\r\n            var ux = this.cx(), vx = r.cx();\r\n            if (ux <= vx && r.x < this.X) return this.X - r.x;\r\n            if (vx <= ux && this.x < r.X) return r.X - this.x;\r\n            return 0;\r\n        }\r\n\r\n        overlapY(r: Rectangle): number {\r\n            var uy = this.cy(), vy = r.cy();\r\n            if (uy <= vy && r.y < this.Y) return this.Y - r.y;\r\n            if (vy <= uy && this.y < r.Y) return r.Y - this.y;\r\n            return 0;\r\n        }\r\n\r\n        setXCentre(cx: number): void {\r\n            var dx = cx - this.cx();\r\n            this.x += dx;\r\n            this.X += dx;\r\n        }\r\n\r\n        setYCentre(cy: number): void {\r\n            var dy = cy - this.cy();\r\n            this.y += dy;\r\n            this.Y += dy;\r\n        }\r\n\r\n        width(): number {\r\n            return this.X - this.x;\r\n        }\r\n\r\n        height(): number {\r\n            return this.Y - this.y;\r\n        }\r\n\r\n        union(r: Rectangle): Rectangle {\r\n            return new Rectangle(Math.min(this.x, r.x), Math.max(this.X, r.X), Math.min(this.y, r.y), Math.max(this.Y, r.Y));\r\n        }\r\n\r\n        /**\r\n         * return any intersection points between the given line and the sides of this rectangle\r\n         * @method lineIntersection\r\n         * @param x1 number first x coord of line\r\n         * @param y1 number first y coord of line\r\n         * @param x2 number second x coord of line\r\n         * @param y2 number second y coord of line\r\n         * @return any intersection points found\r\n         */\r\n        lineIntersections(x1: number, y1: number, x2: number, y2: number): Array<Point> {\r\n            var sides = [[this.x, this.y, this.X, this.y],\r\n                    [this.X, this.y, this.X, this.Y],\r\n                    [this.X, this.Y, this.x, this.Y],\r\n                [this.x, this.Y, this.x, this.y]];\r\n            var intersections = [];\r\n            for (var i = 0; i < 4; ++i) {\r\n                var r = Rectangle.lineIntersection(x1, y1, x2, y2, sides[i][0], sides[i][1], sides[i][2], sides[i][3]);\r\n                if (r !== null) intersections.push({ x: r.x, y: r.y });\r\n            }\r\n            return intersections;\r\n        }\r\n\r\n        /**\r\n         * return any intersection points between a line extending from the centre of this rectangle to the given point,\r\n         *  and the sides of this rectangle\r\n         * @method lineIntersection\r\n         * @param x2 number second x coord of line\r\n         * @param y2 number second y coord of line\r\n         * @return any intersection points found\r\n         */\r\n        rayIntersection(x2: number, y2: number): Point {\r\n            var ints = this.lineIntersections(this.cx(), this.cy(), x2, y2);\r\n            return ints.length > 0 ? ints[0] : null;\r\n        }\r\n\r\n        vertices(): Point[] {\r\n            return [\r\n                { x: this.x, y: this.y },\r\n                { x: this.X, y: this.y },\r\n                { x: this.X, y: this.Y },\r\n                { x: this.x, y: this.Y }];\r\n        }\r\n\r\n        static lineIntersection(\r\n            x1: number, y1: number,\r\n            x2: number, y2: number,\r\n            x3: number, y3: number,\r\n            x4: number, y4: number): Point {\r\n            var dx12 = x2 - x1, dx34 = x4 - x3,\r\n                dy12 = y2 - y1, dy34 = y4 - y3,\r\n                denominator = dy34 * dx12 - dx34 * dy12;\r\n            if (denominator == 0) return null;\r\n            var dx31 = x1 - x3, dy31 = y1 - y3,\r\n                numa = dx34 * dy31 - dy34 * dx31,\r\n                a = numa / denominator,\r\n                numb = dx12 * dy31 - dy12 * dx31,\r\n                b = numb / denominator;\r\n            if (a >= 0 && a <= 1 && b >= 0 && b <= 1) {\r\n                return {\r\n                    x: x1 + a * dx12,\r\n                    y: y1 + a * dy12\r\n                };\r\n            }\r\n            return null;\r\n        }\r\n\r\n        inflate(pad: number): Rectangle {\r\n            return new Rectangle(this.x - pad, this.X + pad, this.y - pad, this.Y + pad);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the endpoints of a line that connects the centre of two rectangles.\r\n     * @param {Rectangle} [source] The source Rectangle.\r\n     * @param {Rectangle} [target] The target Rectangle.\r\n     * @param {number} [ah] The size of the arrow head, a distance to shorten the\r\n     *                      line by.\r\n     * @return An object with three point properties, the intersection with the\r\n     *         source rectangle (sourceIntersection), the intersection with then\r\n     *         target rectangle (targetIntersection), and the point an arrow\r\n     *         head of the specified size would need to start (arrowStart).\r\n     */\r\n    export function makeEdgeBetween(source: Rectangle, target: Rectangle, ah: number)\r\n        : { sourceIntersection: Point; targetIntersection: Point; arrowStart: Point } {\r\n        const si = source.rayIntersection(target.cx(), target.cy()) || { x: source.cx(), y: source.cy() },\r\n            ti = target.rayIntersection(source.cx(), source.cy()) || { x: target.cx(), y: target.cy() },\r\n            dx = ti.x - si.x,\r\n            dy = ti.y - si.y,\r\n            l = Math.sqrt(dx * dx + dy * dy), al = l - ah;\r\n        return {\r\n            sourceIntersection: si,\r\n            targetIntersection: ti,\r\n            arrowStart: { x: si.x + al * dx / l, y: si.y + al * dy / l }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the intersection of a line from the given point to the centre\r\n     * of the target rectangle where it intersects the rectanngle.\r\n     * @param [source] The source point.\r\n     * @param {Rectangle} [target] The target Rectangle.\r\n     * @param {number} [ah] The size of the arrow head, a distance to shorten the\r\n     *                      line by.\r\n     * @return The point an arrow head of the specified size would need to start.\r\n     */\r\n    export function makeEdgeTo(s: { x: number; y: number }, target: Rectangle, ah: number): Point {\r\n        var ti = target.rayIntersection(s.x, s.y);\r\n        if (!ti) ti = { x: target.cx(), y: target.cy() };\r\n        var dx = ti.x - s.x,\r\n            dy = ti.y - s.y,\r\n            l = Math.sqrt(dx * dx + dy * dy);\r\n        return { x: ti.x - ah * dx / l, y: ti.y - ah * dy / l };\r\n    }\r\n\r\n    class Node {\r\n        prev: RBTree<Node>;\r\n        next: RBTree<Node>;\r\n\r\n        constructor(public v: Variable, public r: Rectangle, public pos: number) {\r\n            this.prev = makeRBTree();\r\n            this.next = makeRBTree();\r\n        }\r\n    }\r\n\r\n    class Event {\r\n        constructor(public isOpen: boolean, public v: Node, public pos: number) {}\r\n    }\r\n\r\n    function compareEvents(a: Event, b: Event): number {\r\n        if (a.pos > b.pos) {\r\n            return 1;\r\n        }\r\n        if (a.pos < b.pos) {\r\n            return -1;\r\n        }\r\n        if (a.isOpen) {\r\n            // open must come before close\r\n            return -1;\r\n        }\r\n        if (b.isOpen) {\r\n            // open must come before close\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function makeRBTree(): RBTree<Node> {\r\n        return new RBTree<Node>((a, b) => a.pos - b.pos);\r\n    }\r\n\r\n    interface RectAccessors {\r\n        getCentre: (r: Rectangle) => number;\r\n        getOpen: (r: Rectangle) => number;\r\n        getClose: (r: Rectangle) => number;\r\n        getSize: (r: Rectangle) => number;\r\n        makeRect: (open: number, close: number, center: number, size: number) => Rectangle;\r\n        findNeighbours: (v: Node, scanline: RBTree<Node>) => void;\r\n    }\r\n\r\n    var xRect: RectAccessors = {\r\n        getCentre: r=> r.cx(),\r\n        getOpen: r=> r.y,\r\n        getClose: r=> r.Y,\r\n        getSize: r=> r.width(),\r\n        makeRect: (open, close, center, size) => new Rectangle(center - size / 2, center + size / 2, open, close) ,\r\n        findNeighbours: findXNeighbours\r\n    };\r\n\r\n    var yRect: RectAccessors = {\r\n        getCentre: r=> r.cy(),\r\n        getOpen: r=> r.x,\r\n        getClose: r=> r.X,\r\n        getSize: r=> r.height(),\r\n        makeRect: (open, close, center, size) => new Rectangle(open, close, center - size / 2, center + size / 2),\r\n        findNeighbours: findYNeighbours\r\n    };\r\n\r\n    function generateGroupConstraints(root: ProjectionGroup, f: RectAccessors, minSep: number, isContained: boolean = false): Constraint[]\r\n    {\r\n        var padding = root.padding,\r\n            gn = typeof root.groups !== 'undefined' ? root.groups.length : 0,\r\n            ln = typeof root.leaves !== 'undefined' ? root.leaves.length : 0,\r\n            childConstraints: Constraint[] = !gn ? []\r\n            : root.groups.reduce((ccs: Constraint[], g) => ccs.concat(generateGroupConstraints(g, f, minSep, true)), []),\r\n            n = (isContained ? 2 : 0) + ln + gn,\r\n            vs: Variable[] = new Array(n),\r\n            rs: Rectangle[] = new Array(n),\r\n            i = 0,\r\n            add = (r, v) => { rs[i] = r; vs[i++] = v };\r\n        if (isContained) {\r\n            // if this group is contained by another, then we add two dummy vars and rectangles for the borders\r\n            var b: Rectangle = root.bounds,\r\n                c = f.getCentre(b), s = f.getSize(b) / 2,\r\n                open = f.getOpen(b), close = f.getClose(b),\r\n                min = c - s + padding / 2, max = c + s - padding / 2;\r\n            root.minVar.desiredPosition = min;\r\n            add(f.makeRect(open, close, min, padding), root.minVar);\r\n            root.maxVar.desiredPosition = max;\r\n            add(f.makeRect(open, close, max, padding), root.maxVar);\r\n        }\r\n        if (ln) root.leaves.forEach(l => add(l.bounds, l.variable));\r\n        if (gn) root.groups.forEach(g => {\r\n            var b: Rectangle = g.bounds;\r\n            add(f.makeRect(f.getOpen(b), f.getClose(b), f.getCentre(b), f.getSize(b)), g.minVar);\r\n        });\r\n        var cs = generateConstraints(rs, vs, f, minSep);\r\n        if (gn) {\r\n            vs.forEach(v => { v.cOut = [], v.cIn = [] });\r\n            cs.forEach(c => { c.left.cOut.push(c), c.right.cIn.push(c) });\r\n            root.groups.forEach(g => {\r\n                var gapAdjustment = (g.padding - f.getSize(g.bounds)) / 2;\r\n                g.minVar.cIn.forEach(c => c.gap += gapAdjustment);\r\n                g.minVar.cOut.forEach(c => { c.left = g.maxVar; c.gap += gapAdjustment; });\r\n            });\r\n        }\r\n        return childConstraints.concat(cs);\r\n    }\r\n\r\n    function generateConstraints(rs: Rectangle[], vars: Variable[],\r\n        rect: RectAccessors, minSep: number): Constraint[]\r\n    {\r\n        var i, n = rs.length;\r\n        var N = 2 * n;\r\n        console.assert(vars.length >= n);\r\n        var events = new Array<Event>(N);\r\n        for (i = 0; i < n; ++i) {\r\n            var r = rs[i];\r\n            var v = new Node(vars[i], r, rect.getCentre(r));\r\n            events[i] = new Event(true, v, rect.getOpen(r));\r\n            events[i + n] = new Event(false, v, rect.getClose(r));\r\n        }\r\n        events.sort(compareEvents);\r\n        var cs = new Array<Constraint>();\r\n        var scanline = makeRBTree();\r\n        for (i = 0; i < N; ++i) {\r\n            var e = events[i];\r\n            var v = e.v;\r\n            if (e.isOpen) {\r\n                scanline.insert(v);\r\n                rect.findNeighbours(v, scanline);\r\n            } else {\r\n                // close event\r\n                scanline.remove(v);\r\n                var makeConstraint = (l, r) => {\r\n                    var sep = (rect.getSize(l.r) + rect.getSize(r.r)) / 2 + minSep;\r\n                    cs.push(new Constraint(l.v, r.v, sep));\r\n                };\r\n                var visitNeighbours = (forward, reverse, mkcon) => {\r\n                    var u, it = v[forward].iterator();\r\n                    while ((u = it[forward]()) !== null) {\r\n                        mkcon(u, v);\r\n                        u[reverse].remove(v);\r\n                    }\r\n                };\r\n                visitNeighbours(\"prev\", \"next\", (u, v) => makeConstraint(u, v));\r\n                visitNeighbours(\"next\", \"prev\", (u, v) => makeConstraint(v, u));\r\n            }\r\n        }\r\n        console.assert(scanline.size === 0);\r\n        return cs;\r\n    }\r\n\r\n    function findXNeighbours(v: Node, scanline: RBTree<Node>): void {\r\n        var f = (forward, reverse) => {\r\n            var it = scanline.findIter(v);\r\n            var u;\r\n            while ((u = it[forward]()) !== null) {\r\n                var uovervX = u.r.overlapX(v.r);\r\n                if (uovervX <= 0 || uovervX <= u.r.overlapY(v.r)) {\r\n                    v[forward].insert(u);\r\n                    u[reverse].insert(v);\r\n                }\r\n                if (uovervX <= 0) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        f(\"next\", \"prev\");\r\n        f(\"prev\", \"next\");\r\n    }\r\n\r\n    function findYNeighbours(v: Node, scanline: RBTree<Node>): void {\r\n        var f = (forward, reverse) => {\r\n            var u = scanline.findIter(v)[forward]();\r\n            if (u !== null && u.r.overlapX(v.r) > 0) {\r\n                v[forward].insert(u);\r\n                u[reverse].insert(v);\r\n            }\r\n        }\r\n        f(\"next\", \"prev\");\r\n        f(\"prev\", \"next\");\r\n    }\r\n\r\n    export function generateXConstraints(rs: Rectangle[], vars: Variable[]): Constraint[] {\r\n        return generateConstraints(rs, vars, xRect, 1e-6);\r\n    }\r\n\r\n    export function generateYConstraints(rs: Rectangle[], vars: Variable[]): Constraint[] {\r\n        return generateConstraints(rs, vars, yRect, 1e-6);\r\n    }\r\n\r\n    export function generateXGroupConstraints(root: ProjectionGroup): Constraint[] {\r\n        return generateGroupConstraints(root, xRect, 1e-6);\r\n    }\r\n\r\n    export function generateYGroupConstraints(root: ProjectionGroup): Constraint[] {\r\n        return generateGroupConstraints(root, yRect, 1e-6);\r\n    }\r\n\r\n    export function removeOverlaps(rs: Rectangle[]): void {\r\n        var vs = rs.map(r => new Variable(r.cx()));\r\n        var cs = generateXConstraints(rs, vs);\r\n        var solver = new Solver(vs, cs);\r\n        solver.solve();\r\n        vs.forEach((v, i) => rs[i].setXCentre(v.position()));\r\n        vs = rs.map(r=> new Variable(r.cy()));\r\n        cs = generateYConstraints(rs, vs);\r\n        solver = new Solver(vs, cs);\r\n        solver.solve();\r\n        vs.forEach((v, i) => rs[i].setYCentre(v.position()));\r\n    }\r\n\r\n    export interface GraphNode extends Leaf {\r\n        fixed: boolean;\r\n        fixedWeight?: number;\r\n        width: number;\r\n        height: number;\r\n        x: number;\r\n        y: number;\r\n        px: number;\r\n        py: number;\r\n    }\r\n\r\n    export class IndexedVariable extends Variable {\r\n        constructor(public index: number, w: number) {\r\n            super(0, w);\r\n        }\r\n    }\r\n\r\n    export class Projection {\r\n        private xConstraints: Constraint[];\r\n        private yConstraints: Constraint[];\r\n        private variables: Variable[];\r\n\r\n        constructor(private nodes: GraphNode[],\r\n            private groups: ProjectionGroup[],\r\n            private rootGroup: ProjectionGroup = null,\r\n            constraints: any[]= null,\r\n            private avoidOverlaps: boolean = false)\r\n        {\r\n            this.variables = nodes.map((v, i) => {\r\n                return v.variable = new IndexedVariable(i, 1);\r\n            });\r\n\r\n            if (constraints) this.createConstraints(constraints);\r\n\r\n            if (avoidOverlaps && rootGroup && typeof rootGroup.groups !== 'undefined') {\r\n                nodes.forEach(v => {\r\n\t\t\t\t\tif (!v.width || !v.height)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//If undefined, default to nothing\r\n\t\t\t\t\t\tv.bounds = new Rectangle(v.x, v.x, v.y, v.y);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n                    var w2 = v.width / 2, h2 = v.height / 2;\r\n                    v.bounds = new Rectangle(v.x - w2, v.x + w2, v.y - h2, v.y + h2);\r\n                });\r\n                computeGroupBounds(rootGroup);\r\n                var i = nodes.length;\r\n                groups.forEach(g => {\r\n                    this.variables[i] = g.minVar = new IndexedVariable(i++, typeof g.stiffness !== \"undefined\" ? g.stiffness : 0.01);\r\n                    this.variables[i] = g.maxVar = new IndexedVariable(i++, typeof g.stiffness !== \"undefined\" ? g.stiffness : 0.01);\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        private createSeparation(c: any) : Constraint {\r\n            return new Constraint(\r\n                this.nodes[c.left].variable,\r\n                this.nodes[c.right].variable,\r\n                c.gap,\r\n                typeof c.equality !== \"undefined\" ? c.equality : false);\r\n        }\r\n\r\n        // simple satisfaction of alignment constraints to ensure initial feasibility\r\n        private makeFeasible(c: any) {\r\n            if (!this.avoidOverlaps) return;\r\n            // sort nodes in constraint by position (along \"guideline\")\r\n            var axis = 'x', dim = 'width';\r\n            if (c.axis === 'x') axis = 'y', dim = 'height';\r\n            var vs: GraphNode[] = c.offsets.map(o => this.nodes[o.node]).sort((a, b) => a[axis] - b[axis]);\r\n            var p: GraphNode = null;\r\n            vs.forEach(v => {\r\n                // if two nodes overlap then shove the second one along\r\n                if (p) {\r\n                    let nextPos = p[axis] + p[dim];\r\n                    if (nextPos > v[axis]) {\r\n                        v[axis] = nextPos;\r\n                    }\r\n                }\r\n                p = v;\r\n            });\r\n        }\r\n\r\n        private createAlignment(c: any) {\r\n            var u = this.nodes[c.offsets[0].node].variable;\r\n            this.makeFeasible(c);\r\n            var cs = c.axis === 'x' ? this.xConstraints : this.yConstraints;\r\n            c.offsets.slice(1).forEach(o => {\r\n                var v = this.nodes[o.node].variable;\r\n                cs.push(new Constraint(u, v, o.offset, true));\r\n            });\r\n        }\r\n\r\n        private createConstraints(constraints: any[]) {\r\n            var isSep = c => typeof c.type === 'undefined' || c.type === 'separation';\r\n            this.xConstraints = constraints\r\n                .filter(c => c.axis === \"x\" && isSep(c))\r\n                .map(c => this.createSeparation(c));\r\n            this.yConstraints = constraints\r\n                .filter(c => c.axis === \"y\" && isSep(c))\r\n                .map(c => this.createSeparation(c));\r\n            constraints\r\n                .filter(c => c.type === 'alignment')\r\n                .forEach(c => this.createAlignment(c));\r\n        }\r\n\r\n        private setupVariablesAndBounds(x0: number[], y0: number[], desired: number[], getDesired: (v: GraphNode) => number) {\r\n            this.nodes.forEach((v, i) => {\r\n                if (v.fixed) {\r\n                    v.variable.weight = v.fixedWeight ? v.fixedWeight : 1000;\r\n                    desired[i] = getDesired(v);\r\n                } else {\r\n                    v.variable.weight = 1;\r\n                }\r\n                var w = (v.width || 0) / 2, h = (v.height || 0) / 2;\r\n                var ix = x0[i], iy = y0[i];\r\n                v.bounds = new Rectangle(ix - w, ix + w, iy - h, iy + h);\r\n            });\r\n        }\r\n\r\n        xProject(x0: number[], y0: number[], x: number[]) {\r\n            if (!this.rootGroup && !(this.avoidOverlaps || this.xConstraints)) return;\r\n            this.project(x0, y0, x0, x, v=> v.px, this.xConstraints, generateXGroupConstraints,\r\n                v => v.bounds.setXCentre(x[(<IndexedVariable>v.variable).index] = v.variable.position()),\r\n                g => {\r\n                    var xmin = x[(<IndexedVariable>g.minVar).index] = g.minVar.position();\r\n                    var xmax = x[(<IndexedVariable>g.maxVar).index] = g.maxVar.position();\r\n                    var p2 = g.padding / 2;\r\n                    g.bounds.x = xmin - p2;\r\n                    g.bounds.X = xmax + p2;\r\n                });\r\n        }\r\n\r\n        yProject(x0: number[], y0: number[], y: number[]) {\r\n            if (!this.rootGroup && !this.yConstraints) return;\r\n            this.project(x0, y0, y0, y, v=> v.py, this.yConstraints, generateYGroupConstraints,\r\n                v => v.bounds.setYCentre(y[(<IndexedVariable>v.variable).index] = v.variable.position()),\r\n                g => {\r\n                    var ymin = y[(<IndexedVariable>g.minVar).index] = g.minVar.position();\r\n                    var ymax = y[(<IndexedVariable>g.maxVar).index] = g.maxVar.position();\r\n                    var p2 = g.padding / 2;\r\n                    g.bounds.y = ymin - p2;;\r\n                    g.bounds.Y = ymax + p2;\r\n                });\r\n        }\r\n\r\n        projectFunctions(): { (x0: number[], y0: number[], r: number[]): void }[]{\r\n            return [\r\n                (x0, y0, x) => this.xProject(x0, y0, x),\r\n                (x0, y0, y) => this.yProject(x0, y0, y)\r\n            ];\r\n        }\r\n\r\n        private project(x0: number[], y0: number[], start: number[], desired: number[],\r\n            getDesired: (v: GraphNode) => number,\r\n            cs: Constraint[],\r\n            generateConstraints: (g: ProjectionGroup) => Constraint[],\r\n            updateNodeBounds: (v: GraphNode) => any,\r\n            updateGroupBounds: (g: ProjectionGroup) => any)\r\n        {\r\n            this.setupVariablesAndBounds(x0, y0, desired, getDesired);\r\n            if (this.rootGroup && this.avoidOverlaps) {\r\n                computeGroupBounds(this.rootGroup);\r\n                cs = cs.concat(generateConstraints(this.rootGroup));\r\n            }\r\n            this.solve(this.variables, cs, start, desired);\r\n            this.nodes.forEach(updateNodeBounds);\r\n            if (this.rootGroup && this.avoidOverlaps) {\r\n                this.groups.forEach(updateGroupBounds);\r\n                computeGroupBounds(this.rootGroup);\r\n            }\r\n        }\r\n\r\n        private solve(vs: Variable[], cs: Constraint[], starting: number[], desired: number[]) {\r\n            var solver = new Solver(vs, cs);\r\n            solver.setStartingPositions(starting);\r\n            solver.setDesiredPositions(desired);\r\n            solver.solve();\r\n        }\r\n    }\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2220, "column": 0}, "map": {"version":3,"file":"pqueue.js","sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/node_modules/webcola/WebCola/src/pqueue.ts"],"sourcesContent":["\r\nexport class PairingHeap<T> {\r\n    private subheaps : PairingHeap<T>[];\r\n    // from: https://gist.github.com/nervoussystem\r\n    //{elem:object, subheaps:[array of heaps]}\r\n    constructor(public elem: T) {\r\n        this.subheaps = [];\r\n    }\r\n\r\n    public toString(selector) : string {\r\n        var str = \"\", needComma = false;\r\n        for (var i = 0; i < this.subheaps.length; ++i) {\r\n            var subheap: PairingHeap<T> = this.subheaps[i];\r\n            if (!subheap.elem) {\r\n                needComma = false;\r\n                continue;\r\n            }\r\n            if (needComma) {\r\n                str = str + \",\";\r\n            }\r\n            str = str + subheap.toString(selector);\r\n            needComma = true;\r\n        }\r\n        if (str !== \"\") {\r\n            str = \"(\" + str + \")\";\r\n        }\r\n        return (this.elem ? selector(this.elem) : \"\") + str;\r\n    }\r\n\r\n    public forEach(f) {\r\n        if (!this.empty()) {\r\n            f(this.elem, this);\r\n            this.subheaps.forEach(s => s.forEach(f));\r\n        }\r\n    }\r\n\r\n    public count(): number {\r\n        return this.empty() ? 0 : 1 + this.subheaps.reduce((n: number, h: PairingHeap<T>) => {\r\n            return n + h.count();\r\n        }, 0);\r\n    }\r\n\r\n    public min() : T {\r\n        return this.elem;\r\n    }\r\n\r\n    public empty() : boolean {\r\n        return this.elem == null;\r\n    }\r\n\r\n    public contains(h: PairingHeap<T>): boolean {\r\n        if (this === h) return true;\r\n        for (var i = 0; i < this.subheaps.length; i++) {\r\n            if (this.subheaps[i].contains(h)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public isHeap(lessThan: (a: T, b: T) => boolean): boolean {\r\n        return this.subheaps.every(h=> lessThan(this.elem, h.elem) && h.isHeap(lessThan));\r\n    }\r\n\r\n    public insert(obj : T, lessThan) : PairingHeap<T> {\r\n        return this.merge(new PairingHeap<T>(obj), lessThan);\r\n    }\r\n\r\n    public merge(heap2: PairingHeap<T>, lessThan): PairingHeap<T> {\r\n        if (this.empty()) return heap2;\r\n        else if (heap2.empty()) return this;\r\n        else if (lessThan(this.elem, heap2.elem)) {\r\n            this.subheaps.push(heap2);\r\n            return this;\r\n        } else {\r\n            heap2.subheaps.push(this);\r\n            return heap2;\r\n        }\r\n    }\r\n\r\n    public removeMin(lessThan: (a: T, b: T) => boolean): PairingHeap<T> {\r\n        if (this.empty()) return null;\r\n        else return this.mergePairs(lessThan);\r\n    }\r\n\r\n    public mergePairs(lessThan: (a: T, b: T) => boolean) : PairingHeap<T> {\r\n        if (this.subheaps.length == 0) return new PairingHeap<T>(null);\r\n        else if (this.subheaps.length == 1) { return this.subheaps[0]; }\r\n        else {\r\n            var firstPair = this.subheaps.pop().merge(this.subheaps.pop(), lessThan);\r\n            var remaining = this.mergePairs(lessThan);\r\n            return firstPair.merge(remaining, lessThan);\r\n        }\r\n    }\r\n    public decreaseKey(subheap: PairingHeap<T>, newValue: T, setHeapNode: (e: T, h: PairingHeap<T>)=>void, lessThan: (a: T, b: T) => boolean): PairingHeap<T> {\r\n        var newHeap = subheap.removeMin(lessThan);\r\n        //reassign subheap values to preserve tree\r\n        subheap.elem = newHeap.elem;\r\n        subheap.subheaps = newHeap.subheaps;\r\n        if (setHeapNode !== null && newHeap.elem !== null) {\r\n            setHeapNode(subheap.elem, subheap);\r\n        }\r\n        var pairingNode = new PairingHeap(newValue);\r\n        if (setHeapNode !== null) {\r\n            setHeapNode(newValue, pairingNode);\r\n        }\r\n        return this.merge(pairingNode, lessThan);\r\n    }\r\n}\r\n\r\n/**\r\n * @class PriorityQueue a min priority queue backed by a pairing heap\r\n */\r\nexport class PriorityQueue<T> {\r\n    private root : PairingHeap<T>;\r\n    constructor(private lessThan: (a: T, b: T) => boolean) { }\r\n    /**\r\n     * @method top\r\n     * @return the top element (the min element as defined by lessThan)\r\n     */\r\n    public top() : T {\r\n        if (this.empty()) { return null; }\r\n        return this.root.elem;\r\n    }\r\n    /**\r\n     * @method push\r\n     * put things on the heap\r\n     */\r\n    public push(...args: T[]): PairingHeap<T> {\r\n        var pairingNode;\r\n        for (var i = 0, arg; arg=args[i]; ++i) {\r\n            pairingNode = new PairingHeap(arg);\r\n            this.root = this.empty() ?\r\n                pairingNode : this.root.merge(pairingNode, this.lessThan);\r\n        }\r\n        return pairingNode;\r\n    }\r\n    /**\r\n     * @method empty\r\n     * @return true if no more elements in queue\r\n     */\r\n    public empty(): boolean {\r\n        return !this.root || !this.root.elem;\r\n    }\r\n    /**\r\n     * @method isHeap check heap condition (for testing)\r\n     * @return true if queue is in valid state\r\n     */\r\n    public isHeap(): boolean {\r\n        return this.root.isHeap(this.lessThan);\r\n    }\r\n    /**\r\n     * @method forEach apply f to each element of the queue\r\n     * @param f function to apply\r\n     */\r\n    public forEach(f) {\r\n        this.root.forEach(f);\r\n    }\r\n    /**\r\n     * @method pop remove and return the min element from the queue\r\n     */\r\n    public pop(): T {\r\n        if (this.empty()) {\r\n            return null;\r\n        }\r\n        var obj = this.root.min();\r\n        this.root = this.root.removeMin(this.lessThan);\r\n        return obj;\r\n    }\r\n    /**\r\n     * @method reduceKey reduce the key value of the specified heap node\r\n     */\r\n    public reduceKey(heapNode: PairingHeap<T>, newKey: T, setHeapNode: (e: T, h: PairingHeap<T>)=>void = null): void {\r\n        this.root = this.root.decreaseKey(heapNode, newKey, setHeapNode, this.lessThan);\r\n    }\r\n    public toString(selector) {\r\n        return this.root.toString(selector);\r\n    }\r\n    /**\r\n     * @method count\r\n     * @return number of elements in queue\r\n     */\r\n    public count() {\r\n        return this.root.count();\r\n    }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2378, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2383, "column": 0}, "map": {"version":3,"file":"shortestpaths.js","sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/node_modules/webcola/WebCola/src/shortestpaths.ts"],"sourcesContent":["import {PairingHeap, PriorityQueue} from './pqueue'\r\n\r\nclass Neighbour {\r\n    constructor(public id: number, public distance: number) { }\r\n}\r\n\r\nclass Node {\r\n    constructor(public id: number) {\r\n        this.neighbours = [];\r\n    }\r\n    neighbours: Neighbour[];\r\n    d: number;\r\n    prev: Node;\r\n    q: PairingHeap<Node>;\r\n}\r\n\r\nclass QueueEntry {\r\n    constructor(public node: Node, public prev: QueueEntry, public d: number) {}\r\n}\r\n\r\n/**\r\n * calculates all-pairs shortest paths or shortest paths from a single node\r\n * @class Calculator\r\n * @constructor\r\n * @param n {number} number of nodes\r\n * @param es {Edge[]} array of edges\r\n */\r\nexport class Calculator<Link> {\r\n    private neighbours: Node[];\r\n\r\n    constructor(public n: number, public es: Link[], getSourceIndex: (l: Link) => number, getTargetIndex: (l: Link) => number, getLength: (l: Link) => number) {\r\n        this.neighbours = new Array(this.n);\r\n        var i = this.n; while (i--) this.neighbours[i] = new Node(i);\r\n\r\n        i = this.es.length; while (i--) {\r\n            var e = this.es[i];\r\n            var u: number = getSourceIndex(e), v: number = getTargetIndex(e);\r\n            var d = getLength(e);\r\n            this.neighbours[u].neighbours.push(new Neighbour(v, d));\r\n            this.neighbours[v].neighbours.push(new Neighbour(u, d));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * compute shortest paths for graph over n nodes with edges an array of source/target pairs\r\n     * edges may optionally have a length attribute.  1 is the default.\r\n     * Uses Johnson's algorithm.\r\n     *\r\n     * @method DistanceMatrix\r\n     * @return the distance matrix\r\n     */\r\n    DistanceMatrix(): number[][] {\r\n        var D = new Array(this.n);\r\n        for (var i = 0; i < this.n; ++i) {\r\n            D[i] = this.dijkstraNeighbours(i);\r\n        }\r\n        return D;\r\n    }\r\n\r\n    /**\r\n     * get shortest paths from a specified start node\r\n     * @method DistancesFromNode\r\n     * @param start node index\r\n     * @return array of path lengths\r\n     */\r\n    DistancesFromNode(start: number): number[] {\r\n        return this.dijkstraNeighbours(start);\r\n    }\r\n\r\n    PathFromNodeToNode(start: number, end: number): number[] {\r\n        return this.dijkstraNeighbours(start, end);\r\n    }\r\n\r\n    // find shortest path from start to end, with the opportunity at\r\n    // each edge traversal to compute a custom cost based on the\r\n    // previous edge.  For example, to penalise bends.\r\n    PathFromNodeToNodeWithPrevCost(\r\n        start: number,\r\n        end: number,\r\n        prevCost: (u:number,v:number,w:number)=>number): number[]\r\n    {\r\n        var q = new PriorityQueue<QueueEntry>((a, b) => a.d <= b.d),\r\n            u: Node = this.neighbours[start],\r\n            qu: QueueEntry = new QueueEntry(u,null,0),\r\n            visitedFrom = {};\r\n        q.push(qu);\r\n        while(!q.empty()) {\r\n            qu = q.pop();\r\n            u = qu.node;\r\n            if (u.id === end) {\r\n                break;\r\n            }\r\n            var i = u.neighbours.length; while (i--) {\r\n                var neighbour = u.neighbours[i],\r\n                    v = this.neighbours[neighbour.id];\r\n\r\n                // don't double back\r\n                if (qu.prev && v.id === qu.prev.node.id) continue;\r\n\r\n                // don't retraverse an edge if it has already been explored\r\n                // from a lower cost route\r\n                var viduid = v.id + ',' + u.id;\r\n                if(viduid in visitedFrom && visitedFrom[viduid] <= qu.d)\r\n                    continue;\r\n\r\n                var cc = qu.prev ? prevCost(qu.prev.node.id, u.id, v.id) : 0,\r\n                    t = qu.d + neighbour.distance + cc;\r\n\r\n                // store cost of this traversal\r\n                visitedFrom[viduid] = t;\r\n                q.push(new QueueEntry(v, qu, t));\r\n            }\r\n        }\r\n        var path:number[] = [];\r\n        while (qu.prev) {\r\n            qu = qu.prev;\r\n            path.push(qu.node.id);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    private dijkstraNeighbours(start: number, dest: number = -1): number[] {\r\n        var q = new PriorityQueue<Node>((a, b) => a.d <= b.d),\r\n            i = this.neighbours.length,\r\n            d: number[] = new Array(i);\r\n        while (i--) {\r\n            var node: Node = this.neighbours[i];\r\n            node.d = i === start ? 0 : Number.POSITIVE_INFINITY;\r\n            node.q = q.push(node);\r\n        }\r\n        while (!q.empty()) {\r\n            // console.log(q.toString(function (u) { return u.id + \"=\" + (u.d === Number.POSITIVE_INFINITY ? \"\\u221E\" : u.d.toFixed(2) )}));\r\n            var u = q.pop();\r\n            d[u.id] = u.d;\r\n            if (u.id === dest) {\r\n                var path: number[] = [];\r\n                var v = u;\r\n                while (typeof v.prev !== 'undefined') {\r\n                    path.push(v.prev.id);\r\n                    v = v.prev;\r\n                }\r\n                return path;\r\n            }\r\n            i = u.neighbours.length; while (i--) {\r\n                var neighbour = u.neighbours[i];\r\n                var v = this.neighbours[neighbour.id];\r\n                var t = u.d + neighbour.distance;\r\n                if (u.d !== Number.MAX_VALUE && v.d > t) {\r\n                    v.d = t;\r\n                    v.prev = u;\r\n                    q.reduceKey(v.q, v, (e,q)=>e.q = q);\r\n                }\r\n            }\r\n        }\r\n        return d;\r\n    }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2511, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2516, "column": 0}, "map": {"version":3,"file":"geom.js","sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/node_modules/webcola/WebCola/src/geom.ts"],"sourcesContent":["import {Rectangle} from './rectangle'\r\n    export class Point {\r\n        x: number;\r\n        y: number;\r\n    }\r\n\r\n    export class LineSegment {\r\n        constructor(public x1: number, public y1: number, public x2: number, public y2: number) { }\r\n    }\r\n\r\n    export class PolyPoint extends Point {\r\n        polyIndex: number;\r\n    }\r\n\r\n    /** tests if a point is Left|On|Right of an infinite line.\r\n     * @param points P0, P1, and P2\r\n     * @return >0 for P2 left of the line through P0 and P1\r\n     *            =0 for P2 on the line\r\n     *            <0 for P2 right of the line\r\n     */\r\n    export function isLeft(P0: Point, P1: Point, P2: Point): number {\r\n        return (P1.x - P0.x) * (P2.y - P0.y) - (P2.x - P0.x) * (P1.y - P0.y);\r\n    }\r\n\r\n    function above(p: Point, vi: Point, vj: Point): boolean {\r\n        return isLeft(p, vi, vj) > 0;\r\n    }\r\n\r\n    function below(p: Point, vi: Point, vj: Point): boolean {\r\n        return isLeft(p, vi, vj) < 0;\r\n    }\r\n\r\n\r\n    /**\r\n     * returns the convex hull of a set of points using Andrew's monotone chain algorithm\r\n     * see: http://geomalgorithms.com/a10-_hull-1.html#Monotone%20Chain\r\n     * @param S array of points\r\n     * @return the convex hull as an array of points\r\n     */\r\n    export function ConvexHull(S: Point[]): Point[] {\r\n        var P = S.slice(0).sort((a, b) => a.x !== b.x ? b.x - a.x : b.y - a.y);\r\n        var n = S.length, i;\r\n        var minmin = 0;\r\n        var xmin = P[0].x;\r\n        for (i = 1; i < n; ++i) {\r\n            if (P[i].x !== xmin) break;\r\n        }\r\n        var minmax = i - 1;\r\n        var H: Point[] = [];\r\n        H.push(P[minmin]); // push minmin point onto stack\r\n        if (minmax === n - 1) { // degenerate case: all x-coords == xmin\r\n            if (P[minmax].y !== P[minmin].y) // a  nontrivial segment\r\n                H.push(P[minmax]);\r\n        } else {\r\n            // Get the indices of points with max x-coord and min|max y-coord\r\n            var maxmin, maxmax = n - 1;\r\n            var xmax = P[n - 1].x;\r\n            for (i = n - 2; i >= 0; i--)\r\n                if (P[i].x !== xmax) break;\r\n            maxmin = i + 1;\r\n\r\n            // Compute the lower hull on the stack H\r\n            i = minmax;\r\n            while (++i <= maxmin) {\r\n                // the lower line joins P[minmin]  with P[maxmin]\r\n                if (isLeft(P[minmin], P[maxmin], P[i]) >= 0 && i < maxmin)\r\n                    continue; // ignore P[i] above or on the lower line\r\n\r\n                while (H.length > 1) // there are at least 2 points on the stack\r\n                {\r\n                    // test if  P[i] is left of the line at the stack top\r\n                    if (isLeft(H[H.length - 2], H[H.length - 1], P[i]) > 0)\r\n                        break; // P[i] is a new hull  vertex\r\n                    else\r\n                        H.length -= 1; // pop top point off  stack\r\n                }\r\n                if (i != minmin) H.push(P[i]);\r\n            }\r\n\r\n            // Next, compute the upper hull on the stack H above the bottom hull\r\n            if (maxmax != maxmin) // if  distinct xmax points\r\n                H.push(P[maxmax]); // push maxmax point onto stack\r\n            var bot = H.length; // the bottom point of the upper hull stack\r\n            i = maxmin;\r\n            while (--i >= minmax) {\r\n                // the upper line joins P[maxmax]  with P[minmax]\r\n                if (isLeft(P[maxmax], P[minmax], P[i]) >= 0 && i > minmax)\r\n                    continue; // ignore P[i] below or on the upper line\r\n\r\n                while (H.length > bot) // at least 2 points on the upper stack\r\n                {\r\n                    // test if  P[i] is left of the line at the stack top\r\n                    if (isLeft(H[H.length - 2], H[H.length - 1], P[i]) > 0)\r\n                        break; // P[i] is a new hull  vertex\r\n                    else\r\n                        H.length -= 1; // pop top point off  stack\r\n                }\r\n                if (i != minmin) H.push(P[i]); // push P[i] onto stack\r\n            }\r\n        }\r\n        return H;\r\n    }\r\n\r\n    // apply f to the points in P in clockwise order around the point p\r\n    export function clockwiseRadialSweep(p: Point, P: Point[], f: (p: Point) => void) {\r\n        P.slice(0).sort(\r\n            (a, b) => Math.atan2(a.y - p.y, a.x - p.x) - Math.atan2(b.y - p.y, b.x - p.x)\r\n            ).forEach(f);\r\n    }\r\n\r\n    function nextPolyPoint(p: PolyPoint, ps: PolyPoint[]): PolyPoint {\r\n        if (p.polyIndex === ps.length - 1) return ps[0];\r\n        return ps[p.polyIndex + 1];\r\n    }\r\n\r\n    function prevPolyPoint(p: PolyPoint, ps: PolyPoint[]): PolyPoint {\r\n        if (p.polyIndex === 0) return ps[ps.length - 1];\r\n        return ps[p.polyIndex - 1];\r\n    }\r\n\r\n    // tangent_PointPolyC(): fast binary search for tangents to a convex polygon\r\n    //    Input:  P = a 2D point (exterior to the polygon)\r\n    //            n = number of polygon vertices\r\n    //            V = array of vertices for a 2D convex polygon\r\n    //    Output: rtan = index of rightmost tangent point V[rtan]\r\n    //            ltan = index of leftmost tangent point V[ltan]\r\n    function tangent_PointPolyC(P: Point, V: Point[]): { rtan: number; ltan: number } {\r\n        // Rtangent_PointPolyC and Ltangent_PointPolyC require polygon to be\r\n        // \"closed\" with the first vertex duplicated at end, so V[n-1] = V[0].\r\n        let Vclosed = V.slice(0);  // Copy V\r\n        Vclosed.push(V[0]);        // Add V[0] at end\r\n\r\n        return { rtan: Rtangent_PointPolyC(P, Vclosed), ltan: Ltangent_PointPolyC(P, Vclosed) };\r\n    }\r\n\r\n\r\n    // Rtangent_PointPolyC(): binary search for convex polygon right tangent\r\n    //    Input:  P = a 2D point (exterior to the polygon)\r\n    //            n = number of polygon vertices\r\n    //            V = array of vertices for a 2D convex polygon with first\r\n    //                vertex duplicated as last, so V[n-1] = V[0]\r\n    //    Return: index \"i\" of rightmost tangent point V[i]\r\n    function Rtangent_PointPolyC(P: Point, V: Point[]): number {\r\n        var n = V.length - 1;\r\n\r\n        // use binary search for large convex polygons\r\n        var a: number, b: number, c: number;            // indices for edge chain endpoints\r\n        var upA: boolean, dnC: boolean;           // test for up direction of edges a and c\r\n\r\n        // rightmost tangent = maximum for the isLeft() ordering\r\n        // test if V[0] is a local maximum\r\n        if (below(P, V[1], V[0]) && !above(P, V[n - 1], V[0]))\r\n            return 0;               // V[0] is the maximum tangent point\r\n\r\n        for (a = 0, b = n; ;) {          // start chain = [0,n] with V[n]=V[0]\r\n            if (b - a === 1)\r\n                if (above(P, V[a], V[b]))\r\n                    return a;\r\n                else\r\n                    return b;\r\n\r\n            c = Math.floor((a + b) / 2);        // midpoint of [a,b], and 0<c<n\r\n            dnC = below(P, V[c + 1], V[c]);\r\n            if (dnC && !above(P, V[c - 1], V[c]))\r\n                return c;          // V[c] is the maximum tangent point\r\n\r\n            // no max yet, so continue with the binary search\r\n            // pick one of the two subchains [a,c] or [c,b]\r\n            upA = above(P, V[a + 1], V[a]);\r\n            if (upA) {                       // edge a points up\r\n                if (dnC)                         // edge c points down\r\n                    b = c;                           // select [a,c]\r\n                else {                           // edge c points up\r\n                    if (above(P, V[a], V[c]))     // V[a] above V[c]\r\n                        b = c;                       // select [a,c]\r\n                    else                          // V[a] below V[c]\r\n                        a = c;                       // select [c,b]\r\n                }\r\n            }\r\n            else {                           // edge a points down\r\n                if (!dnC)                        // edge c points up\r\n                    a = c;                           // select [c,b]\r\n                else {                           // edge c points down\r\n                    if (below(P, V[a], V[c]))     // V[a] below V[c]\r\n                        b = c;                       // select [a,c]\r\n                    else                          // V[a] above V[c]\r\n                        a = c;                       // select [c,b]\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Ltangent_PointPolyC(): binary search for convex polygon left tangent\r\n    //    Input:  P = a 2D point (exterior to the polygon)\r\n    //            n = number of polygon vertices\r\n    //            V = array of vertices for a 2D convex polygon with first\r\n    //                vertex duplicated as last, so V[n-1] = V[0]\r\n    //    Return: index \"i\" of leftmost tangent point V[i]\r\n    function Ltangent_PointPolyC(P: Point, V: Point[]): number {\r\n        var n = V.length - 1;\r\n        // use binary search for large convex polygons\r\n        var a: number, b: number, c: number;             // indices for edge chain endpoints\r\n        var dnA: boolean, dnC: boolean;           // test for down direction of edges a and c\r\n\r\n        // leftmost tangent = minimum for the isLeft() ordering\r\n        // test if V[0] is a local minimum\r\n        if (above(P, V[n - 1], V[0]) && !below(P, V[1], V[0]))\r\n            return 0;               // V[0] is the minimum tangent point\r\n\r\n        for (a = 0, b = n; ;) {          // start chain = [0,n] with V[n] = V[0]\r\n            if (b - a === 1)\r\n                if (below(P, V[a], V[b]))\r\n                    return a;\r\n                else\r\n                    return b;\r\n\r\n            c = Math.floor((a + b) / 2);        // midpoint of [a,b], and 0<c<n\r\n            dnC = below(P, V[c + 1], V[c]);\r\n            if (above(P, V[c - 1], V[c]) && !dnC)\r\n                return c;          // V[c] is the minimum tangent point\r\n\r\n            // no min yet, so continue with the binary search\r\n            // pick one of the two subchains [a,c] or [c,b]\r\n            dnA = below(P, V[a + 1], V[a]);\r\n            if (dnA) {                       // edge a points down\r\n                if (!dnC)                        // edge c points up\r\n                    b = c;                           // select [a,c]\r\n                else {                           // edge c points down\r\n                    if (below(P, V[a], V[c]))     // V[a] below V[c]\r\n                        b = c;                       // select [a,c]\r\n                    else                          // V[a] above V[c]\r\n                        a = c;                       // select [c,b]\r\n                }\r\n            }\r\n            else {                           // edge a points up\r\n                if (dnC)                         // edge c points down\r\n                    a = c;                           // select [c,b]\r\n                else {                           // edge c points up\r\n                    if (above(P, V[a], V[c]))     // V[a] above V[c]\r\n                        b = c;                       // select [a,c]\r\n                    else                          // V[a] below V[c]\r\n                        a = c;                       // select [c,b]\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // RLtangent_PolyPolyC(): get the RL tangent between two convex polygons\r\n    //    Input:  m = number of vertices in polygon 1\r\n    //            V = array of vertices for convex polygon 1 with V[m]=V[0]\r\n    //            n = number of vertices in polygon 2\r\n    //            W = array of vertices for convex polygon 2 with W[n]=W[0]\r\n    //    Output: *t1 = index of tangent point V[t1] for polygon 1\r\n    //            *t2 = index of tangent point W[t2] for polygon 2\r\n    export function tangent_PolyPolyC(V: Point[], W: Point[], t1: (a: Point, b: Point[]) => number, t2: (a: Point, b: Point[]) => number, cmp1: (a: Point, b: Point, c: Point) => boolean, cmp2: (a: Point, b: Point, c: Point) => boolean): { t1: number; t2: number } {\r\n        var ix1: number, ix2: number;      // search indices for polygons 1 and 2\r\n\r\n        // first get the initial vertex on each polygon\r\n        ix1 = t1(W[0], V);   // right tangent from W[0] to V\r\n        ix2 = t2(V[ix1], W); // left tangent from V[ix1] to W\r\n\r\n        // ping-pong linear search until it stabilizes\r\n        var done = false;                    // flag when done\r\n        while (!done) {\r\n            done = true;                     // assume done until...\r\n            while (true) {\r\n                if (ix1 === V.length - 1) ix1 = 0;\r\n                if (cmp1(W[ix2], V[ix1], V[ix1 + 1])) break;\r\n                ++ix1;                       // get Rtangent from W[ix2] to V\r\n            }\r\n            while (true) {\r\n                if (ix2 === 0) ix2 = W.length - 1;\r\n                if (cmp2(V[ix1], W[ix2], W[ix2 - 1])) break;\r\n                --ix2;                       // get Ltangent from V[ix1] to W\r\n                done = false;                // not done if had to adjust this\r\n            }\r\n        }\r\n        return { t1: ix1, t2: ix2 };\r\n    }\r\n\r\n    export function LRtangent_PolyPolyC(V: Point[], W: Point[]): { t1: number; t2: number } {\r\n        var rl = RLtangent_PolyPolyC(W, V);\r\n        return { t1: rl.t2, t2: rl.t1 };\r\n    }\r\n\r\n    export function RLtangent_PolyPolyC(V: Point[], W: Point[]): { t1: number; t2: number } {\r\n        return tangent_PolyPolyC(V, W, Rtangent_PointPolyC, Ltangent_PointPolyC, above, below);\r\n    }\r\n\r\n    export function LLtangent_PolyPolyC(V: Point[], W: Point[]): { t1: number; t2: number } {\r\n        return tangent_PolyPolyC(V, W, Ltangent_PointPolyC, Ltangent_PointPolyC, below, below);\r\n    }\r\n\r\n    export function RRtangent_PolyPolyC(V: Point[], W: Point[]): { t1: number; t2: number } {\r\n        return tangent_PolyPolyC(V, W, Rtangent_PointPolyC, Rtangent_PointPolyC, above, above);\r\n    }\r\n\r\n    export class BiTangent {\r\n        constructor(public t1: number, public t2: number) { }\r\n    }\r\n\r\n    export class BiTangents {\r\n        rl: BiTangent;\r\n        lr: BiTangent;\r\n        ll: BiTangent;\r\n        rr: BiTangent;\r\n    }\r\n\r\n    export class TVGPoint extends Point {\r\n        vv: VisibilityVertex;\r\n    }\r\n\r\n    export class VisibilityVertex {\r\n        constructor(\r\n            public id: number,\r\n            public polyid: number,\r\n            public polyvertid: number,\r\n            public p: TVGPoint)\r\n        {\r\n            p.vv = this;\r\n        }\r\n    }\r\n\r\n    export class VisibilityEdge {\r\n        constructor(\r\n            public source: VisibilityVertex,\r\n            public target: VisibilityVertex) { }\r\n        length(): number {\r\n            var dx = this.source.p.x - this.target.p.x;\r\n            var dy = this.source.p.y - this.target.p.y;\r\n            return Math.sqrt(dx * dx + dy * dy);\r\n        }\r\n    }\r\n\r\n    export class TangentVisibilityGraph {\r\n        V: VisibilityVertex[] = [];\r\n        E: VisibilityEdge[] = [];\r\n        constructor(public P: TVGPoint[][], g0?: { V: VisibilityVertex[]; E: VisibilityEdge[] }) {\r\n            if (!g0) {\r\n                var n = P.length;\r\n                // For each node...\r\n                for (var i = 0; i < n; i++) {\r\n                    var p = P[i];\r\n                    // For each node vertex.\r\n                    for (var j = 0; j < p.length; ++j) {\r\n                        var pj = p[j],\r\n                            vv = new VisibilityVertex(this.V.length, i, j, pj);\r\n                        this.V.push(vv);\r\n                        // For the every iteration but the first, generate an\r\n                        // edge from the previous visibility vertex to the\r\n                        // current one.\r\n                        if (j > 0) this.E.push(new VisibilityEdge(p[j - 1].vv, vv));\r\n                    }\r\n                    // Add a visibility edge from the first vertex to the last.\r\n                    if (p.length > 1) this.E.push(new VisibilityEdge(p[0].vv, p[p.length - 1].vv));\r\n                }\r\n                for (var i = 0; i < n - 1; i++) {\r\n                    var Pi = P[i];\r\n                    for (var j = i + 1; j < n; j++) {\r\n                        var Pj = P[j],\r\n                            t = tangents(Pi, Pj);\r\n                        for (var q in t) {\r\n                            var c = t[q],\r\n                                source = Pi[c.t1], target = Pj[c.t2];\r\n                            this.addEdgeIfVisible(source, target, i, j);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                this.V = g0.V.slice(0);\r\n                this.E = g0.E.slice(0);\r\n            }\r\n        }\r\n        addEdgeIfVisible(u: TVGPoint, v: TVGPoint, i1: number, i2: number) {\r\n            if (!this.intersectsPolys(new LineSegment(u.x, u.y, v.x, v.y), i1, i2)) {\r\n                this.E.push(new VisibilityEdge(u.vv, v.vv));\r\n            }\r\n        }\r\n        addPoint(p: TVGPoint, i1: number): VisibilityVertex {\r\n            var n = this.P.length;\r\n            this.V.push(new VisibilityVertex(this.V.length, n, 0, p));\r\n            for (var i = 0; i < n; ++i) {\r\n                if (i === i1) continue;\r\n                var poly = this.P[i],\r\n                    t = tangent_PointPolyC(p, poly);\r\n                this.addEdgeIfVisible(p, poly[t.ltan], i1, i);\r\n                this.addEdgeIfVisible(p, poly[t.rtan], i1, i);\r\n            }\r\n            return p.vv;\r\n        }\r\n        private intersectsPolys(l: LineSegment, i1: number, i2: number): boolean {\r\n            for (var i = 0, n = this.P.length; i < n; ++i) {\r\n                if (i != i1 && i != i2 && intersects(l, this.P[i]).length > 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function intersects(l: LineSegment, P: Point[]) {\r\n        var ints = [];\r\n        for (var i = 1, n = P.length; i < n; ++i) {\r\n            var int = Rectangle.lineIntersection(\r\n                l.x1, l.y1,\r\n                l.x2, l.y2,\r\n                P[i - 1].x, P[i - 1].y,\r\n                P[i].x, P[i].y\r\n                );\r\n            if (int) ints.push(int);\r\n        }\r\n        return ints;\r\n    }\r\n\r\n    export function tangents(V: Point[], W: Point[]): BiTangents\r\n    {\r\n        var m = V.length - 1, n = W.length - 1;\r\n        var bt = new BiTangents();\r\n        for (var i = 0; i < m; ++i) {\r\n            for (var j = 0; j < n; ++j) {\r\n                var v1 = V[i == 0 ? m - 1 : i - 1];\r\n                var v2 = V[i];\r\n                var v3 = V[i + 1];\r\n                var w1 = W[j == 0 ? n - 1 : j - 1];\r\n                var w2 = W[j];\r\n                var w3 = W[j + 1];\r\n                var v1v2w2 = isLeft(v1, v2, w2);\r\n                var v2w1w2 = isLeft(v2, w1, w2);\r\n                var v2w2w3 = isLeft(v2, w2, w3);\r\n                var w1w2v2 = isLeft(w1, w2, v2);\r\n                var w2v1v2 = isLeft(w2, v1, v2);\r\n                var w2v2v3 = isLeft(w2, v2, v3);\r\n                if (v1v2w2 >= 0 && v2w1w2 >= 0 && v2w2w3 < 0\r\n                    && w1w2v2 >= 0 && w2v1v2 >= 0 && w2v2v3 < 0) {\r\n                        bt.ll = new BiTangent(i, j);\r\n                } else if (v1v2w2 <= 0 && v2w1w2 <= 0 && v2w2w3 > 0\r\n                    && w1w2v2 <= 0 && w2v1v2 <= 0 && w2v2v3 > 0) {\r\n                        bt.rr = new BiTangent(i, j);\r\n                } else if (v1v2w2 <= 0 && v2w1w2 > 0 && v2w2w3 <= 0\r\n                    && w1w2v2 >= 0 && w2v1v2 < 0 && w2v2v3 >= 0) {\r\n                        bt.rl = new BiTangent(i, j);\r\n                } else if (v1v2w2 >= 0 && v2w1w2 < 0 && v2w2w3 >= 0\r\n                    && w1w2v2 <= 0 && w2v1v2 > 0 && w2v2v3 <= 0) {\r\n                        bt.lr = new BiTangent(i, j);\r\n                }\r\n            }\r\n        }\r\n        return bt;\r\n    }\r\n\r\n    function isPointInsidePoly(p: Point, poly: Point[]): boolean {\r\n        for (var i = 1, n = poly.length; i < n; ++i)\r\n            if (below(poly[i - 1], poly[i], p)) return false;\r\n        return true;\r\n    }\r\n\r\n    function isAnyPInQ(p: Point[], q: Point[]): boolean {\r\n        return !p.every(v => !isPointInsidePoly(v, q));\r\n    }\r\n\r\n    export function polysOverlap(p: Point[], q: Point[]): boolean {\r\n        if (isAnyPInQ(p, q)) return true;\r\n        if (isAnyPInQ(q, p)) return true;\r\n        for (var i = 1, n = p.length; i < n; ++i) {\r\n            var v = p[i], u = p[i - 1];\r\n            if (intersects(new LineSegment(u.x, u.y, v.x, v.y), q).length > 0) return true;\r\n        }\r\n        return false;\r\n    }\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2899, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2904, "column": 0}, "map": {"version":3,"file":"handledisconnected.js","sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/node_modules/webcola/WebCola/src/handledisconnected.ts"],"sourcesContent":["    var packingOptions = {\r\n        PADDING: 10,\r\n        GOLDEN_SECTION: (1 + Math.sqrt(5)) / 2,\r\n        FLOAT_EPSILON: 0.0001,\r\n        MAX_INERATIONS: 100\r\n    };\r\n\r\n    // assign x, y to nodes while using box packing algorithm for disconnected graphs\r\n    export function applyPacking(graphs:Array<any>, w, h, node_size, desired_ratio = 1, centerGraph = true) {\r\n\r\n        var init_x = 0,\r\n            init_y = 0,\r\n\r\n            svg_width = w,\r\n            svg_height = h,\r\n\r\n            desired_ratio = typeof desired_ratio !== 'undefined' ? desired_ratio : 1,\r\n            node_size = typeof node_size !== 'undefined' ? node_size : 0,\r\n\r\n            real_width = 0,\r\n            real_height = 0,\r\n            min_width = 0,\r\n\r\n            global_bottom = 0,\r\n            line = [];\r\n\r\n        if (graphs.length == 0)\r\n            return;\r\n\r\n        /// that would take care of single nodes problem\r\n        // graphs.forEach(function (g) {\r\n        //     if (g.array.length == 1) {\r\n        //         g.array[0].x = 0;\r\n        //         g.array[0].y = 0;\r\n        //     }\r\n        // });\r\n\r\n        calculate_bb(graphs);\r\n        apply(graphs, desired_ratio);\r\n        if(centerGraph) {\r\n            put_nodes_to_right_positions(graphs);\r\n        }\r\n\r\n        // get bounding boxes for all separate graphs\r\n        function calculate_bb(graphs) {\r\n\r\n            graphs.forEach(function (g) {\r\n                calculate_single_bb(g)\r\n            });\r\n\r\n            function calculate_single_bb(graph) {\r\n                var min_x = Number.MAX_VALUE, min_y = Number.MAX_VALUE,\r\n                    max_x = 0, max_y = 0;\r\n\r\n                graph.array.forEach(function (v) {\r\n                    var w = typeof v.width !== 'undefined' ? v.width : node_size;\r\n                    var h = typeof v.height !== 'undefined' ? v.height : node_size;\r\n                    w /= 2;\r\n                    h /= 2;\r\n                    max_x = Math.max(v.x + w, max_x);\r\n                    min_x = Math.min(v.x - w, min_x);\r\n                    max_y = Math.max(v.y + h, max_y);\r\n                    min_y = Math.min(v.y - h, min_y);\r\n                });\r\n\r\n                graph.width = max_x - min_x;\r\n                graph.height = max_y - min_y;\r\n            }\r\n        }\r\n\r\n        //function plot(data, left, right, opt_x, opt_y) {\r\n        //    // plot the cost function\r\n        //    var plot_svg = d3.select(\"body\").append(\"svg\")\r\n        //        .attr(\"width\", function () { return 2 * (right - left); })\r\n        //        .attr(\"height\", 200);\r\n\r\n\r\n        //    var x = d3.time.scale().range([0, 2 * (right - left)]);\r\n\r\n        //    var xAxis = d3.svg.axis().scale(x).orient(\"bottom\");\r\n        //    plot_svg.append(\"g\").attr(\"class\", \"x axis\")\r\n        //        .attr(\"transform\", \"translate(0, 199)\")\r\n        //        .call(xAxis);\r\n\r\n        //    var lastX = 0;\r\n        //    var lastY = 0;\r\n        //    var value = 0;\r\n        //    for (var r = left; r < right; r += 1) {\r\n        //        value = step(data, r);\r\n        //        // value = 1;\r\n\r\n        //        plot_svg.append(\"line\").attr(\"x1\", 2 * (lastX - left))\r\n        //            .attr(\"y1\", 200 - 30 * lastY)\r\n        //            .attr(\"x2\", 2 * r - 2 * left)\r\n        //            .attr(\"y2\", 200 - 30 * value)\r\n        //            .style(\"stroke\", \"rgb(6,120,155)\");\r\n\r\n        //        lastX = r;\r\n        //        lastY = value;\r\n        //    }\r\n\r\n        //    plot_svg.append(\"circle\").attr(\"cx\", 2 * opt_x - 2 * left).attr(\"cy\", 200 - 30 * opt_y)\r\n        //        .attr(\"r\", 5).style('fill', \"rgba(0,0,0,0.5)\");\r\n\r\n        //}\r\n\r\n        // actual assigning of position to nodes\r\n        function put_nodes_to_right_positions(graphs) {\r\n            graphs.forEach(function (g) {\r\n                // calculate current graph center:\r\n                var center = { x: 0, y: 0 };\r\n\r\n                g.array.forEach(function (node) {\r\n                    center.x += node.x;\r\n                    center.y += node.y;\r\n                });\r\n\r\n                center.x /= g.array.length;\r\n                center.y /= g.array.length;\r\n\r\n                // calculate current top left corner:\r\n                var corner = { x: center.x - g.width / 2, y: center.y - g.height / 2 };\r\n                var offset = { x: g.x - corner.x + svg_width / 2 - real_width / 2, y: g.y - corner.y + svg_height / 2 - real_height / 2};\r\n\r\n                // put nodes:\r\n                g.array.forEach(function (node) {\r\n                    node.x += offset.x;\r\n                    node.y += offset.y;\r\n                });\r\n            });\r\n        }\r\n\r\n        // starts box packing algorithm\r\n        // desired ratio is 1 by default\r\n        function apply(data, desired_ratio) {\r\n            var curr_best_f = Number.POSITIVE_INFINITY;\r\n            var curr_best = 0;\r\n            data.sort(function (a, b) { return b.height - a.height; });\r\n\r\n            min_width = data.reduce(function (a, b) {\r\n                return a.width < b.width ? a.width : b.width;\r\n            });\r\n\r\n            var left = x1 = min_width;\r\n            var right = x2 = get_entire_width(data);\r\n            var iterationCounter = 0;\r\n\r\n            var f_x1 = Number.MAX_VALUE;\r\n            var f_x2 = Number.MAX_VALUE;\r\n            var flag = -1; // determines which among f_x1 and f_x2 to recompute\r\n\r\n\r\n            var dx = Number.MAX_VALUE;\r\n            var df = Number.MAX_VALUE;\r\n\r\n            while ((dx > min_width) || df > packingOptions.FLOAT_EPSILON) {\r\n\r\n                if (flag != 1) {\r\n                    var x1 = right - (right - left) / packingOptions.GOLDEN_SECTION;\r\n                    var f_x1 = step(data, x1);\r\n                }\r\n                if (flag != 0) {\r\n                    var x2 = left + (right - left) / packingOptions.GOLDEN_SECTION;\r\n                    var f_x2 = step(data, x2);\r\n                }\r\n\r\n                dx = Math.abs(x1 - x2);\r\n                df = Math.abs(f_x1 - f_x2);\r\n\r\n                if (f_x1 < curr_best_f) {\r\n                    curr_best_f = f_x1;\r\n                    curr_best = x1;\r\n                }\r\n\r\n                if (f_x2 < curr_best_f) {\r\n                    curr_best_f = f_x2;\r\n                    curr_best = x2;\r\n                }\r\n\r\n                if (f_x1 > f_x2) {\r\n                    left = x1;\r\n                    x1 = x2;\r\n                    f_x1 = f_x2;\r\n                    flag = 1;\r\n                } else {\r\n                    right = x2;\r\n                    x2 = x1;\r\n                    f_x2 = f_x1;\r\n                    flag = 0;\r\n                }\r\n\r\n                if (iterationCounter++ > 100) {\r\n                    break;\r\n                }\r\n            }\r\n            // plot(data, min_width, get_entire_width(data), curr_best, curr_best_f);\r\n            step(data, curr_best);\r\n        }\r\n\r\n        // one iteration of the optimization method\r\n        // (gives a proper, but not necessarily optimal packing)\r\n        function step(data, max_width) {\r\n            line = [];\r\n            real_width = 0;\r\n            real_height = 0;\r\n            global_bottom = init_y;\r\n\r\n            for (var i = 0; i < data.length; i++) {\r\n                var o = data[i];\r\n                put_rect(o, max_width);\r\n            }\r\n\r\n            return Math.abs(get_real_ratio() - desired_ratio);\r\n        }\r\n\r\n        // looking for a position to one box\r\n        function put_rect(rect, max_width) {\r\n\r\n\r\n            var parent = undefined;\r\n\r\n            for (var i = 0; i < line.length; i++) {\r\n                if ((line[i].space_left >= rect.height) && (line[i].x + line[i].width + rect.width + packingOptions.PADDING - max_width) <= packingOptions.FLOAT_EPSILON) {\r\n                    parent = line[i];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            line.push(rect);\r\n\r\n            if (parent !== undefined) {\r\n                rect.x = parent.x + parent.width + packingOptions.PADDING;\r\n                rect.y = parent.bottom;\r\n                rect.space_left = rect.height;\r\n                rect.bottom = rect.y;\r\n                parent.space_left -= rect.height + packingOptions.PADDING;\r\n                parent.bottom += rect.height + packingOptions.PADDING;\r\n            } else {\r\n                rect.y = global_bottom;\r\n                global_bottom += rect.height + packingOptions.PADDING;\r\n                rect.x = init_x;\r\n                rect.bottom = rect.y;\r\n                rect.space_left = rect.height;\r\n            }\r\n\r\n            if (rect.y + rect.height - real_height > -packingOptions.FLOAT_EPSILON) real_height = rect.y + rect.height - init_y;\r\n            if (rect.x + rect.width - real_width > -packingOptions.FLOAT_EPSILON) real_width = rect.x + rect.width - init_x;\r\n        };\r\n\r\n        function get_entire_width(data) {\r\n            var width = 0;\r\n            data.forEach(function (d) { return width += d.width + packingOptions.PADDING; });\r\n            return width;\r\n        }\r\n\r\n        function get_real_ratio() {\r\n            return (real_width / real_height);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * connected components of graph\r\n     * returns an array of {}\r\n     */\r\n    export function separateGraphs(nodes, links) {\r\n        var marks = {};\r\n        var ways = {};\r\n        var graphs = [];\r\n        var clusters = 0;\r\n\r\n        for (var i = 0; i < links.length; i++) {\r\n            var link = links[i];\r\n            var n1 = link.source;\r\n            var n2 = link.target;\r\n            if (ways[n1.index])\r\n                ways[n1.index].push(n2);\r\n            else\r\n                ways[n1.index] = [n2];\r\n\r\n            if (ways[n2.index])\r\n                ways[n2.index].push(n1);\r\n            else\r\n                ways[n2.index] = [n1];\r\n        }\r\n\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            var node = nodes[i];\r\n            if (marks[node.index]) continue;\r\n            explore_node(node, true);\r\n        }\r\n\r\n        function explore_node(n, is_new) {\r\n            if (marks[n.index] !== undefined) return;\r\n            if (is_new) {\r\n                clusters++;\r\n                graphs.push({ array: [] });\r\n            }\r\n            marks[n.index] = clusters;\r\n            graphs[clusters - 1].array.push(n);\r\n            var adjacent = ways[n.index];\r\n            if (!adjacent) return;\r\n\r\n            for (var j = 0; j < adjacent.length; j++) {\r\n                explore_node(adjacent[j], false);\r\n            }\r\n        }\r\n\r\n        return graphs;\r\n    }\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3124, "column": 0}, "map": {"version":3,"file":"layout.js","sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/node_modules/webcola/WebCola/src/layout.ts"],"sourcesContent":["import * as powergraph from './powergraph'\r\nimport {LinkLengthAccessor, symmetricDiffLinkLengths, jaccardLinkLengths, generateDirectedEdgeConstraints} from './linklengths'\r\nimport {Descent} from './descent'\r\nimport {Rectangle, Projection, makeEdgeTo, makeEdgeBetween} from './rectangle'\r\nimport {Calculator} from './shortestpaths'\r\nimport {TangentVisibilityGraph, TVGPoint} from './geom'\r\nimport {separateGraphs, applyPacking} from './handledisconnected'\r\n    /**\r\n     * The layout process fires three events:\r\n     *  - start: layout iterations started\r\n     *  - tick: fired once per iteration, listen to this to animate\r\n     *  - end: layout converged, you might like to zoom-to-fit or something at notification of this event\r\n     */\r\n    export enum EventType { start, tick, end };\r\n    export interface Event {\r\n        type: EventType;\r\n        alpha: number;\r\n        stress?: number;\r\n        listener?: () => void;\r\n    }\r\n    export interface InputNode {\r\n        /**\r\n         * index in nodes array, this is initialized by Layout.start()\r\n         */\r\n        index?: number;\r\n        /**\r\n         * x and y will be computed by layout as the Node's centroid\r\n         */\r\n        x?: number;\r\n        /**\r\n         * x and y will be computed by layout as the Node's centroid\r\n         */\r\n        y?: number;\r\n        /**\r\n         * specify a width and height of the node's bounding box if you turn on avoidOverlaps\r\n         */\r\n        width?: number;\r\n        /**\r\n         * specify a width and height of the node's bounding box if you turn on avoidOverlaps\r\n         */\r\n        height?: number;\r\n        /**\r\n         * selective bit mask.  !=0 means layout will not move.\r\n         */\r\n        fixed?: number;\r\n    }\r\n    export interface Node extends InputNode {\r\n      // Client-passed node may be missing these properties, which will be set\r\n      // upon ingestion\r\n      x: number;\r\n      y: number;\r\n    }\r\n\r\n    export interface Group {\r\n        bounds?: Rectangle;\r\n        leaves?: Node[];\r\n        groups?: Group[];\r\n        padding: number;\r\n    }\r\n\r\n    function isGroup(g: any): g is Group {\r\n        return typeof g.leaves !== 'undefined' || typeof g.groups !== 'undefined';\r\n    }\r\n\r\n    export interface Link<NodeRefType> {\r\n        source: NodeRefType;\r\n        target: NodeRefType;\r\n\r\n        // ideal length the layout should try to achieve for this link\r\n        length?: number;\r\n\r\n        // how hard we should try to satisfy this link's ideal length\r\n        // must be in the range: 0 < weight <= 1\r\n        // if unspecified 1 is the default\r\n        weight?: number;\r\n    }\r\n\r\n    export type LinkNumericPropertyAccessor = (t: Link<Node | number>) => number;\r\n\r\n    export interface LinkLengthTypeAccessor extends LinkLengthAccessor<Link<Node | number>> {\r\n        getType: LinkNumericPropertyAccessor;\r\n    }\r\n    /**\r\n     * Main interface to cola layout.\r\n     * @class Layout\r\n     */\r\n    export class Layout {\r\n        private _canvasSize = [1, 1];\r\n        private _linkDistance: number | LinkNumericPropertyAccessor = 20;\r\n        private _defaultNodeSize: number = 10;\r\n        private _linkLengthCalculator = null;\r\n        private _linkType = null;\r\n        private _avoidOverlaps = false;\r\n        private _handleDisconnected = true;\r\n        private _alpha;\r\n        private _lastStress;\r\n        private _running = false;\r\n        private _nodes = [];\r\n        private _groups = [];\r\n        private _rootGroup = null;\r\n        private _links: Link<Node | number>[] = [];\r\n        private _constraints = [];\r\n        private _distanceMatrix = null;\r\n        private _descent: Descent = null;\r\n        private _directedLinkConstraints = null;\r\n        private _threshold = 0.01;\r\n        private _visibilityGraph = null;\r\n        private _groupCompactness = 1e-6;\r\n\r\n        // sub-class and override this property to replace with a more sophisticated eventing mechanism\r\n        protected event = null;\r\n\r\n        // subscribe a listener to an event\r\n        // sub-class and override this method to replace with a more sophisticated eventing mechanism\r\n        public on(e: EventType | string, listener: (event?: Event) => void): this {\r\n            // override me!\r\n            if (!this.event) this.event = {};\r\n            if (typeof e === 'string') {\r\n                this.event[EventType[e]] = listener;\r\n            } else {\r\n                this.event[e] = listener;\r\n            }\r\n            return this;\r\n        }\r\n\r\n        // a function that is notified of events like \"tick\"\r\n        // sub-classes can override this method to replace with a more sophisticated eventing mechanism\r\n        protected trigger(e: Event) {\r\n            if (this.event && typeof this.event[e.type] !== 'undefined') {\r\n                this.event[e.type](e);\r\n            }\r\n        }\r\n\r\n        // a function that kicks off the iteration tick loop\r\n        // it calls tick() repeatedly until tick returns true (is converged)\r\n        // subclass and override it with something fancier (e.g. dispatch tick on a timer)\r\n        protected kick(): void {\r\n            while (!this.tick());\r\n        }\r\n\r\n        /**\r\n         * iterate the layout.  Returns true when layout converged.\r\n         */\r\n        protected tick(): boolean {\r\n            if (this._alpha < this._threshold) {\r\n                this._running = false;\r\n                this.trigger({ type: EventType.end, alpha: this._alpha = 0, stress: this._lastStress });\r\n                return true;\r\n            }\r\n            const n = this._nodes.length,\r\n                  m = this._links.length;\r\n            let o, i;\r\n\r\n            this._descent.locks.clear();\r\n            for (i = 0; i < n; ++i) {\r\n                o = this._nodes[i];\r\n                if (o.fixed) {\r\n                    if (typeof o.px === 'undefined' || typeof o.py === 'undefined') {\r\n                        o.px = o.x;\r\n                        o.py = o.y;\r\n                    }\r\n                    var p = [o.px, o.py];\r\n                    this._descent.locks.add(i, p);\r\n                }\r\n            }\r\n\r\n            let s1 = this._descent.rungeKutta();\r\n            //var s1 = descent.reduceStress();\r\n            if (s1 === 0) {\r\n                this._alpha = 0;\r\n            } else if (typeof this._lastStress !== 'undefined') {\r\n                this._alpha = s1; //Math.abs(Math.abs(this._lastStress / s1) - 1);\r\n            }\r\n            this._lastStress = s1;\r\n\r\n            this.updateNodePositions();\r\n\r\n            this.trigger({ type: EventType.tick, alpha: this._alpha, stress: this._lastStress });\r\n            return false;\r\n        }\r\n\r\n        // copy positions out of descent instance into each of the nodes' center coords\r\n        private updateNodePositions(): void {\r\n            const x = this._descent.x[0], y = this._descent.x[1];\r\n            let o, i = this._nodes.length;\r\n            while (i--) {\r\n                o = this._nodes[i];\r\n                o.x = x[i];\r\n                o.y = y[i];\r\n            }\r\n        }\r\n\r\n        /**\r\n         * the list of nodes.\r\n         * If nodes has not been set, but links has, then we instantiate a nodes list here, of the correct size,\r\n         * before returning it.\r\n         * @property nodes {Array}\r\n         * @default empty list\r\n         */\r\n        nodes(): Array<Node>\r\n        nodes(v: Array<InputNode>): this\r\n        nodes(v?: any): any {\r\n            if (!v) {\r\n                if (this._nodes.length === 0 && this._links.length > 0) {\r\n                    // if we have links but no nodes, create the nodes array now with empty objects for the links to point at.\r\n                    // in this case the links are expected to be numeric indices for nodes in the range 0..n-1 where n is the number of nodes\r\n                    var n = 0;\r\n                    this._links.forEach(function (l) {\r\n                        n = Math.max(n, <number>l.source, <number>l.target);\r\n                    });\r\n                    this._nodes = new Array(++n);\r\n                    for (var i = 0; i < n; ++i) {\r\n                        this._nodes[i] = {};\r\n                    }\r\n                }\r\n                return this._nodes;\r\n            }\r\n            this._nodes = v;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * a list of hierarchical groups defined over nodes\r\n         * @property groups {Array}\r\n         * @default empty list\r\n         */\r\n        groups(): Array<Group>\r\n        groups(x: Array<Group>): this\r\n        groups(x?: Array<Group>): any {\r\n            if (!x) return this._groups;\r\n            this._groups = x;\r\n            this._rootGroup = {};\r\n            this._groups.forEach(g => {\r\n                if (typeof g.padding === \"undefined\")\r\n                    g.padding = 1;\r\n                if (typeof g.leaves !== \"undefined\") {\r\n                    g.leaves.forEach((v, i) => {\r\n                        if (typeof v === 'number')\r\n                            (g.leaves[i] = this._nodes[v]).parent = g\r\n                    });\r\n                }\r\n                if (typeof g.groups !== \"undefined\") {\r\n                    g.groups.forEach((gi, i) => {\r\n                        if (typeof gi === 'number')\r\n                            (g.groups[i] = this._groups[gi]).parent = g\r\n                    });\r\n                }\r\n            });\r\n            this._rootGroup.leaves = this._nodes.filter(v => typeof v.parent === 'undefined');\r\n            this._rootGroup.groups = this._groups.filter(g => typeof g.parent === 'undefined');\r\n            return this;\r\n        }\r\n\r\n        powerGraphGroups(f: Function): this {\r\n            var g = powergraph.getGroups(this._nodes, this._links, this.linkAccessor, this._rootGroup);\r\n            this.groups(g.groups);\r\n            f(g);\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * if true, the layout will not permit overlaps of the node bounding boxes (defined by the width and height properties on nodes)\r\n         * @property avoidOverlaps\r\n         * @type bool\r\n         * @default false\r\n         */\r\n        avoidOverlaps(): boolean\r\n        avoidOverlaps(v: boolean): this\r\n        avoidOverlaps(v?: boolean): any {\r\n            if (!arguments.length) return this._avoidOverlaps;\r\n            this._avoidOverlaps = v;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * if true, the final step of the start method will be to nicely pack connected components of the graph.\r\n         * works best if start() is called with a reasonable number of iterations specified and\r\n         * each node has a bounding box (defined by the width and height properties on nodes).\r\n         * @property handleDisconnected\r\n         * @type bool\r\n         * @default true\r\n         */\r\n        handleDisconnected(): boolean\r\n        handleDisconnected(v: boolean): this\r\n        handleDisconnected(v?: boolean): any {\r\n            if (!arguments.length) return this._handleDisconnected;\r\n            this._handleDisconnected = v;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * causes constraints to be generated such that directed graphs are laid out either from left-to-right or top-to-bottom.\r\n         * a separation constraint is generated in the selected axis for each edge that is not involved in a cycle (part of a strongly connected component)\r\n         * @param axis {string} 'x' for left-to-right, 'y' for top-to-bottom\r\n         * @param minSeparation {number|link=>number} either a number specifying a minimum spacing required across all links or a function to return the minimum spacing for each link\r\n         */\r\n        flowLayout(axis: string, minSeparation: number|((t: any)=>number)): this {\r\n            if (!arguments.length) axis = 'y';\r\n            this._directedLinkConstraints = {\r\n                axis: axis,\r\n                getMinSeparation: typeof minSeparation === 'number' ? function () { return minSeparation } : minSeparation\r\n            };\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * links defined as source, target pairs over nodes\r\n         * @property links {array}\r\n         * @default empty list\r\n         */\r\n        links(): Array<Link<Node|number>>\r\n        links(x: Array<Link<Node|number>>): this\r\n        links(x?: Array<Link<Node|number>>): any {\r\n            if (!arguments.length) return this._links;\r\n            this._links = x;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * list of constraints of various types\r\n         * @property constraints\r\n         * @type {array}\r\n         * @default empty list\r\n         */\r\n        constraints(): Array<any>\r\n        constraints(c: Array<any>): this\r\n        constraints(c?: Array<any>): any {\r\n            if (!arguments.length) return this._constraints;\r\n            this._constraints = c;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * Matrix of ideal distances between all pairs of nodes.\r\n         * If unspecified, the ideal distances for pairs of nodes will be based on the shortest path distance between them.\r\n         * @property distanceMatrix\r\n         * @type {Array of Array of Number}\r\n         * @default null\r\n         */\r\n        distanceMatrix(): Array<Array<number>>\r\n        distanceMatrix(d: Array<Array<number>>): this\r\n        distanceMatrix(d?: any): any {\r\n            if (!arguments.length) return this._distanceMatrix;\r\n            this._distanceMatrix = d;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * Size of the layout canvas dimensions [x,y]. Currently only used to determine the midpoint which is taken as the starting position\r\n         * for nodes with no preassigned x and y.\r\n         * @property size\r\n         * @type {Array of Number}\r\n         */\r\n        size(): Array<number>\r\n        size(x: Array<number>): this\r\n        size(x?: Array<number>): any {\r\n            if (!x) return this._canvasSize;\r\n            this._canvasSize = x;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * Default size (assume nodes are square so both width and height) to use in packing if node width/height are not specified.\r\n         * @property defaultNodeSize\r\n         * @type {Number}\r\n         */\r\n        defaultNodeSize(): number\r\n        defaultNodeSize(x: number): this\r\n        defaultNodeSize(x?: any): any {\r\n            if (!x) return this._defaultNodeSize;\r\n            this._defaultNodeSize = x;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * The strength of attraction between the group boundaries to each other.\r\n         * @property defaultNodeSize\r\n         * @type {Number}\r\n         */\r\n        groupCompactness(): number\r\n        groupCompactness(x: number): this\r\n        groupCompactness(x?: any): any {\r\n            if (!x) return this._groupCompactness;\r\n            this._groupCompactness = x;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * links have an ideal distance, The automatic layout will compute layout that tries to keep links (AKA edges) as close as possible to this length.\r\n         */\r\n        linkDistance(): number\r\n        linkDistance(): LinkNumericPropertyAccessor\r\n        linkDistance(x: number): this\r\n        linkDistance(x: LinkNumericPropertyAccessor): this\r\n        linkDistance(x?: any): any {\r\n            if (!x) {\r\n                return this._linkDistance;\r\n            }\r\n            this._linkDistance = typeof x === \"function\" ? x : +x;\r\n            this._linkLengthCalculator = null;\r\n            return this;\r\n        }\r\n\r\n        linkType(f: Function | number): this {\r\n            this._linkType = f;\r\n            return this;\r\n        }\r\n\r\n        convergenceThreshold(): number\r\n        convergenceThreshold(x: number): this\r\n        convergenceThreshold(x?: number): any {\r\n            if (!x) return this._threshold;\r\n            this._threshold = typeof x === \"function\" ? x : +x;\r\n            return this;\r\n        }\r\n\r\n        alpha(): number\r\n        alpha(x: number): this\r\n        alpha(x?: number): any {\r\n            if (!arguments.length) return this._alpha;\r\n            else {\r\n                x = +x;\r\n                if (this._alpha) { // if we're already running\r\n                    if (x > 0) this._alpha = x; // we might keep it hot\r\n                    else this._alpha = 0; // or, next tick will dispatch \"end\"\r\n                } else if (x > 0) { // otherwise, fire it up!\r\n                    if (!this._running) {\r\n                        this._running = true;\r\n                        this.trigger({ type: EventType.start, alpha: this._alpha = x});\r\n                        this.kick();\r\n                    }\r\n                }\r\n                return this;\r\n            }\r\n        }\r\n\r\n        getLinkLength(link: Link<Node | number>): number {\r\n            return typeof this._linkDistance === \"function\" ? +((<LinkNumericPropertyAccessor>this._linkDistance)(link)) : <number>this._linkDistance;\r\n        }\r\n\r\n        static setLinkLength(link: Link<Node|number>, length: number) {\r\n            link.length = length;\r\n        }\r\n\r\n        getLinkType(link: Link<Node | number>): number {\r\n            return typeof this._linkType === \"function\" ? this._linkType(link) : 0;\r\n        }\r\n\r\n        linkAccessor: LinkLengthTypeAccessor = {\r\n            getSourceIndex: Layout.getSourceIndex,\r\n            getTargetIndex: Layout.getTargetIndex,\r\n            setLength: Layout.setLinkLength,\r\n            getType: l => typeof this._linkType === \"function\" ? this._linkType(l) : 0\r\n        };\r\n\r\n        /**\r\n         * compute an ideal length for each link based on the graph structure around that link.\r\n         * you can use this (for example) to create extra space around hub-nodes in dense graphs.\r\n         * In particular this calculation is based on the \"symmetric difference\" in the neighbour sets of the source and target:\r\n         * i.e. if neighbours of source is a and neighbours of target are b then calculation is: sqrt(|a union b| - |a intersection b|)\r\n         * Actual computation based on inspection of link structure occurs in start(), so links themselves\r\n         * don't have to have been assigned before invoking this function.\r\n         * @param {number} [idealLength] the base length for an edge when its source and start have no other common neighbours (e.g. 40)\r\n         * @param {number} [w] a multiplier for the effect of the length adjustment (e.g. 0.7)\r\n         */\r\n        symmetricDiffLinkLengths(idealLength: number, w: number = 1): this {\r\n            this.linkDistance(l => idealLength * l.length);\r\n            this._linkLengthCalculator = () => symmetricDiffLinkLengths(this._links, this.linkAccessor, w);\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * compute an ideal length for each link based on the graph structure around that link.\r\n         * you can use this (for example) to create extra space around hub-nodes in dense graphs.\r\n         * In particular this calculation is based on the \"symmetric difference\" in the neighbour sets of the source and target:\r\n         * i.e. if neighbours of source is a and neighbours of target are b then calculation is: |a intersection b|/|a union b|\r\n         * Actual computation based on inspection of link structure occurs in start(), so links themselves\r\n         * don't have to have been assigned before invoking this function.\r\n         * @param {number} [idealLength] the base length for an edge when its source and start have no other common neighbours (e.g. 40)\r\n         * @param {number} [w] a multiplier for the effect of the length adjustment (e.g. 0.7)\r\n         */\r\n        jaccardLinkLengths(idealLength: number, w: number = 1): this {\r\n            this.linkDistance(l => idealLength * l.length);\r\n            this._linkLengthCalculator = () => jaccardLinkLengths(this._links, this.linkAccessor, w);\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * start the layout process\r\n         * @method start\r\n         * @param {number} [initialUnconstrainedIterations=0] unconstrained initial layout iterations\r\n         * @param {number} [initialUserConstraintIterations=0] initial layout iterations with user-specified constraints\r\n         * @param {number} [initialAllConstraintsIterations=0] initial layout iterations with all constraints including non-overlap\r\n         * @param {number} [gridSnapIterations=0] iterations of \"grid snap\", which pulls nodes towards grid cell centers - grid of size node[0].width - only really makes sense if all nodes have the same width and height\r\n         * @param [keepRunning=true] keep iterating asynchronously via the tick method\r\n         * @param [centerGraph=true] Center graph on restart\r\n         */\r\n        start(\r\n            initialUnconstrainedIterations: number = 0,\r\n            initialUserConstraintIterations: number = 0,\r\n            initialAllConstraintsIterations: number = 0,\r\n            gridSnapIterations: number = 0,\r\n            keepRunning = true,\r\n            centerGraph = true,\r\n        ): this {\r\n            var i: number,\r\n                j: number,\r\n                n = (<Array<any>>this.nodes()).length,\r\n                N = n + 2 * this._groups.length,\r\n                m = this._links.length,\r\n                w = this._canvasSize[0],\r\n                h = this._canvasSize[1];\r\n\r\n            var x = new Array(N), y = new Array(N);\r\n\r\n            var G = null;\r\n\r\n            var ao = this._avoidOverlaps;\r\n\r\n            this._nodes.forEach((v, i) => {\r\n                v.index = i;\r\n                if (typeof v.x === 'undefined') {\r\n                    v.x = w / 2, v.y = h / 2;\r\n                }\r\n                x[i] = v.x, y[i] = v.y;\r\n            });\r\n\r\n            if (this._linkLengthCalculator) this._linkLengthCalculator();\r\n\r\n            //should we do this to clearly label groups?\r\n            //this._groups.forEach((g, i) => g.groupIndex = i);\r\n\r\n            var distances;\r\n            if (this._distanceMatrix) {\r\n                // use the user specified distanceMatrix\r\n                distances = this._distanceMatrix;\r\n            } else {\r\n                // construct an n X n distance matrix based on shortest paths through graph (with respect to edge.length).\r\n                distances = (new Calculator(N, this._links, Layout.getSourceIndex, Layout.getTargetIndex, l=> this.getLinkLength(l))).DistanceMatrix();\r\n\r\n                // G is a square matrix with G[i][j] = 1 iff there exists an edge between node i and node j\r\n                // otherwise 2. (\r\n                G = Descent.createSquareMatrix(N, () => 2);\r\n                this._links.forEach(l => {\r\n                    if (typeof l.source == \"number\") l.source = this._nodes[<number>l.source];\r\n                    if (typeof l.target == \"number\") l.target = this._nodes[<number>l.target];\r\n                });\r\n                this._links.forEach(e => {\r\n                    const u = Layout.getSourceIndex(e), v = Layout.getTargetIndex(e);\r\n                    G[u][v] = G[v][u] = e.weight || 1;\r\n                });\r\n            }\r\n\r\n            var D = Descent.createSquareMatrix(N, function (i, j) {\r\n                return distances[i][j];\r\n            });\r\n\r\n            if (this._rootGroup && typeof this._rootGroup.groups !== 'undefined') {\r\n                var i = n;\r\n                var addAttraction = (i, j, strength, idealDistance) => {\r\n                    G[i][j] = G[j][i] = strength;\r\n                    D[i][j] = D[j][i] = idealDistance;\r\n                };\r\n                this._groups.forEach(g => {\r\n                    addAttraction(i, i + 1, this._groupCompactness, 0.1);\r\n\r\n                    // todo: add terms here attracting children of the group to the group dummy nodes\r\n                    //if (typeof g.leaves !== 'undefined')\r\n                    //    g.leaves.forEach(l => {\r\n                    //        addAttraction(l.index, i, 1e-4, 0.1);\r\n                    //        addAttraction(l.index, i + 1, 1e-4, 0.1);\r\n                    //    });\r\n                    //if (typeof g.groups !== 'undefined')\r\n                    //    g.groups.forEach(g => {\r\n                    //        var gid = n + g.groupIndex * 2;\r\n                    //        addAttraction(gid, i, 0.1, 0.1);\r\n                    //        addAttraction(gid + 1, i, 0.1, 0.1);\r\n                    //        addAttraction(gid, i + 1, 0.1, 0.1);\r\n                    //        addAttraction(gid + 1, i + 1, 0.1, 0.1);\r\n                    //    });\r\n\r\n                    x[i] = 0, y[i++] = 0;\r\n                    x[i] = 0, y[i++] = 0;\r\n                });\r\n            } else this._rootGroup = { leaves: this._nodes, groups: [] };\r\n\r\n            var curConstraints = this._constraints || [];\r\n            if (this._directedLinkConstraints) {\r\n                (<any>this.linkAccessor).getMinSeparation = this._directedLinkConstraints.getMinSeparation;\r\n                curConstraints = curConstraints.concat(generateDirectedEdgeConstraints(n, this._links, this._directedLinkConstraints.axis, <any>(this.linkAccessor)));\r\n\r\n                // todo: add containment constraints between group dummy nodes and their children\r\n            }\r\n\r\n            this.avoidOverlaps(false);\r\n            this._descent = new Descent([x, y], D);\r\n\r\n            this._descent.locks.clear();\r\n            for (var i = 0; i < n; ++i) {\r\n                var o = this._nodes[i];\r\n                if (o.fixed) {\r\n                    o.px = o.x;\r\n                    o.py = o.y;\r\n                    var p = [o.x, o.y];\r\n                    this._descent.locks.add(i, p);\r\n                }\r\n            }\r\n            this._descent.threshold = this._threshold;\r\n\r\n            // apply initialIterations without user constraints or nonoverlap constraints\r\n            // if groups are specified, dummy nodes and edges will be added to untangle\r\n            // with respect to group connectivity\r\n            this.initialLayout(initialUnconstrainedIterations, x, y);\r\n\r\n            // apply initialIterations with user constraints but no nonoverlap constraints\r\n            if (curConstraints.length > 0) this._descent.project = new Projection(this._nodes, this._groups, this._rootGroup, curConstraints).projectFunctions();\r\n            this._descent.run(initialUserConstraintIterations);\r\n            this.separateOverlappingComponents(w, h, centerGraph);\r\n\r\n            // subsequent iterations will apply all constraints\r\n            this.avoidOverlaps(ao);\r\n            if (ao) {\r\n                this._nodes.forEach(function (v, i) { v.x = x[i], v.y = y[i]; });\r\n                this._descent.project = new Projection(this._nodes, this._groups, this._rootGroup, curConstraints, true).projectFunctions();\r\n                this._nodes.forEach(function (v, i) { x[i] = v.x, y[i] = v.y; });\r\n            }\r\n\r\n            // allow not immediately connected nodes to relax apart (p-stress)\r\n            this._descent.G = G;\r\n            this._descent.run(initialAllConstraintsIterations);\r\n\r\n            if (gridSnapIterations) {\r\n                this._descent.snapStrength = 1000;\r\n                this._descent.snapGridSize = this._nodes[0].width;\r\n                this._descent.numGridSnapNodes = n;\r\n                this._descent.scaleSnapByMaxH = n != N; // if we have groups then need to scale hessian so grid forces still apply\r\n                var G0 = Descent.createSquareMatrix(N,(i, j) => {\r\n                    if (i >= n || j >= n) return G[i][j];\r\n                    return 0\r\n                });\r\n                this._descent.G = G0;\r\n                this._descent.run(gridSnapIterations);\r\n            }\r\n\r\n            this.updateNodePositions();\r\n            this.separateOverlappingComponents(w, h, centerGraph);\r\n            return keepRunning ? this.resume() : this;\r\n        }\r\n\r\n        private initialLayout(iterations: number, x: number[], y: number[]) {\r\n            if (this._groups.length > 0 && iterations > 0) {\r\n                // construct a flat graph with dummy nodes for the groups and edges connecting group dummy nodes to their children\r\n                // todo: edges attached to groups are replaced with edges connected to the corresponding group dummy node\r\n                var n = this._nodes.length;\r\n                var edges = this._links.map(e => <any>{ source: (<Node>e.source).index, target: (<Node>e.target).index });\r\n                var vs = this._nodes.map(v => <any>{ index: v.index });\r\n                this._groups.forEach((g, i) => {\r\n                    vs.push(<any>{ index: g.index = n + i });\r\n                });\r\n                this._groups.forEach((g, i) => {\r\n                    if (typeof g.leaves !== 'undefined')\r\n                        g.leaves.forEach(v => edges.push({ source: g.index, target: v.index }));\r\n                    if (typeof g.groups !== 'undefined')\r\n                        g.groups.forEach(gg => edges.push({ source: g.index, target: gg.index }));\r\n                });\r\n\r\n                // layout the flat graph with dummy nodes and edges\r\n                new Layout()\r\n                    .size(this.size())\r\n                    .nodes(vs)\r\n                    .links(edges)\r\n                    .avoidOverlaps(false)\r\n                    .linkDistance(this.linkDistance())\r\n                    .symmetricDiffLinkLengths(5)\r\n                    .convergenceThreshold(1e-4)\r\n                    .start(iterations, 0, 0, 0, false);\r\n\r\n                this._nodes.forEach(v => {\r\n                    x[v.index] = vs[v.index].x;\r\n                    y[v.index] = vs[v.index].y;\r\n                });\r\n            } else {\r\n                this._descent.run(iterations);\r\n            }\r\n        }\r\n\r\n        // recalculate nodes position for disconnected graphs\r\n        private separateOverlappingComponents(width: number, height: number, centerGraph: boolean = true): void {\r\n            // recalculate nodes position for disconnected graphs\r\n            if (!this._distanceMatrix && this._handleDisconnected) {\r\n                let x = this._descent.x[0], y = this._descent.x[1];\r\n                this._nodes.forEach(function (v, i) { v.x = x[i], v.y = y[i]; });\r\n                var graphs = separateGraphs(this._nodes, this._links);\r\n                applyPacking(graphs, width, height, this._defaultNodeSize, 1, centerGraph);\r\n                this._nodes.forEach((v, i) => {\r\n                    this._descent.x[0][i] = v.x, this._descent.x[1][i] = v.y;\r\n                    if (v.bounds) {\r\n                        v.bounds.setXCentre(v.x);\r\n                        v.bounds.setYCentre(v.y);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        resume(): this {\r\n            return this.alpha(0.1);\r\n        }\r\n\r\n        stop(): this {\r\n            return this.alpha(0);\r\n        }\r\n\r\n        /// find a visibility graph over the set of nodes.  assumes all nodes have a\r\n        /// bounds property (a rectangle) and that no pair of bounds overlaps.\r\n        prepareEdgeRouting(nodeMargin: number = 0) {\r\n            this._visibilityGraph = new TangentVisibilityGraph(\r\n                this._nodes.map(function (v) {\r\n                    return v.bounds.inflate(-nodeMargin).vertices();\r\n                }));\r\n        }\r\n\r\n        /**\r\n         * find a route avoiding node bounds for the given edge.\r\n         * assumes the visibility graph has been created (by prepareEdgeRouting method)\r\n         * and also assumes that nodes have an index property giving their position in the\r\n         * node array.  This index property is created by the start() method.\r\n         * @param [edge] The edge to generate a route for.\r\n         * @param {number} [ah] The size of the arrow head, a distance to shorten the end\r\n         *                      of the edge by.  Defaults to 5.\r\n         */\r\n        routeEdge(edge, ah: number = 5, draw) {\r\n            var lineData = [];\r\n            //if (d.source.id === 10 && d.target.id === 11) {\r\n            //    debugger;\r\n            //}\r\n            var vg2 = new TangentVisibilityGraph(this._visibilityGraph.P, { V: this._visibilityGraph.V, E: this._visibilityGraph.E }),\r\n                port1 = <TVGPoint>{ x: edge.source.x, y: edge.source.y },\r\n                port2 = <TVGPoint>{ x: edge.target.x, y: edge.target.y },\r\n                start = vg2.addPoint(port1, edge.source.index),\r\n                end = vg2.addPoint(port2, edge.target.index);\r\n            vg2.addEdgeIfVisible(port1, port2, edge.source.index, edge.target.index);\r\n            if (typeof draw !== 'undefined') {\r\n                draw(vg2);\r\n            }\r\n            var sourceInd = e => e.source.id, targetInd = e => e.target.id, length = e => e.length(),\r\n                spCalc = new Calculator(vg2.V.length, vg2.E, sourceInd, targetInd, length),\r\n                shortestPath = spCalc.PathFromNodeToNode(start.id, end.id);\r\n            if (shortestPath.length === 1 || shortestPath.length === vg2.V.length) {\r\n                let route = makeEdgeBetween(edge.source.innerBounds, edge.target.innerBounds, ah);\r\n                lineData = [route.sourceIntersection, route.arrowStart];\r\n            } else {\r\n                var n = shortestPath.length - 2,\r\n                    p = vg2.V[shortestPath[n]].p,\r\n                    q = vg2.V[shortestPath[0]].p,\r\n                    lineData = [edge.source.innerBounds.rayIntersection(p.x, p.y)];\r\n                for (var i = n; i >= 0; --i)\r\n                    lineData.push(vg2.V[shortestPath[i]].p);\r\n                lineData.push(makeEdgeTo(q, edge.target.innerBounds, ah));\r\n            }\r\n            //lineData.forEach((v, i) => {\r\n            //    if (i > 0) {\r\n            //        var u = lineData[i - 1];\r\n            //        this._nodes.forEach(function (node) {\r\n            //            if (node.id === getSourceIndex(d) || node.id === getTargetIndex(d)) return;\r\n            //            var ints = node.innerBounds.lineIntersections(u.x, u.y, v.x, v.y);\r\n            //            if (ints.length > 0) {\r\n            //                debugger;\r\n            //            }\r\n            //        })\r\n            //    }\r\n            //})\r\n            return lineData;\r\n        }\r\n\r\n        //The link source and target may be just a node index, or they may be references to nodes themselves.\r\n        static getSourceIndex(e: Link<Node | number>): number {\r\n            return typeof e.source === 'number' ? <number>e.source : (<Node>e.source).index;\r\n        }\r\n\r\n        //The link source and target may be just a node index, or they may be references to nodes themselves.\r\n        static getTargetIndex(e: Link<Node | number>): number {\r\n            return typeof e.target === 'number' ? <number>e.target : (<Node>e.target).index;\r\n        }\r\n\r\n        // Get a string ID for a given link.\r\n        static linkId(e: Link<Node | number>): string {\r\n            return Layout.getSourceIndex(e) + \"-\" + Layout.getTargetIndex(e);\r\n        }\r\n\r\n        // The fixed property has three bits:\r\n        // Bit 1 can be set externally (e.g., d.fixed = true) and show persist.\r\n        // Bit 2 stores the dragging state, from mousedown to mouseup.\r\n        // Bit 3 stores the hover state, from mouseover to mouseout.\r\n        static dragStart(d: Node | Group) {\r\n            if (isGroup(d)) {\r\n                Layout.storeOffset(d, Layout.dragOrigin(d));\r\n            } else {\r\n                Layout.stopNode(d);\r\n                d.fixed |= 2; // set bit 2\r\n            }\r\n        }\r\n\r\n        // we clobber any existing desired positions for nodes\r\n        // in case another tick event occurs before the drag\r\n        private static stopNode(v: Node) {\r\n            (<any>v).px = v.x;\r\n            (<any>v).py = v.y;\r\n        }\r\n\r\n        // we store offsets for each node relative to the centre of the ancestor group\r\n        // being dragged in a pair of properties on the node\r\n        private static storeOffset(d: Group, origin: { x: number, y: number }) {\r\n            if (typeof d.leaves !== 'undefined') {\r\n                d.leaves.forEach(v => {\r\n                    v.fixed |= 2;\r\n                    Layout.stopNode(v);\r\n                    (<any>v)._dragGroupOffsetX = v.x - origin.x;\r\n                    (<any>v)._dragGroupOffsetY = v.y - origin.y;\r\n                });\r\n            }\r\n            if (typeof d.groups !== 'undefined') {\r\n                d.groups.forEach(g => Layout.storeOffset(g, origin));\r\n            }\r\n        }\r\n\r\n        // the drag origin is taken as the centre of the node or group\r\n        static dragOrigin(d: Node | Group): { x: number, y: number } {\r\n            if (isGroup(d)) {\r\n                return {\r\n                    x: d.bounds.cx(),\r\n                    y: d.bounds.cy()\r\n                };\r\n            } else {\r\n                return d;\r\n            }\r\n        }\r\n\r\n        // for groups, the drag translation is propagated down to all of the children of\r\n        // the group.\r\n        static drag(d: Node | Group, position: { x: number, y: number }) {\r\n            if (isGroup(d)) {\r\n                if (typeof d.leaves !== 'undefined') {\r\n                    d.leaves.forEach(v => {\r\n                        d.bounds.setXCentre(position.x);\r\n                        d.bounds.setYCentre(position.y);\r\n                        (<any>v).px = (<any>v)._dragGroupOffsetX + position.x;\r\n                        (<any>v).py = (<any>v)._dragGroupOffsetY + position.y;\r\n                    });\r\n                }\r\n                if (typeof d.groups !== 'undefined') {\r\n                    d.groups.forEach(g => Layout.drag(g, position));\r\n                }\r\n            } else {\r\n                (<any>d).px = position.x;\r\n                (<any>d).py = position.y;\r\n            }\r\n        }\r\n\r\n        // we unset only bits 2 and 3 so that the user can fix nodes with another a different\r\n        // bit such that the lock persists between drags\r\n        static dragEnd(d) {\r\n            if (isGroup(d)) {\r\n                if (typeof d.leaves !== 'undefined') {\r\n                    d.leaves.forEach(v => {\r\n                        Layout.dragEnd(v);\r\n                        delete (<any>v)._dragGroupOffsetX;\r\n                        delete (<any>v)._dragGroupOffsetY;\r\n                    });\r\n                }\r\n                if (typeof d.groups !== 'undefined') {\r\n                    d.groups.forEach(Layout.dragEnd);\r\n                }\r\n            } else {\r\n                d.fixed &= ~6; // unset bits 2 and 3\r\n                //d.fixed = 0;\r\n            }\r\n        }\r\n\r\n        // in d3 hover temporarily locks nodes, currently not used in cola\r\n        static mouseOver(d) {\r\n            d.fixed |= 4; // set bit 3\r\n            d.px = d.x, d.py = d.y; // set velocity to zero\r\n        }\r\n\r\n        // in d3 hover temporarily locks nodes, currently not used in cola\r\n        static mouseOut(d) {\r\n            d.fixed &= ~4; // unset bit 3\r\n        }\r\n    }\r\n"],"names":[],"mappings":";;;;AAAA,IAAA,qCAA0C;AAC1C,IAAA,yCAA+H;AAC/H,IAAA,iCAAiC;AACjC,IAAA,qCAA8E;AAC9E,IAAA,6CAA0C;AAC1C,IAAA,2BAAuD;AACvD,IAAA,uDAAiE;AAO7D,IAAY,SAA8B;AAA1C,CAAA,SAAY,SAAS;IAAG,SAAA,CAAA,SAAA,CAAA,QAAA,GAAA,EAAA,GAAA,OAAK,CAAA;IAAE,SAAA,CAAA,SAAA,CAAA,OAAA,GAAA,EAAA,GAAA,MAAI,CAAA;IAAE,SAAA,CAAA,SAAA,CAAA,MAAA,GAAA,EAAA,GAAA,KAAG,CAAA;AAAC,CAAC,EAA9B,SAAS,GAAT,QAAA,SAAS,IAAA,CAAT,QAAA,SAAS,GAAA,CAAA,CAAA,GAAqB;;AA+C1C,SAAS,OAAO,CAAC,CAAM;IACnB,OAAO,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,CAAC;AAC9E,CAAC;AAwBD,IAAA,SAAA;IAAA,SAAA;QAAA,IAAA,QAAA,IAAA,CAkyBC;QAjyBW,IAAA,CAAA,WAAW,GAAG;YAAC,CAAC;YAAE,CAAC;SAAC,CAAC;QACrB,IAAA,CAAA,aAAa,GAAyC,EAAE,CAAC;QACzD,IAAA,CAAA,gBAAgB,GAAW,EAAE,CAAC;QAC9B,IAAA,CAAA,qBAAqB,GAAG,IAAI,CAAC;QAC7B,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC;QACjB,IAAA,CAAA,cAAc,GAAG,KAAK,CAAC;QACvB,IAAA,CAAA,mBAAmB,GAAG,IAAI,CAAC;QAG3B,IAAA,CAAA,QAAQ,GAAG,KAAK,CAAC;QACjB,IAAA,CAAA,MAAM,GAAG,EAAE,CAAC;QACZ,IAAA,CAAA,OAAO,GAAG,EAAE,CAAC;QACb,IAAA,CAAA,UAAU,GAAG,IAAI,CAAC;QAClB,IAAA,CAAA,MAAM,GAA0B,EAAE,CAAC;QACnC,IAAA,CAAA,YAAY,GAAG,EAAE,CAAC;QAClB,IAAA,CAAA,eAAe,GAAG,IAAI,CAAC;QACvB,IAAA,CAAA,QAAQ,GAAY,IAAI,CAAC;QACzB,IAAA,CAAA,wBAAwB,GAAG,IAAI,CAAC;QAChC,IAAA,CAAA,UAAU,GAAG,IAAI,CAAC;QAClB,IAAA,CAAA,gBAAgB,GAAG,IAAI,CAAC;QACxB,IAAA,CAAA,iBAAiB,GAAG,IAAI,CAAC;QAGvB,IAAA,CAAA,KAAK,GAAG,IAAI,CAAC;QAkVvB,IAAA,CAAA,YAAY,GAA2B;YACnC,cAAc,EAAE,MAAM,CAAC,cAAc;YACrC,cAAc,EAAE,MAAM,CAAC,cAAc;YACrC,SAAS,EAAE,MAAM,CAAC,aAAa;YAC/B,OAAO,EAAE,SAAA,CAAC;gBAAI,OAAA,OAAO,KAAI,CAAC,SAAS,KAAK,UAAU,CAAC,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAA5D,CAA4D;SAC7E,CAAC;IAmbN,CAAC;IAtwBU,OAAA,SAAA,CAAA,EAAE,GAAT,SAAU,CAAqB,EAAE,QAAiC;QAE9D,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,CAAA,CAAE,CAAC;QACjC,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;YACvB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;SACvC,MAAM;YACH,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;SAC5B;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAIS,OAAA,SAAA,CAAA,OAAO,GAAjB,SAAkB,CAAQ;QACtB,IAAI,IAAI,CAAC,KAAK,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,WAAW,EAAE;YACzD,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACzB;IACL,CAAC;IAKS,OAAA,SAAA,CAAA,IAAI,GAAd;QACI,MAAO,CAAC,IAAI,CAAC,IAAI,EAAE;IACvB,CAAC;IAKS,OAAA,SAAA,CAAA,IAAI,GAAd;QACI,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC;gBAAE,IAAI,EAAE,SAAS,CAAC,GAAG;gBAAE,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC;gBAAE,MAAM,EAAE,IAAI,CAAC,WAAW;YAAA,CAAE,CAAC,CAAC;YACxF,OAAO,IAAI,CAAC;SACf;QACD,IAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EACtB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QAC7B,IAAI,CAAC,EAAE,CAAC,CAAC;QAET,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAE;YACpB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,CAAC,KAAK,EAAE;gBACT,IAAI,OAAO,CAAC,CAAC,EAAE,KAAK,WAAW,IAAI,OAAO,CAAC,CAAC,EAAE,KAAK,WAAW,EAAE;oBAC5D,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;oBACX,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;iBACd;gBACD,IAAI,CAAC,GAAG;oBAAC,CAAC,CAAC,EAAE;oBAAE,CAAC,CAAC,EAAE;iBAAC,CAAC;gBACrB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACjC;SACJ;QAED,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;QAEpC,IAAI,EAAE,KAAK,CAAC,EAAE;YACV,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SACnB,MAAM,IAAI,OAAO,IAAI,CAAC,WAAW,KAAK,WAAW,EAAE;YAChD,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;SACpB;QACD,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QAEtB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,IAAI,CAAC,OAAO,CAAC;YAAE,IAAI,EAAE,SAAS,CAAC,IAAI;YAAE,KAAK,EAAE,IAAI,CAAC,MAAM;YAAE,MAAM,EAAE,IAAI,CAAC,WAAW;QAAA,CAAE,CAAC,CAAC;QACrF,OAAO,KAAK,CAAC;IACjB,CAAC;IAGO,OAAA,SAAA,CAAA,mBAAmB,GAA3B;QACI,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QAC9B,MAAO,CAAC,EAAE,CAAE;YACR,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SACd;IACL,CAAC;IAWD,OAAA,SAAA,CAAA,KAAK,GAAL,SAAM,CAAO;QACT,IAAI,CAAC,CAAC,EAAE;YACJ,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBAGpD,IAAI,CAAC,GAAG,CAAC,CAAC;gBACV,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAU,CAAC;oBAC3B,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAU,CAAC,CAAC,MAAM,EAAU,CAAC,CAAC,MAAM,CAAC,CAAC;gBACxD,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC7B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAE;oBACxB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAA,CAAE,CAAC;iBACvB;aACJ;YACD,OAAO,IAAI,CAAC,MAAM,CAAC;SACtB;QACD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IASD,OAAA,SAAA,CAAA,MAAM,GAAN,SAAO,CAAgB;QAAvB,IAAA,QAAA,IAAA,CAuBC;QAtBG,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,CAAA,CAAE,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAA,CAAC;YAClB,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK,WAAW,EAChC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC;YAClB,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAAE;gBACjC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,SAAC,CAAC,EAAE,CAAC;oBAClB,IAAI,OAAO,CAAC,KAAK,QAAQ,EACrB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAA;gBACjD,CAAC,CAAC,CAAC;aACN;YACD,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAAE;gBACjC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,SAAC,EAAE,EAAE,CAAC;oBACnB,IAAI,OAAO,EAAE,KAAK,QAAQ,EACtB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAA;gBACnD,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAA,CAAC;YAAI,OAAA,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW;QAA/B,CAA+B,CAAC,CAAC;QAClF,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAA,CAAC;YAAI,OAAA,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW;QAA/B,CAA+B,CAAC,CAAC;QACnF,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,OAAA,SAAA,CAAA,gBAAgB,GAAhB,SAAiB,CAAW;QACxB,IAAI,CAAC,GAAG,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3F,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,OAAO,IAAI,CAAC;IAChB,CAAC;IAUD,OAAA,SAAA,CAAA,aAAa,GAAb,SAAc,CAAW;QACrB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,cAAc,CAAC;QAClD,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC;IAChB,CAAC;IAYD,OAAA,SAAA,CAAA,kBAAkB,GAAlB,SAAmB,CAAW;QAC1B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,mBAAmB,CAAC;QACvD,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC;IAChB,CAAC;IAQD,OAAA,SAAA,CAAA,UAAU,GAAV,SAAW,IAAY,EAAE,aAAwC;QAC7D,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,GAAG,GAAG,CAAC;QAClC,IAAI,CAAC,wBAAwB,GAAG;YAC5B,IAAI,EAAE,IAAI;YACV,gBAAgB,EAAE,OAAO,aAAa,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAAc,OAAO,aAAa,CAAA;YAAC,CAAC,CAAC,CAAC,CAAC,aAAa;SAC7G,CAAC;QACF,OAAO,IAAI,CAAC;IAChB,CAAC;IASD,OAAA,SAAA,CAAA,KAAK,GAAL,SAAM,CAA4B;QAC9B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,OAAO,IAAI,CAAC;IAChB,CAAC;IAUD,OAAA,SAAA,CAAA,WAAW,GAAX,SAAY,CAAc;QACtB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,YAAY,CAAC;QAChD,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC;IAChB,CAAC;IAWD,OAAA,SAAA,CAAA,cAAc,GAAd,SAAe,CAAO;QAClB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,eAAe,CAAC;QACnD,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,OAAO,IAAI,CAAC;IAChB,CAAC;IAUD,OAAA,SAAA,CAAA,IAAI,GAAJ,SAAK,CAAiB;QAClB,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC,WAAW,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,OAAO,IAAI,CAAC;IAChB,CAAC;IASD,OAAA,SAAA,CAAA,eAAe,GAAf,SAAgB,CAAO;QACnB,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC,gBAAgB,CAAC;QACrC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,OAAO,IAAI,CAAC;IAChB,CAAC;IASD,OAAA,SAAA,CAAA,gBAAgB,GAAhB,SAAiB,CAAO;QACpB,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC,iBAAiB,CAAC;QACtC,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC;IAChB,CAAC;IASD,OAAA,SAAA,CAAA,YAAY,GAAZ,SAAa,CAAO;QAChB,IAAI,CAAC,CAAC,EAAE;YACJ,OAAO,IAAI,CAAC,aAAa,CAAC;SAC7B;QACD,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,OAAA,SAAA,CAAA,QAAQ,GAAR,SAAS,CAAoB;QACzB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,OAAO,IAAI,CAAC;IAChB,CAAC;IAID,OAAA,SAAA,CAAA,oBAAoB,GAApB,SAAqB,CAAU;QAC3B,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC,UAAU,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC;IAChB,CAAC;IAID,OAAA,SAAA,CAAA,KAAK,GAAL,SAAM,CAAU;QACZ,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC;aACrC;YACD,CAAC,GAAG,CAAC,CAAC,CAAC;YACP,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;qBACtB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;aACxB,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE;gBACd,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,IAAI,CAAC,OAAO,CAAC;wBAAE,IAAI,EAAE,SAAS,CAAC,KAAK;wBAAE,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC;oBAAA,CAAC,CAAC,CAAC;oBAC/D,IAAI,CAAC,IAAI,EAAE,CAAC;iBACf;aACJ;YACD,OAAO,IAAI,CAAC;SACf;IACL,CAAC;IAED,OAAA,SAAA,CAAA,aAAa,GAAb,SAAc,IAAyB;QACnC,OAAO,OAAO,IAAI,CAAC,aAAa,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,AAA+B,IAAI,CAAC,aAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,AAAS,IAAI,CAAC,aAAa,CAAC;IAC9I,CAAC;IAEM,OAAA,aAAa,GAApB,SAAqB,IAAuB,EAAE,MAAc;QACxD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED,OAAA,SAAA,CAAA,WAAW,GAAX,SAAY,IAAyB;QACjC,OAAO,OAAO,IAAI,CAAC,SAAS,KAAK,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,CAAC;IAmBD,OAAA,SAAA,CAAA,wBAAwB,GAAxB,SAAyB,WAAmB,EAAE,CAAa;QAA3D,IAAA,QAAA,IAAA,CAIC;QAJ6C,IAAA,MAAA,KAAA,GAAA;YAAA,IAAA,CAAa;QAAA;QACvD,IAAI,CAAC,YAAY,CAAC,SAAA,CAAC;YAAI,OAAA,WAAW,GAAG,CAAC,CAAC,MAAM;QAAtB,CAAsB,CAAC,CAAC;QAC/C,IAAI,CAAC,qBAAqB,GAAG;YAAM,OAAA,cAAA,wBAAwB,CAAC,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,YAAY,EAAE,CAAC,CAAC;QAA3D,CAA2D,CAAC;QAC/F,OAAO,IAAI,CAAC;IAChB,CAAC;IAYD,OAAA,SAAA,CAAA,kBAAkB,GAAlB,SAAmB,WAAmB,EAAE,CAAa;QAArD,IAAA,QAAA,IAAA,CAIC;QAJuC,IAAA,MAAA,KAAA,GAAA;YAAA,IAAA,CAAa;QAAA;QACjD,IAAI,CAAC,YAAY,CAAC,SAAA,CAAC;YAAI,OAAA,WAAW,GAAG,CAAC,CAAC,MAAM;QAAtB,CAAsB,CAAC,CAAC;QAC/C,IAAI,CAAC,qBAAqB,GAAG;YAAM,OAAA,cAAA,kBAAkB,CAAC,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,YAAY,EAAE,CAAC,CAAC;QAArD,CAAqD,CAAC;QACzF,OAAO,IAAI,CAAC;IAChB,CAAC;IAYD,OAAA,SAAA,CAAA,KAAK,GAAL,SACI,8BAA0C,EAC1C,+BAA2C,EAC3C,+BAA2C,EAC3C,kBAA8B,EAC9B,WAAkB,EAClB,WAAkB;QANtB,IAAA,QAAA,IAAA,CAsJC;QArJG,IAAA,mCAAA,KAAA,GAAA;YAAA,iCAAA,CAA0C;QAAA;QAC1C,IAAA,oCAAA,KAAA,GAAA;YAAA,kCAAA,CAA2C;QAAA;QAC3C,IAAA,oCAAA,KAAA,GAAA;YAAA,kCAAA,CAA2C;QAAA;QAC3C,IAAA,uBAAA,KAAA,GAAA;YAAA,qBAAA,CAA8B;QAAA;QAC9B,IAAA,gBAAA,KAAA,GAAA;YAAA,cAAA,IAAkB;QAAA;QAClB,IAAA,gBAAA,KAAA,GAAA;YAAA,cAAA,IAAkB;QAAA;QAElB,IAAI,CAAS,EACT,CAAS,EACT,CAAC,GAAgB,IAAI,CAAC,KAAK,EAAG,CAAC,MAAM,EACrC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAC/B,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EACtB,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EACvB,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAE5B,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QAEvC,IAAI,CAAC,GAAG,IAAI,CAAC;QAEb,IAAI,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC;QAE7B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAC,CAAC,EAAE,CAAC;YACrB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;YACZ,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE;gBAC5B,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAC5B;YACD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAK7D,IAAI,SAAS,CAAC;QACd,IAAI,IAAI,CAAC,eAAe,EAAE;YAEtB,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC;SACpC,MAAM;YAEH,SAAS,GAAG,AAAC,IAAI,gBAAA,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,cAAc,EAAE,SAAA,CAAC;gBAAG,OAAA,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YAArB,CAAqB,CAAC,CAAC,AAAC,cAAc,EAAE,CAAC;YAIvI,CAAC,GAAG,UAAA,OAAO,CAAC,kBAAkB,CAAC,CAAC,EAAE;gBAAM,OAAA,CAAC;YAAD,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAA,CAAC;gBACjB,IAAI,OAAO,CAAC,CAAC,MAAM,IAAI,QAAQ,EAAE,CAAC,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,CAAS,CAAC,CAAC,MAAM,CAAC,CAAC;gBAC1E,IAAI,OAAO,CAAC,CAAC,MAAM,IAAI,QAAQ,EAAE,CAAC,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,CAAS,CAAC,CAAC,MAAM,CAAC,CAAC;YAC9E,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAA,CAAC;gBACjB,IAAM,CAAC,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;gBACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC;SACN;QAED,IAAI,CAAC,GAAG,UAAA,OAAO,CAAC,kBAAkB,CAAC,CAAC,EAAE,SAAU,CAAC,EAAE,CAAC;YAChD,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,UAAU,IAAI,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,WAAW,EAAE;YAClE,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,IAAI,aAAa,GAAG,SAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,aAAa;gBAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;gBAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC;YACtC,CAAC,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAA,CAAC;gBAClB,aAAa,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;gBAiBrD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACrB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;SACN,MAAM,IAAI,CAAC,UAAU,GAAG;YAAE,MAAM,EAAE,IAAI,CAAC,MAAM;YAAE,MAAM,EAAE,EAAE;QAAA,CAAE,CAAC;QAE7D,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC;QAC7C,IAAI,IAAI,CAAC,wBAAwB,EAAE;YACzB,IAAI,CAAC,YAAa,CAAC,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC;YAC3F,cAAc,GAAG,cAAc,CAAC,MAAM,CAAC,cAAA,+BAA+B,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,EAAO,AAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;SAGzJ;QAED,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAA,OAAO,CAAC;YAAC,CAAC;YAAE,CAAC;SAAC,EAAE,CAAC,CAAC,CAAC;QAEvC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAE;YACxB,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,CAAC,KAAK,EAAE;gBACT,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBACX,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBACX,IAAI,CAAC,GAAG;oBAAC,CAAC,CAAC,CAAC;oBAAE,CAAC,CAAC,CAAC;iBAAC,CAAC;gBACnB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACjC;SACJ;QACD,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QAK1C,IAAI,CAAC,aAAa,CAAC,8BAA8B,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAGzD,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,YAAA,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC,gBAAgB,EAAE,CAAC;QACrJ,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QACnD,IAAI,CAAC,6BAA6B,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;QAGtD,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QACvB,IAAI,EAAE,EAAE;YACJ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAU,CAAC,EAAE,CAAC;gBAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAAC,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,YAAA,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,cAAc,EAAE,IAAI,CAAC,CAAC,gBAAgB,EAAE,CAAC;YAC5H,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAU,CAAC,EAAE,CAAC;gBAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAAC,CAAC,CAAC,CAAC;SACpE;QAGD,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAEnD,IAAI,kBAAkB,EAAE;YACpB,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC;YAClC,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAClD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,GAAG,CAAC,CAAC;YACnC,IAAI,CAAC,QAAQ,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,EAAE,GAAG,UAAA,OAAO,CAAC,kBAAkB,CAAC,CAAC,EAAC,SAAC,CAAC,EAAE,CAAC;gBACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrC,OAAO,CAAC,CAAA;YACZ,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;SACzC;QAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,6BAA6B,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;QACtD,OAAO,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAC9C,CAAC;IAEO,OAAA,SAAA,CAAA,aAAa,GAArB,SAAsB,UAAkB,EAAE,CAAW,EAAE,CAAW;QAC9D,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,UAAU,GAAG,CAAC,EAAE;YAG3C,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YAC3B,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAA,CAAC;gBAAI,OAAA,AAAK;oBAAE,MAAM,EAAS,CAAC,CAAC,MAAO,CAAC,KAAK;oBAAE,MAAM,EAAS,CAAC,CAAC,MAAO,CAAC,KAAK;gBAAA,CAAE,CAAA;YAAvE,CAAuE,CAAC,CAAC;YAC1G,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAA,CAAC;gBAAI,OAAA,AAAK;oBAAE,KAAK,EAAE,CAAC,CAAC,KAAK;gBAAA,CAAE,CAAA;YAAvB,CAAuB,CAAC,CAAC;YACvD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAC,CAAC,EAAE,CAAC;gBACtB,EAAE,CAAC,IAAI,CAAM;oBAAE,KAAK,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC;gBAAA,CAAE,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAC,CAAC,EAAE,CAAC;gBACtB,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAC/B,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,SAAA,CAAC;oBAAI,OAAA,KAAK,CAAC,IAAI,CAAC;wBAAE,MAAM,EAAE,CAAC,CAAC,KAAK;wBAAE,MAAM,EAAE,CAAC,CAAC,KAAK;oBAAA,CAAE,CAAC;gBAAhD,CAAgD,CAAC,CAAC;gBAC5E,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAC/B,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,SAAA,EAAE;oBAAI,OAAA,KAAK,CAAC,IAAI,CAAC;wBAAE,MAAM,EAAE,CAAC,CAAC,KAAK;wBAAE,MAAM,EAAE,EAAE,CAAC,KAAK;oBAAA,CAAE,CAAC;gBAAjD,CAAiD,CAAC,CAAC;YAClF,CAAC,CAAC,CAAC;YAGH,IAAI,MAAM,EAAE,CACP,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CACjB,KAAK,CAAC,EAAE,CAAC,CACT,KAAK,CAAC,KAAK,CAAC,CACZ,aAAa,CAAC,KAAK,CAAC,CACpB,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CACjC,wBAAwB,CAAC,CAAC,CAAC,CAC3B,oBAAoB,CAAC,IAAI,CAAC,CAC1B,KAAK,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;YAEvC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAA,CAAC;gBACjB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3B,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;SACN,MAAM;YACH,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;SACjC;IACL,CAAC;IAGO,OAAA,SAAA,CAAA,6BAA6B,GAArC,SAAsC,KAAa,EAAE,MAAc,EAAE,WAA2B;QAAhG,IAAA,QAAA,IAAA,CAeC;QAfoE,IAAA,gBAAA,KAAA,GAAA;YAAA,cAAA,IAA2B;QAAA;QAE5F,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,mBAAmB,EAAE;YACnD,IAAI,GAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAU,CAAC,EAAE,CAAC;gBAAI,CAAC,CAAC,CAAC,GAAG,GAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAC,CAAC,CAAC,CAAC,CAAC;YAAC,CAAC,CAAC,CAAC;YACjE,IAAI,MAAM,GAAG,qBAAA,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACtD,qBAAA,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;YAC3E,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAC,CAAC,EAAE,CAAC;gBACrB,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACzD,IAAI,CAAC,CAAC,MAAM,EAAE;oBACV,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzB,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC5B;YACL,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAED,OAAA,SAAA,CAAA,MAAM,GAAN;QACI,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;IAED,OAAA,SAAA,CAAA,IAAI,GAAJ;QACI,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IAID,OAAA,SAAA,CAAA,kBAAkB,GAAlB,SAAmB,UAAsB;QAAtB,IAAA,eAAA,KAAA,GAAA;YAAA,aAAA,CAAsB;QAAA;QACrC,IAAI,CAAC,gBAAgB,GAAG,IAAI,OAAA,sBAAsB,CAC9C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAU,CAAC;YACvB,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE,CAAC;QACpD,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAWD,OAAA,SAAA,CAAA,SAAS,GAAT,SAAU,IAAI,EAAE,EAAc,EAAE,IAAI;QAApB,IAAA,OAAA,KAAA,GAAA;YAAA,KAAA,CAAc;QAAA;QAC1B,IAAI,QAAQ,GAAG,EAAE,CAAC;QAIlB,IAAI,GAAG,GAAG,IAAI,OAAA,sBAAsB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE;YAAE,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAAE,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAAA,CAAE,CAAC,EACrH,KAAK,GAAa;YAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAAA,CAAE,EACxD,KAAK,GAAa;YAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAAA,CAAE,EACxD,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAC9C,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACjD,GAAG,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACzE,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;YAC7B,IAAI,CAAC,GAAG,CAAC,CAAC;SACb;QACD,IAAI,SAAS,GAAG,SAAA,CAAC;YAAI,OAAA,CAAC,CAAC,MAAM,CAAC,EAAE;QAAX,CAAW,EAAE,SAAS,GAAG,SAAA,CAAC;YAAI,OAAA,CAAC,CAAC,MAAM,CAAC,EAAE;QAAX,CAAW,EAAE,MAAM,GAAG,SAAA,CAAC;YAAI,OAAA,CAAC,CAAC,MAAM,EAAE;QAAV,CAAU,EACpF,MAAM,GAAG,IAAI,gBAAA,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC,EAC1E,YAAY,GAAG,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;QAC/D,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,IAAI,YAAY,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE;YACnE,IAAI,KAAK,GAAG,YAAA,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;YAClF,QAAQ,GAAG;gBAAC,KAAK,CAAC,kBAAkB;gBAAE,KAAK,CAAC,UAAU;aAAC,CAAC;SAC3D,MAAM;YACH,IAAI,CAAC,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC,EAC3B,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC5B,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC5B,QAAQ,GAAG;gBAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;aAAC,CAAC;YACnE,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CACvB,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,QAAQ,CAAC,IAAI,CAAC,YAAA,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC;SAC7D;QAaD,OAAO,QAAQ,CAAC;IACpB,CAAC;IAGM,OAAA,cAAc,GAArB,SAAsB,CAAsB;QACxC,OAAO,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAS,CAAC,CAAC,MAAM,CAAC,CAAC,CAAQ,CAAC,CAAC,MAAO,CAAC,KAAK,CAAC;IACpF,CAAC;IAGM,OAAA,cAAc,GAArB,SAAsB,CAAsB;QACxC,OAAO,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAS,CAAC,CAAC,MAAM,CAAC,CAAC,CAAQ,CAAC,CAAC,MAAO,CAAC,KAAK,CAAC;IACpF,CAAC;IAGM,OAAA,MAAM,GAAb,SAAc,CAAsB;QAChC,OAAO,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACrE,CAAC;IAMM,OAAA,SAAS,GAAhB,SAAiB,CAAe;QAC5B,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;YACZ,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/C,MAAM;YACH,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;SAChB;IACL,CAAC;IAIc,OAAA,QAAQ,GAAvB,SAAwB,CAAO;QACrB,CAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;QACZ,CAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAIc,OAAA,WAAW,GAA1B,SAA2B,CAAQ,EAAE,MAAgC;QACjE,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAAE;YACjC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,SAAA,CAAC;gBACd,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;gBACb,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACb,CAAE,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;gBACtC,CAAE,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC;SACN;QACD,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAAE;YACjC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,SAAA,CAAC;gBAAI,OAAA,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,CAAC;YAA7B,CAA6B,CAAC,CAAC;SACxD;IACL,CAAC;IAGM,OAAA,UAAU,GAAjB,SAAkB,CAAe;QAC7B,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;YACZ,OAAO;gBACH,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE;gBAChB,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE;aACnB,CAAC;SACL,MAAM;YACH,OAAO,CAAC,CAAC;SACZ;IACL,CAAC;IAIM,OAAA,IAAI,GAAX,SAAY,CAAe,EAAE,QAAkC;QAC3D,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;YACZ,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAAE;gBACjC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,SAAA,CAAC;oBACd,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAChC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC1B,CAAE,CAAC,EAAE,GAAS,CAAE,CAAC,iBAAiB,GAAG,QAAQ,CAAC,CAAC,CAAC;oBAChD,CAAE,CAAC,EAAE,GAAS,CAAE,CAAC,iBAAiB,GAAG,QAAQ,CAAC,CAAC,CAAC;gBAC1D,CAAC,CAAC,CAAC;aACN;YACD,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAAE;gBACjC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,SAAA,CAAC;oBAAI,OAAA,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC;gBAAxB,CAAwB,CAAC,CAAC;aACnD;SACJ,MAAM;YACG,CAAE,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC;YACnB,CAAE,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC;SAC5B;IACL,CAAC;IAIM,OAAA,OAAO,GAAd,SAAe,CAAC;QACZ,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;YACZ,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAAE;gBACjC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,SAAA,CAAC;oBACd,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAClB,OAAa,CAAE,CAAC,iBAAiB,CAAC;oBAClC,OAAa,CAAE,CAAC,iBAAiB,CAAC;gBACtC,CAAC,CAAC,CAAC;aACN;YACD,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAAE;gBACjC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aACpC;SACJ,MAAM;YACH,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;SAEjB;IACL,CAAC;IAGM,OAAA,SAAS,GAAhB,SAAiB,CAAC;QACd,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;QACb,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAGM,OAAA,QAAQ,GAAf,SAAgB,CAAC;QACb,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC;IACL,OAAA,MAAC;AAAD,CAAC,AAlyBD,IAkyBC;AAlyBY,QAAA,MAAA,GAAA,OAAM","ignoreList":[0]}},
    {"offset": {"line": 3754, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3759, "column": 0}, "map": {"version":3,"file":"adaptor.js","sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/node_modules/webcola/WebCola/src/adaptor.ts"],"sourcesContent":["import {Layout, EventType, Event} from './layout'\r\n\r\n    export class LayoutAdaptor extends Layout {\r\n\r\n        // dummy functions in case not defined by client\r\n        trigger(e: Event) {};\r\n        kick() {};\r\n        drag() {};\r\n        on(eventType: EventType | string, listener: () => void) : this { return this; };\r\n\r\n        dragstart: (d:any) => void;\r\n        dragStart: (d:any) => void;\r\n        dragend: (d:any) => void;\r\n        dragEnd: (d:any) => void;\r\n\r\n        constructor( options ) {\r\n            super();\r\n\r\n            // take in implementation as defined by client\r\n\r\n            var self = this;\r\n            var o = options;\r\n\r\n            if ( o.trigger ) {\r\n                this.trigger = o.trigger;\r\n            }\r\n\r\n            if ( o.kick ){\r\n                this.kick = o.kick;\r\n            }\r\n\r\n            if ( o.drag ){\r\n                this.drag = o.drag;\r\n            }\r\n\r\n            if ( o.on ){\r\n                this.on = o.on;\r\n            }\r\n\r\n            this.dragstart = this.dragStart = Layout.dragStart;\r\n            this.dragend = this.dragEnd = Layout.dragEnd;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * provides an interface for use with any external graph system (e.g. Cytoscape.js):\r\n     */\r\n    export function adaptor( options ): LayoutAdaptor {\r\n        return new LayoutAdaptor( options );\r\n    }\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,+BAAiD;AAE7C,IAAA,gBAAA,SAAA,MAAA;IAAmC,UAAA,eAAA,QAAM;IAarC,SAAA,cAAa,OAAO;QAApB,IAAA,QACI,OAAA,IAAA,CAAA,IAAA,CAAO,IAAA,IAAA,CAyBV;QArBG,IAAI,IAAI,GAAG,KAAI,CAAC;QAChB,IAAI,CAAC,GAAG,OAAO,CAAC;QAEhB,IAAK,CAAC,CAAC,OAAO,EAAG;YACb,KAAI,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;SAC5B;QAED,IAAK,CAAC,CAAC,IAAI,EAAE;YACT,KAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;SACtB;QAED,IAAK,CAAC,CAAC,IAAI,EAAE;YACT,KAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;SACtB;QAED,IAAK,CAAC,CAAC,EAAE,EAAE;YACP,KAAI,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;SAClB;QAED,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,GAAG,SAAA,MAAM,CAAC,SAAS,CAAC;QACnD,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,GAAG,SAAA,MAAM,CAAC,OAAO,CAAC;;IACjD,CAAC;IApCD,cAAA,SAAA,CAAA,OAAO,GAAP,SAAQ,CAAQ,GAAG,CAAC;;IACpB,cAAA,SAAA,CAAA,IAAI,GAAJ,YAAQ,CAAC;;IACT,cAAA,SAAA,CAAA,IAAI,GAAJ,YAAQ,CAAC;;IACT,cAAA,SAAA,CAAA,EAAE,GAAF,SAAG,SAA6B,EAAE,QAAoB;QAAW,OAAO,IAAI,CAAC;IAAC,CAAC;;IAkCnF,OAAA,aAAC;AAAD,CAAC,AAxCD,CAAmC,SAAA,MAAM,GAwCxC;AAxCY,QAAA,aAAA,GAAA,cAAa;AA6C1B,SAAgB,OAAO,CAAE,OAAO;IAC5B,OAAO,IAAI,aAAa,CAAE,OAAO,CAAE,CAAC;AACxC,CAAC;AAFD,QAAA,OAAA,GAAA,QAEC","ignoreList":[0]}},
    {"offset": {"line": 3822, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3827, "column": 0}, "map": {"version":3,"file":"d3v3adaptor.js","sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/node_modules/webcola/WebCola/src/d3v3adaptor.ts"],"sourcesContent":["////<reference path=\"../extern/d3v3.d.ts\"/>\r\n////commented out the reference, because the path ended up in the typings, which\r\n////makes it impossible import in other projects.\r\ndeclare const d3;\r\n\r\n\r\nimport {Layout, EventType, Event} from './layout';\r\nimport {ID3StyleLayoutAdaptor} from './d3adaptor'\r\n\r\n    export class D3StyleLayoutAdaptor extends Layout implements ID3StyleLayoutAdaptor {\r\n        event = d3.dispatch(EventType[EventType.start], EventType[EventType.tick], EventType[EventType.end]);\r\n\r\n        trigger(e: Event) {\r\n            var d3event = { type: EventType[e.type], alpha: e.alpha, stress: e.stress };\r\n            this.event[d3event.type](d3event); // via d3 dispatcher, e.g. event.start(e);\r\n        }\r\n\r\n        // iterate layout using a d3.timer, which queues calls to tick repeatedly until tick returns true\r\n        kick() {\r\n            d3.timer(() => super.tick());\r\n        }\r\n\r\n        // a function to allow for dragging of nodes\r\n        drag: () => any;\r\n\r\n        constructor() {\r\n            super();\r\n            // bit of trickyness remapping 'this' so we can reference it in the function body.\r\n            var d3layout = this;\r\n            var drag;\r\n            this.drag = function () {\r\n                if (!drag) {\r\n                    var drag = d3.behavior.drag()\r\n                        .origin(Layout.dragOrigin)\r\n                        .on(\"dragstart.d3adaptor\", Layout.dragStart)\r\n                        .on(\"drag.d3adaptor\", d => {\r\n                            Layout.drag(d, <any>d3.event);\r\n                            d3layout.resume(); // restart annealing\r\n                        })\r\n                        .on(\"dragend.d3adaptor\", Layout.dragEnd);\r\n                }\r\n\r\n                if (!arguments.length) return drag;\r\n\r\n                // this is the context of the function, i.e. the d3 selection\r\n                this//.on(\"mouseover.adaptor\", colaMouseover)\r\n                //.on(\"mouseout.adaptor\", colaMouseout)\r\n                    .call(drag);\r\n            }\r\n        }\r\n\r\n        // a function for binding to events on the adapter\r\n        on(eventType: EventType | string, listener: () => void): this {\r\n            if (typeof eventType === 'string') {\r\n                this.event.on(eventType, listener);\r\n            } else {\r\n                this.event.on(EventType[eventType], listener);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * provides an interface for use with d3:\r\n     * - uses the d3 event system to dispatch layout events such as:\r\n     *   o \"start\" (start layout process)\r\n     *   o \"tick\" (after each layout iteration)\r\n     *   o \"end\" (layout converged and complete).\r\n     * - uses the d3 timer to queue layout iterations.\r\n     * - sets up d3.behavior.drag to drag nodes\r\n     *   o use `node.call(<the returned instance of Layout>.drag)` to make nodes draggable\r\n     * returns an instance of the cola.Layout itself with which the user\r\n     * can interact directly.\r\n     */\r\n    export function d3adaptor(): D3StyleLayoutAdaptor {\r\n        return new D3StyleLayoutAdaptor();\r\n    }\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAMA,IAAA,+BAAkD;AAG9C,IAAA,uBAAA,SAAA,MAAA;IAA0C,UAAA,sBAAA,QAAM;IAgB5C,SAAA;QAAA,IAAA,QACI,OAAA,IAAA,CAAA,IAAA,CAAO,IAAA,IAAA,CAuBV;QAvCD,MAAA,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,SAAA,SAAS,CAAC,SAAA,SAAS,CAAC,KAAK,CAAC,EAAE,SAAA,SAAS,CAAC,SAAA,SAAS,CAAC,IAAI,CAAC,EAAE,SAAA,SAAS,CAAC,SAAA,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QAkBjG,IAAI,QAAQ,GAAG,KAAI,CAAC;QACpB,IAAI,IAAI,CAAC;QACT,KAAI,CAAC,IAAI,GAAG;YACR,IAAI,CAAC,IAAI,EAAE;gBACP,IAAI,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CACxB,MAAM,CAAC,SAAA,MAAM,CAAC,UAAU,CAAC,CACzB,EAAE,CAAC,qBAAqB,EAAE,SAAA,MAAM,CAAC,SAAS,CAAC,CAC3C,EAAE,CAAC,gBAAgB,EAAE,SAAA,CAAC;oBACnB,SAAA,MAAM,CAAC,IAAI,CAAC,CAAC,EAAO,EAAE,CAAC,KAAK,CAAC,CAAC;oBAC9B,QAAQ,CAAC,MAAM,EAAE,CAAC;gBACtB,CAAC,CAAC,CACD,EAAE,CAAC,mBAAmB,EAAE,SAAA,MAAM,CAAC,OAAO,CAAC,CAAC;aAChD;YAED,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC;YAGnC,IAAI,CAEC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAA;;IACL,CAAC;IArCD,qBAAA,SAAA,CAAA,OAAO,GAAP,SAAQ,CAAQ;QACZ,IAAI,OAAO,GAAG;YAAE,IAAI,EAAE,SAAA,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;YAAE,KAAK,EAAE,CAAC,CAAC,KAAK;YAAE,MAAM,EAAE,CAAC,CAAC,MAAM;QAAA,CAAE,CAAC;QAC5E,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IAGD,qBAAA,SAAA,CAAA,IAAI,GAAJ;QAAA,IAAA,QAAA,IAAA,CAEC;QADG,EAAE,CAAC,KAAK,CAAC;YAAM,OAAA,OAAA,SAAA,CAAM,IAAI,CAAA,IAAA,CAAA,MAAE;QAAZ,CAAY,CAAC,CAAC;IACjC,CAAC;IAgCD,qBAAA,SAAA,CAAA,EAAE,GAAF,SAAG,SAA6B,EAAE,QAAoB;QAClD,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;YAC/B,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;SACtC,MAAM;YACH,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,SAAA,SAAS,CAAC,SAAS,CAAC,EAAE,QAAQ,CAAC,CAAC;SACjD;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,OAAA,oBAAC;AAAD,CAAC,AAnDD,CAA0C,SAAA,MAAM,GAmD/C;AAnDY,QAAA,oBAAA,GAAA,qBAAoB;AAiEjC,SAAgB,SAAS;IACrB,OAAO,IAAI,oBAAoB,EAAE,CAAC;AACtC,CAAC;AAFD,QAAA,SAAA,GAAA,UAEC","ignoreList":[0]}},
    {"offset": {"line": 3899, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3904, "column": 0}, "map": {"version":3,"file":"d3v4adaptor.js","sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/node_modules/webcola/WebCola/src/d3v4adaptor.ts"],"sourcesContent":["import {dispatch} from 'd3-dispatch'\r\nimport {timer} from 'd3-timer'\r\nimport {drag as d3drag} from 'd3-drag'\r\nimport {Layout, EventType, Event} from './layout'\r\nimport {ID3StyleLayoutAdaptor} from './d3adaptor'\r\n\r\nexport interface D3Context {\r\n    timer: typeof timer; \r\n    drag: typeof d3drag; \r\n    dispatch: typeof dispatch;\r\n    event: any;\r\n}\r\n\r\nexport class D3StyleLayoutAdaptor extends Layout implements ID3StyleLayoutAdaptor {\r\n    event:any;\r\n    trigger(e: Event) {\r\n        var d3event = { type: EventType[e.type], alpha: e.alpha, stress: e.stress };\r\n        // the dispatcher is actually expecting something of type EventTarget as the second argument\r\n        // so passing the thing above is totally abusing the pattern... not sure what to do about this yet\r\n        this.event.call(d3event.type, <any>d3event); // via d3 dispatcher, e.g. event.start(e);\r\n    }\r\n\r\n    // iterate layout using a d3.timer, which queues calls to tick repeatedly until tick returns true\r\n    kick() {\r\n        var t = this.d3Context.timer(() => super.tick() && t.stop());\r\n    }\r\n\r\n    // a function to allow for dragging of nodes\r\n    drag: () => any;\r\n\r\n    constructor(private d3Context: D3Context) {\r\n        super();\r\n        this.event = d3Context.dispatch(EventType[EventType.start], EventType[EventType.tick], EventType[EventType.end]);\r\n\r\n        // bit of trickyness remapping 'this' so we can reference it in the function body.\r\n        var d3layout = this;\r\n        var drag;\r\n        this.drag = function () {\r\n            if (!drag) {\r\n                var drag = d3Context.drag()\r\n                    .subject(Layout.dragOrigin)\r\n                    .on(\"start.d3adaptor\", Layout.dragStart)\r\n                    .on(\"drag.d3adaptor\", d => {\r\n                        Layout.drag(<any>d, d3Context.event);\r\n                        d3layout.resume(); // restart annealing\r\n                    })\r\n                    .on(\"end.d3adaptor\", Layout.dragEnd);\r\n            }\r\n\r\n            if (!arguments.length) return drag;\r\n\r\n            // this is the context of the function, i.e. the d3 selection\r\n            //this//.on(\"mouseover.adaptor\", colaMouseover)\r\n            //.on(\"mouseout.adaptor\", colaMouseout)\r\n            arguments[0].call(drag);\r\n        }\r\n    }\r\n\r\n    // a function for binding to events on the adapter\r\n    on(eventType: EventType | string, listener: () => void): this {\r\n        if (typeof eventType === 'string') {\r\n            this.event.on(eventType, listener);\r\n        } else {\r\n            this.event.on(EventType[eventType], listener);\r\n        }\r\n        return this;\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAA,+BAAiD;AAUjD,IAAA,uBAAA,SAAA,MAAA;IAA0C,UAAA,sBAAA,QAAM;IAiB5C,SAAA,qBAAoB,SAAoB;QAAxC,IAAA,QACI,OAAA,IAAA,CAAA,IAAA,CAAO,IAAA,IAAA,CAyBV;QA1BmB,MAAA,SAAS,GAAT,SAAS,CAAW;QAEpC,KAAI,CAAC,KAAK,GAAG,SAAS,CAAC,QAAQ,CAAC,SAAA,SAAS,CAAC,SAAA,SAAS,CAAC,KAAK,CAAC,EAAE,SAAA,SAAS,CAAC,SAAA,SAAS,CAAC,IAAI,CAAC,EAAE,SAAA,SAAS,CAAC,SAAA,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QAGjH,IAAI,QAAQ,GAAG,KAAI,CAAC;QACpB,IAAI,IAAI,CAAC;QACT,KAAI,CAAC,IAAI,GAAG;YACR,IAAI,CAAC,IAAI,EAAE;gBACP,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI,EAAE,CACtB,OAAO,CAAC,SAAA,MAAM,CAAC,UAAU,CAAC,CAC1B,EAAE,CAAC,iBAAiB,EAAE,SAAA,MAAM,CAAC,SAAS,CAAC,CACvC,EAAE,CAAC,gBAAgB,EAAE,SAAA,CAAC;oBACnB,SAAA,MAAM,CAAC,IAAI,CAAM,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;oBACrC,QAAQ,CAAC,MAAM,EAAE,CAAC;gBACtB,CAAC,CAAC,CACD,EAAE,CAAC,eAAe,EAAE,SAAA,MAAM,CAAC,OAAO,CAAC,CAAC;aAC5C;YAED,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC;YAKnC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAA;;IACL,CAAC;IAzCD,qBAAA,SAAA,CAAA,OAAO,GAAP,SAAQ,CAAQ;QACZ,IAAI,OAAO,GAAG;YAAE,IAAI,EAAE,SAAA,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;YAAE,KAAK,EAAE,CAAC,CAAC,KAAK;YAAE,MAAM,EAAE,CAAC,CAAC,MAAM;QAAA,CAAE,CAAC;QAG5E,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAO,OAAO,CAAC,CAAC;IAChD,CAAC;IAGD,qBAAA,SAAA,CAAA,IAAI,GAAJ;QAAA,IAAA,QAAA,IAAA,CAEC;QADG,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YAAM,OAAA,OAAA,SAAA,CAAM,IAAI,CAAA,IAAA,CAAA,MAAE,IAAI,CAAC,CAAC,IAAI,EAAE;QAAxB,CAAwB,CAAC,CAAC;IACjE,CAAC;IAkCD,qBAAA,SAAA,CAAA,EAAE,GAAF,SAAG,SAA6B,EAAE,QAAoB;QAClD,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;YAC/B,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;SACtC,MAAM;YACH,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,SAAA,SAAS,CAAC,SAAS,CAAC,EAAE,QAAQ,CAAC,CAAC;SACjD;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,OAAA,oBAAC;AAAD,CAAC,AAtDD,CAA0C,SAAA,MAAM,GAsD/C;AAtDY,QAAA,oBAAA,GAAA,qBAAoB","ignoreList":[0]}},
    {"offset": {"line": 3973, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3978, "column": 0}, "map": {"version":3,"file":"d3adaptor.js","sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/node_modules/webcola/WebCola/src/d3adaptor.ts"],"sourcesContent":["import * as d3v3 from './d3v3adaptor'\r\nimport * as d3v4 from './d3v4adaptor'\r\nimport { Layout, EventType, Event } from './layout';\r\n\r\nexport interface D3v3Context { version:string };\r\n\r\nexport interface ID3StyleLayoutAdaptor {\r\n    trigger(e: Event): void;\r\n    kick(): void;\r\n    drag: () => any;\r\n\r\n    on(eventType: EventType | string, listener: () => void): ID3StyleLayoutAdaptor;\r\n}\r\n\r\n\r\n/**\r\n * provides an interface for use with d3:\r\n * Correct way to create way to construct the d3 cola object is to pass the d3 object into the adaptor function, like so:\r\n * \r\n *   `var d3cola = cola.d3adaptor(d3);`\r\n * \r\n * Internally, it will figure out if d3 is version 3 or 4 from the version tag and set up the right event forwarding. Defaults to version 3 if the d3 object is not passed.\r\n * - uses the d3 event system to dispatch layout events such as:\r\n *   o \"start\" (start layout process)\r\n *   o \"tick\" (after each layout iteration)\r\n *   o \"end\" (layout converged and complete).\r\n * - uses the d3 timer to queue layout iterations.\r\n * - sets up d3.behavior.drag to drag nodes\r\n *   o use `node.call(<the returned instance of Layout>.drag)` to make nodes draggable\r\n * returns an instance of the cola.Layout itself with which the user\r\n * can interact directly.\r\n */\r\nexport function d3adaptor(d3Context?: d3v4.D3Context | D3v3Context): Layout & ID3StyleLayoutAdaptor {\r\n    if (!d3Context || isD3V3(d3Context)) {\r\n        return new d3v3.D3StyleLayoutAdaptor();\r\n    }\r\n    return new d3v4.D3StyleLayoutAdaptor(d3Context);\r\n}\r\n\r\nfunction isD3V3(d3Context: d3v4.D3Context | D3v3Context): d3Context is D3v3Context {\r\n    const v3exp = /^3\\./;\r\n    return (<any>d3Context).version && (<any>d3Context).version.match(v3exp) !== null;\r\n}\r\n"],"names":[],"mappings":";;;;AAAA,IAAA,gCAAqC;AACrC,IAAA,gCAAqC;;AA+BrC,SAAgB,SAAS,CAAC,SAAwC;IAC9D,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,EAAE;QACjC,OAAO,IAAI,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC1C;IACD,OAAO,IAAI,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;AACpD,CAAC;AALD,QAAA,SAAA,GAAA,UAKC;AAED,SAAS,MAAM,CAAC,SAAuC;IACnD,IAAM,KAAK,GAAG,MAAM,CAAC;IACrB,OAAa,SAAU,CAAC,OAAO,IAAU,SAAU,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC;AACtF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3996, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4001, "column": 0}, "map": {"version":3,"file":"gridrouter.js","sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/node_modules/webcola/WebCola/src/gridrouter.ts"],"sourcesContent":["import {Point} from './geom'\r\nimport {Rectangle} from './rectangle'\r\nimport {Constraint, Solver, Variable} from './vpsc'\r\nimport {Calculator} from './shortestpaths'\r\n    export interface NodeAccessor<Node>{\r\n        getChildren(v:Node) : number[];\r\n        getBounds(v:Node) : Rectangle;\r\n    }\r\n    export class NodeWrapper {\r\n        leaf: boolean;\r\n        parent: NodeWrapper;\r\n        ports: Vert[];\r\n        constructor(public id: number, public rect: Rectangle, public children: number[]) {\r\n            this.leaf = typeof children === 'undefined' || children.length === 0;\r\n        }\r\n    }\r\n    export class Vert {\r\n        constructor(public id: number, public x:number, public y: number, public node: NodeWrapper = null, public line = null) {}\r\n    }\r\n\r\n    export class LongestCommonSubsequence<T> {\r\n        length: number;\r\n        si: number;\r\n        ti: number;\r\n        reversed: boolean;\r\n        constructor(public s: T[], public t: T[]) {\r\n            var mf = LongestCommonSubsequence.findMatch(s, t);\r\n            var tr = t.slice(0).reverse();\r\n            var mr = LongestCommonSubsequence.findMatch(s, tr);\r\n            if (mf.length >= mr.length) {\r\n                this.length = mf.length;\r\n                this.si = mf.si;\r\n                this.ti = mf.ti;\r\n                this.reversed = false;\r\n            } else {\r\n                this.length = mr.length;\r\n                this.si = mr.si;\r\n                this.ti = t.length - mr.ti - mr.length;\r\n                this.reversed = true;\r\n            }\r\n        }\r\n        private static findMatch<T>(s: T[], t: T[]) {\r\n            var m = s.length;\r\n            var n = t.length;\r\n            var match = { length: 0, si: -1, ti: -1 };\r\n            var l = new Array(m);\r\n            for (var i = 0; i < m; i++) {\r\n                l[i] = new Array(n);\r\n                for (var j = 0; j < n; j++)\r\n                    if (s[i] === t[j]) {\r\n                        var v = l[i][j] = (i === 0 || j === 0) ? 1 : l[i - 1][j - 1] + 1;\r\n                        if (v > match.length) {\r\n                            match.length = v;\r\n                            match.si = i - v + 1;\r\n                            match.ti = j - v + 1;\r\n                        };\r\n                    } else l[i][j] = 0;\r\n            }\r\n            return match;\r\n        }\r\n        getSequence(): T[]{\r\n            return this.length >= 0 ? this.s.slice(this.si, this.si + this.length) : [];\r\n        }\r\n    }\r\n    // a horizontal or vertical line of nodes\r\n    export interface GridLine {\r\n        nodes: NodeWrapper[];\r\n        pos: number;\r\n    }\r\n    export class GridRouter<Node> {\r\n        leaves: NodeWrapper[] = null;\r\n        groups: NodeWrapper[];\r\n        nodes: NodeWrapper[];\r\n        cols: GridLine[];\r\n        rows: GridLine[];\r\n        root;\r\n        verts: Vert[];\r\n        edges;\r\n        backToFront;\r\n        obstacles;\r\n        passableEdges;\r\n        private avg(a) { return a.reduce((x, y) => x + y) / a.length }\r\n\r\n        // in the given axis, find sets of leaves overlapping in that axis\r\n        // center of each GridLine is average of all nodes in column\r\n        private getGridLines(axis): GridLine[] {\r\n            var columns = [];\r\n            var ls = this.leaves.slice(0, this.leaves.length);\r\n            while (ls.length > 0) {\r\n                // find a column of all leaves overlapping in axis with the first leaf\r\n                let overlapping = ls.filter(v=> v.rect['overlap' + axis.toUpperCase()](ls[0].rect));\r\n                let col = {\r\n                    nodes: overlapping,\r\n                    pos: this.avg(overlapping.map(v=> v.rect['c' + axis]()))\r\n                };\r\n                columns.push(col);\r\n                col.nodes.forEach(v=> ls.splice(ls.indexOf(v), 1));\r\n            }\r\n            columns.sort((a, b) => a.pos - b.pos)\r\n            return columns;\r\n        }\r\n\r\n        // get the depth of the given node in the group hierarchy\r\n        private getDepth(v) {\r\n            var depth = 0;\r\n            while (v.parent !== this.root) {\r\n                depth++;\r\n                v = v.parent;\r\n            }\r\n            return depth;\r\n        }\r\n\r\n        // medial axes between node centres and also boundary lines for the grid\r\n        private midPoints(a) {\r\n            var gap = a[1] - a[0];\r\n            var mids = [a[0] - gap / 2];\r\n            for (var i = 1; i < a.length; i++) {\r\n                mids.push((a[i] + a[i - 1]) / 2);\r\n            }\r\n            mids.push(a[a.length - 1] + gap / 2);\r\n            return mids;\r\n        }\r\n\r\n        constructor(public originalnodes: Node[], accessor: NodeAccessor<Node>, public groupPadding: number = 12) {\r\n            this.nodes = originalnodes.map((v, i) => new NodeWrapper(i, accessor.getBounds(v), accessor.getChildren(v)));\r\n            this.leaves = this.nodes.filter(v=> v.leaf);\r\n            this.groups = this.nodes.filter(g=> !g.leaf);\r\n            this.cols = this.getGridLines('x');\r\n            this.rows = this.getGridLines('y');\r\n\r\n            // create parents for each node or group that is a member of another's children\r\n            this.groups.forEach(v=>\r\n                v.children.forEach(c=> this.nodes[<number>c].parent = v));\r\n\r\n            // root claims the remaining orphans\r\n            this.root = { children: [] };\r\n            this.nodes.forEach(v=> {\r\n                if (typeof v.parent === 'undefined') {\r\n                    v.parent = this.root;\r\n                    this.root.children.push(v.id);\r\n                }\r\n\r\n                // each node will have grid vertices associated with it,\r\n                // some inside the node and some on the boundary\r\n                // leaf nodes will have exactly one internal node at the center\r\n                // and four boundary nodes\r\n                // groups will have potentially many of each\r\n                v.ports = []\r\n            });\r\n\r\n            // nodes ordered by their position in the group hierarchy\r\n            this.backToFront = this.nodes.slice(0);\r\n            this.backToFront.sort((x, y) => this.getDepth(x) - this.getDepth(y));\r\n\r\n            // compute boundary rectangles for each group\r\n            // has to be done from front to back, i.e. inside groups to outside groups\r\n            // such that each can be made large enough to enclose its interior\r\n            var frontToBackGroups = this.backToFront.slice(0).reverse().filter(g=> !g.leaf);\r\n            frontToBackGroups.forEach(v=> {\r\n                var r = Rectangle.empty();\r\n                v.children.forEach(c=> r = r.union(this.nodes[c].rect));\r\n                v.rect = r.inflate(this.groupPadding);\r\n            });\r\n\r\n            var colMids = this.midPoints(this.cols.map(r=> r.pos));\r\n            var rowMids = this.midPoints(this.rows.map(r=> r.pos));\r\n\r\n            // setup extents of lines\r\n            var rowx = colMids[0], rowX = colMids[colMids.length - 1];\r\n            var coly = rowMids[0], colY = rowMids[rowMids.length - 1];\r\n\r\n            // horizontal lines\r\n            var hlines = this.rows.map(r=> <any>{ x1: rowx, x2: rowX, y1: r.pos, y2: r.pos })\r\n                .concat(rowMids.map(m=> <any>{ x1: rowx, x2: rowX, y1: m, y2: m }));\r\n\r\n            // vertical lines\r\n            var vlines = this.cols.map(c=> <any>{ x1: c.pos, x2: c.pos, y1: coly, y2: colY })\r\n                .concat(colMids.map(m=> <any>{ x1: m, x2: m, y1: coly, y2: colY }));\r\n\r\n            // the full set of lines\r\n            var lines = hlines.concat(vlines);\r\n\r\n            // we record the vertices associated with each line\r\n            lines.forEach(l=> l.verts = []);\r\n\r\n            // the routing graph\r\n            this.verts = [];\r\n            this.edges = [];\r\n\r\n            // create vertices at the crossings of horizontal and vertical grid-lines\r\n            hlines.forEach(h=>\r\n                vlines.forEach(v=> {\r\n                    var p = new Vert(this.verts.length, v.x1, h.y1);\r\n                    h.verts.push(p);\r\n                    v.verts.push(p);\r\n                    this.verts.push(p);\r\n\r\n                    // assign vertices to the nodes immediately under them\r\n                    var i = this.backToFront.length;\r\n                    while (i-- > 0) {\r\n                        var node = this.backToFront[i],\r\n                            r = node.rect;\r\n                        var dx = Math.abs(p.x - r.cx()),\r\n                            dy = Math.abs(p.y - r.cy());\r\n                        if (dx < r.width() / 2 && dy < r.height() / 2) {\r\n                            (<any>p).node = node;\r\n                            break;\r\n                        }\r\n                    }\r\n                })\r\n                );\r\n\r\n            lines.forEach((l, li) => {\r\n                // create vertices at the intersections of nodes and lines\r\n                this.nodes.forEach((v, i) => {\r\n                    v.rect.lineIntersections(l.x1, l.y1, l.x2, l.y2).forEach((intersect, j) => {\r\n                        //console.log(li+','+i+','+j+':'+intersect.x + ',' + intersect.y);\r\n                        var p = new Vert(this.verts.length, intersect.x, intersect.y, v, l);\r\n                        this.verts.push(p);\r\n                        l.verts.push(p);\r\n                        v.ports.push(p);\r\n                    });\r\n                });\r\n\r\n                // split lines into edges joining vertices\r\n                var isHoriz = Math.abs(l.y1 - l.y2) < 0.1;\r\n                var delta = (a, b) => isHoriz ? b.x - a.x : b.y - a.y;\r\n                l.verts.sort(delta);\r\n                for (var i = 1; i < l.verts.length; i++) {\r\n                    var u = l.verts[i - 1], v = l.verts[i];\r\n                    if (u.node && u.node === v.node && u.node.leaf) continue;\r\n                    this.edges.push({ source: u.id, target: v.id, length: Math.abs(delta(u, v)) });\r\n                }\r\n            });\r\n\r\n\r\n\r\n        }\r\n\r\n        // find path from v to root including both v and root\r\n        private findLineage(v) {\r\n            var lineage = [v];\r\n            do {\r\n                v = v.parent;\r\n                lineage.push(v);\r\n            } while (v !== this.root);\r\n            return lineage.reverse();\r\n        }\r\n\r\n        // find path connecting a and b through their lowest common ancestor\r\n        private findAncestorPathBetween(a, b) {\r\n            var aa = this.findLineage(a), ba = this.findLineage(b), i = 0;\r\n            while (aa[i] === ba[i]) i++;\r\n            // i-1 to include common ancestor only once (as first element)\r\n            return { commonAncestor: aa[i - 1], lineages: aa.slice(i).concat(ba.slice(i)) };\r\n        }\r\n\r\n        // when finding a path between two nodes a and b, siblings of a and b on the\r\n        // paths from a and b to their least common ancestor are obstacles\r\n        siblingObstacles(a, b) {\r\n            var path = this.findAncestorPathBetween(a, b);\r\n            var lineageLookup = {};\r\n            path.lineages.forEach(v=> lineageLookup[v.id] = {});\r\n            var obstacles = path.commonAncestor.children.filter(v=> !(v in lineageLookup));\r\n\r\n            path.lineages\r\n                .filter(v=> v.parent !== path.commonAncestor)\r\n                .forEach(v=> obstacles = obstacles.concat(v.parent.children.filter(c=> c !== v.id)));\r\n\r\n            return obstacles.map(v=> this.nodes[v]);\r\n        }\r\n\r\n        // for the given routes, extract all the segments orthogonal to the axis x\r\n        // and return all them grouped by x position\r\n        static getSegmentSets(routes, x, y) {\r\n            // vsegments is a list of vertical segments sorted by x position\r\n            var vsegments = [];\r\n            for (var ei = 0; ei < routes.length; ei++) {\r\n                var route = routes[ei];\r\n                for (var si = 0; si < route.length; si++) {\r\n                    var s = <any>route[si];\r\n                    s.edgeid = ei;\r\n                    s.i = si;\r\n                    var sdx = s[1][x] - s[0][x];\r\n                    if (Math.abs(sdx) < 0.1) {\r\n                        vsegments.push(s);\r\n                    }\r\n                }\r\n            }\r\n            vsegments.sort((a, b) => a[0][x] - b[0][x]);\r\n\r\n            // vsegmentsets is a set of sets of segments grouped by x position\r\n            var vsegmentsets = [];\r\n            var segmentset = null;\r\n            for (var i = 0; i < vsegments.length; i++) {\r\n                var s = vsegments[i];\r\n                if (!segmentset || Math.abs(s[0][x] - segmentset.pos) > 0.1) {\r\n                    segmentset = { pos: s[0][x], segments: [] };\r\n                    vsegmentsets.push(segmentset);\r\n                }\r\n                segmentset.segments.push(s);\r\n            }\r\n            return vsegmentsets;\r\n        }\r\n\r\n        // for all segments in this bundle create a vpsc problem such that\r\n        // each segment's x position is a variable and separation constraints\r\n        // are given by the partial order over the edges to which the segments belong\r\n        // for each pair s1,s2 of segments in the open set:\r\n        //   e1 = edge of s1, e2 = edge of s2\r\n        //   if leftOf(e1,e2) create constraint s1.x + gap <= s2.x\r\n        //   else if leftOf(e2,e1) create cons. s2.x + gap <= s1.x\r\n        static nudgeSegs(x: string, y: string, routes, segments, leftOf, gap: number) {\r\n            var n = segments.length;\r\n            if (n <= 1) return;\r\n            var vs = segments.map(s => new Variable(s[0][x]));\r\n            var cs = [];\r\n            for (var i = 0; i < n; i++) {\r\n                for (var j = 0; j < n; j++) {\r\n                    if (i === j) continue;\r\n                    var s1 = segments[i],\r\n                        s2 = segments[j],\r\n                        e1 = s1.edgeid,\r\n                        e2 = s2.edgeid,\r\n                        lind = -1,\r\n                        rind = -1;\r\n                    // in page coordinates (not cartesian) the notion of 'leftof' is flipped in the horizontal axis from the vertical axis\r\n                    // that is, when nudging vertical segments, if they increase in the y(conj) direction the segment belonging to the\r\n                    // 'left' edge actually needs to be nudged to the right\r\n                    // when nudging horizontal segments, if the segments increase in the x direction\r\n                    // then the 'left' segment needs to go higher, i.e. to have y pos less than that of the right\r\n                    if (x == 'x') {\r\n                        if (leftOf(e1, e2)) {\r\n                            //console.log('s1: ' + s1[0][x] + ',' + s1[0][y] + '-' + s1[1][x] + ',' + s1[1][y]);\r\n                            if (s1[0][y] < s1[1][y]) {\r\n                                lind = j, rind = i;\r\n                            } else {\r\n                                lind = i, rind = j;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (leftOf(e1, e2)) {\r\n                            if (s1[0][y] < s1[1][y]) {\r\n                                lind = i, rind = j;\r\n                            } else {\r\n                                lind = j, rind = i;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (lind >= 0) {\r\n                        //console.log(x+' constraint: ' + lind + '<' + rind);\r\n                        cs.push(new Constraint(vs[lind], vs[rind], gap));\r\n                    }\r\n                }\r\n            }\r\n            var solver = new Solver(vs, cs);\r\n            solver.solve();\r\n            vs.forEach((v, i) => {\r\n                var s = segments[i];\r\n                var pos = v.position();\r\n                s[0][x] = s[1][x] = pos;\r\n                var route = routes[s.edgeid];\r\n                if (s.i > 0) route[s.i - 1][1][x] = pos;\r\n                if (s.i < route.length - 1) route[s.i + 1][0][x] = pos;\r\n            });\r\n        }\r\n\r\n        static nudgeSegments(routes, x: string, y: string, leftOf: (e1: number, e2: number) => boolean, gap: number) {\r\n            var vsegmentsets = GridRouter.getSegmentSets(routes, x, y);\r\n            // scan the grouped (by x) segment sets to find co-linear bundles\r\n            for (var i = 0; i < vsegmentsets.length; i++) {\r\n                var ss = vsegmentsets[i];\r\n                var events = [];\r\n                for (var j = 0; j < ss.segments.length; j++) {\r\n                    var s = ss.segments[j];\r\n                    events.push({ type: 0, s: s, pos: Math.min(s[0][y], s[1][y]) });\r\n                    events.push({ type: 1, s: s, pos: Math.max(s[0][y], s[1][y]) });\r\n                }\r\n                events.sort((a, b) => a.pos - b.pos + a.type - b.type);\r\n                var open = [];\r\n                var openCount = 0;\r\n                events.forEach(e=> {\r\n                    if (e.type === 0) {\r\n                        open.push(e.s);\r\n                        openCount++;\r\n                    } else {\r\n                        openCount--;\r\n                    }\r\n                    if (openCount == 0) {\r\n                        GridRouter.nudgeSegs(x, y, routes, open, leftOf, gap);\r\n                        open = [];\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        // obtain routes for the specified edges, nicely nudged apart\r\n        // warning: edge paths may be reversed such that common paths are ordered consistently within bundles!\r\n        // @param edges list of edges\r\n        // @param nudgeGap how much to space parallel edge segements\r\n        // @param source function to retrieve the index of the source node for a given edge\r\n        // @param target function to retrieve the index of the target node for a given edge\r\n        // @returns an array giving, for each edge, an array of segments, each segment a pair of points in an array\r\n        routeEdges<Edge>(edges: Edge[], nudgeGap: number, source: (e: Edge) => number, target: (e: Edge) => number): Point[][][] {\r\n            var routePaths = edges.map(e=> this.route(source(e), target(e)));\r\n            var order = GridRouter.orderEdges(routePaths);\r\n            var routes = routePaths.map(function (e) { return GridRouter.makeSegments(e); });\r\n            GridRouter.nudgeSegments(routes, 'x', 'y', order, nudgeGap);\r\n            GridRouter.nudgeSegments(routes, 'y', 'x', order, nudgeGap);\r\n            GridRouter.unreverseEdges(routes, routePaths);\r\n            return routes;\r\n        }\r\n\r\n        // path may have been reversed by the subsequence processing in orderEdges\r\n        // so now we need to restore the original order\r\n        static unreverseEdges(routes, routePaths) {\r\n            routes.forEach((segments, i) => {\r\n                var path = routePaths[i];\r\n                if ((<any>path).reversed) {\r\n                    segments.reverse(); // reverse order of segments\r\n                    segments.forEach(function (segment) {\r\n                        segment.reverse();  // reverse each segment\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        static angleBetween2Lines(line1: Point[], line2: Point[]): number {\r\n            var angle1 = Math.atan2(line1[0].y - line1[1].y,\r\n                line1[0].x - line1[1].x);\r\n            var angle2 = Math.atan2(line2[0].y - line2[1].y,\r\n                line2[0].x - line2[1].x);\r\n            var diff = angle1 - angle2;\r\n            if (diff > Math.PI || diff < -Math.PI) {\r\n                diff = angle2 - angle1;\r\n            }\r\n            return diff;\r\n        }\r\n\r\n        // does the path a-b-c describe a left turn?\r\n        private static isLeft(a, b, c) {\r\n            return ((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)) <= 0;\r\n        }\r\n\r\n        // for the given list of ordered pairs, returns a function that (efficiently) looks-up a specific pair to\r\n        // see if it exists in the list\r\n        private static getOrder(pairs: { l: number; r: number }[]): (l: number, r: number) => boolean {\r\n            var outgoing = {};\r\n            for (var i = 0; i < pairs.length; i++) {\r\n                var p = pairs[i];\r\n                if (typeof outgoing[p.l] === 'undefined') outgoing[p.l] = {};\r\n                outgoing[p.l][p.r] = true;\r\n            }\r\n            return (l, r) => typeof outgoing[l] !== 'undefined' && outgoing[l][r];\r\n        }\r\n\r\n        // returns an ordering (a lookup function) that determines the correct order to nudge the\r\n        // edge paths apart to minimize crossings\r\n        static orderEdges(edges) {\r\n            var edgeOrder = [];\r\n            for (var i = 0; i < edges.length - 1; i++) {\r\n                for (var j = i + 1; j < edges.length; j++) {\r\n                    var e = edges[i],\r\n                        f = edges[j],\r\n                        lcs = new LongestCommonSubsequence(e, f);\r\n                    var u, vi, vj;\r\n                    if (lcs.length === 0)\r\n                        continue; // no common subpath\r\n                    if (lcs.reversed) {\r\n                        // if we found a common subpath but one of the edges runs the wrong way,\r\n                        // then reverse f.\r\n                        f.reverse();\r\n                        f.reversed = true;\r\n                        lcs = new LongestCommonSubsequence(e, f);\r\n                    }\r\n                    if ((lcs.si <= 0 || lcs.ti <= 0) &&\r\n                        (lcs.si + lcs.length >= e.length || lcs.ti + lcs.length >= f.length)) {\r\n                        // the paths do not diverge, so make an arbitrary ordering decision\r\n                        edgeOrder.push({ l: i, r: j });\r\n                        continue;\r\n                    }\r\n                    if (lcs.si + lcs.length >= e.length || lcs.ti + lcs.length >= f.length) {\r\n                        // if the common subsequence of the\r\n                        // two edges being considered goes all the way to the\r\n                        // end of one (or both) of the lines then we have to\r\n                        // base our ordering decision on the other end of the\r\n                        // common subsequence\r\n                        u = e[lcs.si + 1];\r\n                        vj = e[lcs.si - 1];\r\n                        vi = f[lcs.ti - 1];\r\n                    } else {\r\n                        u = e[lcs.si + lcs.length - 2];\r\n                        vi = e[lcs.si + lcs.length];\r\n                        vj = f[lcs.ti + lcs.length];\r\n                    }\r\n                    if (GridRouter.isLeft(u, vi, vj)) {\r\n                        edgeOrder.push({ l: j, r: i });\r\n                    } else {\r\n                        edgeOrder.push({ l: i, r: j });\r\n                    }\r\n                }\r\n            }\r\n            //edgeOrder.forEach(function (e) { console.log('l:' + e.l + ',r:' + e.r) });\r\n            return GridRouter.getOrder(edgeOrder);\r\n        }\r\n\r\n        // for an orthogonal path described by a sequence of points, create a list of segments\r\n        // if consecutive segments would make a straight line they are merged into a single segment\r\n        // segments are over cloned points, not the original vertices\r\n        static makeSegments(path: Point[]): Point[][] {\r\n            function copyPoint(p: Point) {\r\n                return <Point>{ x: p.x, y: p.y };\r\n            }\r\n            var isStraight = (a, b, c) => Math.abs((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)) < 0.001;\r\n            var segments = [];\r\n            var a = copyPoint(path[0]);\r\n            for (var i = 1; i < path.length; i++) {\r\n                var b = copyPoint(path[i]), c = i < path.length - 1 ? path[i + 1] : null;\r\n                if (!c || !isStraight(a, b, c)) {\r\n                    segments.push([a, b]);\r\n                    a = b;\r\n                }\r\n            }\r\n            return segments;\r\n        }\r\n\r\n        // find a route between node s and node t\r\n        // returns an array of indices to verts\r\n        route(s: number, t: number): Point[] {\r\n            var source = this.nodes[<number>s], target = this.nodes[<number>t];\r\n            this.obstacles = this.siblingObstacles(source, target);\r\n\r\n            var obstacleLookup = {};\r\n            this.obstacles.forEach(o => obstacleLookup[o.id] = o);\r\n            this.passableEdges = this.edges.filter(e=> {\r\n                var u = this.verts[e.source],\r\n                    v = this.verts[e.target];\r\n                return !(u.node && u.node.id in obstacleLookup\r\n                    || v.node && v.node.id in obstacleLookup);\r\n            });\r\n\r\n            // add dummy segments linking ports inside source and target\r\n            for (var i = 1; i < source.ports.length; i++) {\r\n                var u = source.ports[0].id;\r\n                var v = source.ports[i].id;\r\n                this.passableEdges.push({\r\n                    source: u,\r\n                    target: v,\r\n                    length: 0\r\n                });\r\n            }\r\n            for (var i = 1; i < target.ports.length; i++) {\r\n                var u = target.ports[0].id;\r\n                var v = target.ports[i].id;\r\n                this.passableEdges.push({\r\n                    source: u,\r\n                    target: v,\r\n                    length: 0\r\n                });\r\n            }\r\n\r\n            var getSource = e=> e.source,\r\n                getTarget = e=> e.target,\r\n                getLength = e=> e.length;\r\n\r\n            var shortestPathCalculator = new Calculator(this.verts.length, this.passableEdges, getSource, getTarget, getLength);\r\n            var bendPenalty = (u, v, w) => {\r\n                var a = this.verts[u], b = this.verts[v], c = this.verts[w];\r\n                var dx = Math.abs(c.x - a.x), dy = Math.abs(c.y - a.y);\r\n                // don't count bends from internal node edges\r\n                if (a.node === source && a.node === b.node || b.node === target && b.node === c.node)\r\n                    return 0;\r\n                return dx > 1 && dy > 1 ? 1000 : 0;\r\n            };\r\n\r\n            // get shortest path\r\n            var shortestPath = shortestPathCalculator.PathFromNodeToNodeWithPrevCost(\r\n                source.ports[0].id, target.ports[0].id,\r\n                bendPenalty);\r\n\r\n            // shortest path is reversed and does not include the target port\r\n            var pathPoints = shortestPath.reverse().map(vi => this.verts[vi]);\r\n            pathPoints.push(this.nodes[target.id].ports[0]);\r\n\r\n            // filter out any extra end points that are inside the source or target (i.e. the dummy segments above)\r\n            return pathPoints.filter((v, i) =>\r\n                !(i < pathPoints.length - 1 && pathPoints[i + 1].node === source && v.node === source\r\n                    || i > 0 && v.node === target && pathPoints[i - 1].node === target));\r\n        }\r\n\r\n        static getRoutePath(route: Point[][], cornerradius: number, arrowwidth: number, arrowheight: number): { routepath: string; arrowpath: string } {\r\n            var result = {\r\n                routepath: 'M ' + route[0][0].x + ' ' + route[0][0].y + ' ',\r\n                arrowpath: ''\r\n            };\r\n            if (route.length > 1) {\r\n                for (var i = 0; i < route.length; i++) {\r\n                    var li = route[i];\r\n                    var x = li[1].x, y = li[1].y;\r\n                    var dx = x - li[0].x;\r\n                    var dy = y - li[0].y;\r\n                    if (i < route.length - 1) {\r\n                        if (Math.abs(dx) > 0) {\r\n                            x -= dx / Math.abs(dx) * cornerradius;\r\n                        } else {\r\n                            y -= dy / Math.abs(dy) * cornerradius;\r\n                        }\r\n                        result.routepath += 'L ' + x + ' ' + y + ' ';\r\n                        var l = route[i + 1];\r\n                        var x0 = l[0].x, y0 = l[0].y;\r\n                        var x1 = l[1].x;\r\n                        var y1 = l[1].y;\r\n                        dx = x1 - x0;\r\n                        dy = y1 - y0;\r\n                        var angle = GridRouter.angleBetween2Lines(li, l) < 0 ? 1 : 0;\r\n                        //console.log(cola.GridRouter.angleBetween2Lines(li, l))\r\n                        var x2, y2;\r\n                        if (Math.abs(dx) > 0) {\r\n                            x2 = x0 + dx / Math.abs(dx) * cornerradius;\r\n                            y2 = y0;\r\n                        } else {\r\n                            x2 = x0;\r\n                            y2 = y0 + dy / Math.abs(dy) * cornerradius;\r\n                        }\r\n                        var cx = Math.abs(x2 - x);\r\n                        var cy = Math.abs(y2 - y);\r\n                        result.routepath += 'A ' + cx + ' ' + cy + ' 0 0 ' + angle + ' ' + x2 + ' ' + y2 + ' ';\r\n                    } else {\r\n                        var arrowtip = [x, y];\r\n                        var arrowcorner1, arrowcorner2;\r\n                        if (Math.abs(dx) > 0) {\r\n                            x -= dx / Math.abs(dx) * arrowheight;\r\n                            arrowcorner1 = [x, y + arrowwidth];\r\n                            arrowcorner2 = [x, y - arrowwidth];\r\n                        } else {\r\n                            y -= dy / Math.abs(dy) * arrowheight;\r\n                            arrowcorner1 = [x + arrowwidth, y];\r\n                            arrowcorner2 = [x - arrowwidth, y];\r\n                        }\r\n                        result.routepath += 'L ' + x + ' ' + y + ' ';\r\n                        if (arrowheight > 0) {\r\n                            result.arrowpath = 'M ' + arrowtip[0] + ' ' + arrowtip[1] + ' L ' + arrowcorner1[0] + ' ' + arrowcorner1[1]\r\n                            + ' L ' + arrowcorner2[0] + ' ' + arrowcorner2[1];\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                var li = route[0];\r\n                var x = li[1].x, y = li[1].y;\r\n                var dx = x - li[0].x;\r\n                var dy = y - li[0].y;\r\n                var arrowtip = [x, y];\r\n                var arrowcorner1, arrowcorner2;\r\n                if (Math.abs(dx) > 0) {\r\n                    x -= dx / Math.abs(dx) * arrowheight;\r\n                    arrowcorner1 = [x, y + arrowwidth];\r\n                    arrowcorner2 = [x, y - arrowwidth];\r\n                } else {\r\n                    y -= dy / Math.abs(dy) * arrowheight;\r\n                    arrowcorner1 = [x + arrowwidth, y];\r\n                    arrowcorner2 = [x - arrowwidth, y];\r\n                }\r\n                result.routepath += 'L ' + x + ' ' + y + ' ';\r\n                if (arrowheight > 0) {\r\n                    result.arrowpath = 'M ' + arrowtip[0] + ' ' + arrowtip[1] + ' L ' + arrowcorner1[0] + ' ' + arrowcorner1[1]\r\n                    + ' L ' + arrowcorner2[0] + ' ' + arrowcorner2[1];\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n"],"names":[],"mappings":";;;;AACA,IAAA,qCAAqC;AACrC,IAAA,2BAAmD;AACnD,IAAA,6CAA0C;AAKtC,IAAA,cAAA;IAII,SAAA,YAAmB,EAAU,EAAS,IAAe,EAAS,QAAkB;QAA7D,IAAA,CAAA,EAAE,GAAF,EAAE,CAAQ;QAAS,IAAA,CAAA,IAAI,GAAJ,IAAI,CAAW;QAAS,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAAU;QAC5E,IAAI,CAAC,IAAI,GAAG,OAAO,QAAQ,KAAK,WAAW,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC;IACzE,CAAC;IACL,OAAA,WAAC;AAAD,CAAC,AAPD,IAOC;AAPY,QAAA,WAAA,GAAA,YAAW;AAQxB,IAAA,OAAA;IACI,SAAA,KAAmB,EAAU,EAAS,CAAQ,EAAS,CAAS,EAAS,IAAwB,EAAS,IAAW;QAA5C,IAAA,SAAA,KAAA,GAAA;YAAA,OAAA,IAAwB;QAAA;QAAS,IAAA,SAAA,KAAA,GAAA;YAAA,OAAA,IAAW;QAAA;QAAlG,IAAA,CAAA,EAAE,GAAF,EAAE,CAAQ;QAAS,IAAA,CAAA,CAAC,GAAD,CAAC,CAAO;QAAS,IAAA,CAAA,CAAC,GAAD,CAAC,CAAQ;QAAS,IAAA,CAAA,IAAI,GAAJ,IAAI,CAAoB;QAAS,IAAA,CAAA,IAAI,GAAJ,IAAI,CAAO;IAAG,CAAC;IAC7H,OAAA,IAAC;AAAD,CAAC,AAFD,IAEC;AAFY,QAAA,IAAA,GAAA,KAAI;AAIjB,IAAA,2BAAA;IAKI,SAAA,yBAAmB,CAAM,EAAS,CAAM;QAArB,IAAA,CAAA,CAAC,GAAD,CAAC,CAAK;QAAS,IAAA,CAAA,CAAC,GAAD,CAAC,CAAK;QACpC,IAAI,EAAE,GAAG,wBAAwB,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAClD,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QAC9B,IAAI,EAAE,GAAG,wBAAwB,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACnD,IAAI,EAAE,CAAC,MAAM,IAAI,EAAE,CAAC,MAAM,EAAE;YACxB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;YACxB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;YAChB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;YAChB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACzB,MAAM;YACH,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;YACxB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;YAChB,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC;YACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACxB;IACL,CAAC;IACc,yBAAA,SAAS,GAAxB,SAA4B,CAAM,EAAE,CAAM;QACtC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QACjB,IAAI,KAAK,GAAG;YAAE,MAAM,EAAE,CAAC;YAAE,EAAE,EAAE,CAAC,CAAC;YAAE,EAAE,EAAE,CAAC,CAAC;QAAA,CAAE,CAAC;QAC1C,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACrB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;YACxB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CACtB,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;gBACf,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,AAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,AAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;gBACjE,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE;oBAClB,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;oBACjB,KAAK,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACrB,KAAK,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBACxB;;aACJ,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAC1B;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IACD,yBAAA,SAAA,CAAA,WAAW,GAAX;QACI,OAAO,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAChF,CAAC;IACL,OAAA,wBAAC;AAAD,CAAC,AA3CD,IA2CC;AA3CY,QAAA,wBAAA,GAAA,yBAAwB;AAiDrC,IAAA,aAAA;IAsDI,SAAA,WAAmB,aAAqB,EAAE,QAA4B,EAAS,YAAyB;QAAxG,IAAA,QAAA,IAAA,CAkHC;QAlH8E,IAAA,iBAAA,KAAA,GAAA;YAAA,eAAA,EAAyB;QAAA;QAArF,IAAA,CAAA,aAAa,GAAb,aAAa,CAAQ;QAAuC,IAAA,CAAA,YAAY,GAAZ,YAAY,CAAa;QArDxG,IAAA,CAAA,MAAM,GAAkB,IAAI,CAAC;QAsDzB,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC,GAAG,CAAC,SAAC,CAAC,EAAE,CAAC;YAAK,OAAA,IAAI,WAAW,CAAC,CAAC,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAAlE,CAAkE,CAAC,CAAC;QAC7G,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAA,CAAC;YAAG,OAAA,CAAC,CAAC,IAAI;QAAN,CAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAA,CAAC;YAAG,OAAA,CAAC,CAAC,CAAC,IAAI;QAAP,CAAO,CAAC,CAAC;QAC7C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAGnC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAA,CAAC;YACjB,OAAA,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAA,CAAC;gBAAG,OAAA,KAAI,CAAC,KAAK,CAAS,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC;YAAhC,CAAgC,CAAC;QAAxD,CAAwD,CAAC,CAAC;QAG9D,IAAI,CAAC,IAAI,GAAG;YAAE,QAAQ,EAAE,EAAE;QAAA,CAAE,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAA,CAAC;YAChB,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,WAAW,EAAE;gBACjC,CAAC,CAAC,MAAM,GAAG,KAAI,CAAC,IAAI,CAAC;gBACrB,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aACjC;YAOD,CAAC,CAAC,KAAK,GAAG,EAAE,CAAA;QAChB,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAC,CAAC,EAAE,CAAC;YAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QAAnC,CAAmC,CAAC,CAAC;QAKrE,IAAI,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,SAAA,CAAC;YAAG,OAAA,CAAC,CAAC,CAAC,IAAI;QAAP,CAAO,CAAC,CAAC;QAChF,iBAAiB,CAAC,OAAO,CAAC,SAAA,CAAC;YACvB,IAAI,CAAC,GAAG,YAAA,SAAS,CAAC,KAAK,EAAE,CAAC;YAC1B,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAA,CAAC;gBAAG,OAAA,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAA/B,CAA+B,CAAC,CAAC;YACxD,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAA,CAAC;YAAG,OAAA,CAAC,CAAC,GAAG;QAAL,CAAK,CAAC,CAAC,CAAC;QACvD,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAA,CAAC;YAAG,OAAA,CAAC,CAAC,GAAG;QAAL,CAAK,CAAC,CAAC,CAAC;QAGvD,IAAI,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC1D,IAAI,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAG1D,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAA,CAAC;YAAG,OAAA,AAAK;gBAAE,EAAE,EAAE,IAAI;gBAAE,EAAE,EAAE,IAAI;gBAAE,EAAE,EAAE,CAAC,CAAC,GAAG;gBAAE,EAAE,EAAE,CAAC,CAAC,GAAG;YAAA,CAAE,CAAA;QAAjD,CAAiD,CAAC,CAC5E,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,SAAA,CAAC;YAAG,OAAA,AAAK;gBAAE,EAAE,EAAE,IAAI;gBAAE,EAAE,EAAE,IAAI;gBAAE,EAAE,EAAE,CAAC;gBAAE,EAAE,EAAE,CAAC;YAAA,CAAE,CAAA;QAAzC,CAAyC,CAAC,CAAC,CAAC;QAGxE,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAA,CAAC;YAAG,OAAA,AAAK;gBAAE,EAAE,EAAE,CAAC,CAAC,GAAG;gBAAE,EAAE,EAAE,CAAC,CAAC,GAAG;gBAAE,EAAE,EAAE,IAAI;gBAAE,EAAE,EAAE,IAAI;YAAA,CAAE,CAAA;QAAjD,CAAiD,CAAC,CAC5E,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,SAAA,CAAC;YAAG,OAAA,AAAK;gBAAE,EAAE,EAAE,CAAC;gBAAE,EAAE,EAAE,CAAC;gBAAE,EAAE,EAAE,IAAI;gBAAE,EAAE,EAAE,IAAI;YAAA,CAAE,CAAA;QAAzC,CAAyC,CAAC,CAAC,CAAC;QAGxE,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAGlC,KAAK,CAAC,OAAO,CAAC,SAAA,CAAC;YAAG,OAAA,CAAC,CAAC,KAAK,GAAG,EAAE;QAAZ,CAAY,CAAC,CAAC;QAGhC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAGhB,MAAM,CAAC,OAAO,CAAC,SAAA,CAAC;YACZ,OAAA,MAAM,CAAC,OAAO,CAAC,SAAA,CAAC;gBACZ,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;gBAChD,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChB,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAGnB,IAAI,CAAC,GAAG,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBAChC,MAAO,CAAC,EAAE,GAAG,CAAC,CAAE;oBACZ,IAAI,IAAI,GAAG,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAC1B,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;oBAClB,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,EAC3B,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;oBAChC,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;wBACrC,CAAE,CAAC,IAAI,GAAG,IAAI,CAAC;wBACrB,MAAM;qBACT;iBACJ;YACL,CAAC,CAAC;QAlBF,CAkBE,CACD,CAAC;QAEN,KAAK,CAAC,OAAO,CAAC,SAAC,CAAC,EAAE,EAAE;YAEhB,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAC,CAAC,EAAE,CAAC;gBACpB,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,SAAC,SAAS,EAAE,CAAC;oBAElE,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACpE,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACnB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAChB,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YAGH,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;YAC1C,IAAI,KAAK,GAAG,SAAC,CAAC,EAAE,CAAC;gBAAK,OAAA,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAA/B,CAA+B,CAAC;YACtD,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;gBACrC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS;gBACzD,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC;oBAAE,MAAM,EAAE,CAAC,CAAC,EAAE;oBAAE,MAAM,EAAE,CAAC,CAAC,EAAE;oBAAE,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAAA,CAAE,CAAC,CAAC;aAClF;QACL,CAAC,CAAC,CAAC;IAIP,CAAC;IA5JO,WAAA,SAAA,CAAA,GAAG,GAAX,SAAY,CAAC;QAAI,OAAO,CAAC,CAAC,MAAM,CAAC,SAAC,CAAC,EAAE,CAAC;YAAK,OAAA,CAAC,GAAG,CAAC;QAAL,CAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAA;IAAC,CAAC;IAItD,WAAA,SAAA,CAAA,YAAY,GAApB,SAAqB,IAAI;QACrB,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAClD,MAAO,EAAE,CAAC,MAAM,GAAG,CAAC,CAAE;YAElB,IAAI,WAAW,GAAG,EAAE,CAAC,MAAM,CAAC,SAAA,CAAC;gBAAG,OAAA,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAAlD,CAAkD,CAAC,CAAC;YACpF,IAAI,GAAG,GAAG;gBACN,KAAK,EAAE,WAAW;gBAClB,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,SAAA,CAAC;oBAAG,OAAA,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE;gBAApB,CAAoB,CAAC,CAAC;aAC3D,CAAC;YACF,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClB,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,SAAA,CAAC;gBAAG,OAAA,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAA3B,CAA2B,CAAC,CAAC;SACtD;QACD,OAAO,CAAC,IAAI,CAAC,SAAC,CAAC,EAAE,CAAC;YAAK,OAAA,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG;QAAb,CAAa,CAAC,CAAA;QACrC,OAAO,OAAO,CAAC;IACnB,CAAC;IAGO,WAAA,SAAA,CAAA,QAAQ,GAAhB,SAAiB,CAAC;QACd,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,MAAO,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,CAAE;YAC3B,KAAK,EAAE,CAAC;YACR,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;SAChB;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAGO,WAAA,SAAA,CAAA,SAAS,GAAjB,SAAkB,CAAC;QACf,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACtB,IAAI,IAAI,GAAG;YAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC;SAAC,CAAC;QAC5B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;YAC/B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SACpC;QACD,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC;IAChB,CAAC;IAuHO,WAAA,SAAA,CAAA,WAAW,GAAnB,SAAoB,CAAC;QACjB,IAAI,OAAO,GAAG;YAAC,CAAC;SAAC,CAAC;QAClB,GAAG;YACC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;YACb,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACnB,OAAQ,CAAC,KAAK,IAAI,CAAC,IAAI,CAAE;QAC1B,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAGO,WAAA,SAAA,CAAA,uBAAuB,GAA/B,SAAgC,CAAC,EAAE,CAAC;QAChC,IAAI,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAC9D,MAAO,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC,EAAE,CAAC;QAE5B,OAAO;YAAE,cAAc,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;YAAE,QAAQ,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAAA,CAAE,CAAC;IACpF,CAAC;IAID,WAAA,SAAA,CAAA,gBAAgB,GAAhB,SAAiB,CAAC,EAAE,CAAC;QAArB,IAAA,QAAA,IAAA,CAWC;QAVG,IAAI,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9C,IAAI,aAAa,GAAG,CAAA,CAAE,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAA,CAAC;YAAG,OAAA,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAA,CAAE;QAAxB,CAAwB,CAAC,CAAC;QACpD,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAA,CAAC;YAAG,OAAA,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC;QAArB,CAAqB,CAAC,CAAC;QAE/E,IAAI,CAAC,QAAQ,CACR,MAAM,CAAC,SAAA,CAAC;YAAG,OAAA,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,cAAc;QAAhC,CAAgC,CAAC,CAC5C,OAAO,CAAC,SAAA,CAAC;YAAG,OAAA,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAA,CAAC;gBAAG,OAAA,CAAC,KAAK,CAAC,CAAC,EAAE;YAAV,CAAU,CAAC,CAAC;QAAtE,CAAsE,CAAC,CAAC;QAEzF,OAAO,SAAS,CAAC,GAAG,CAAC,SAAA,CAAC;YAAG,OAAA,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAAb,CAAa,CAAC,CAAC;IAC5C,CAAC;IAIM,WAAA,cAAc,GAArB,SAAsB,MAAM,EAAE,CAAC,EAAE,CAAC;QAE9B,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,IAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,CAAE;YACvC,IAAI,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;YACvB,IAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,CAAE;gBACtC,IAAI,CAAC,GAAQ,KAAK,CAAC,EAAE,CAAC,CAAC;gBACvB,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC;gBACd,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBACT,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5B,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE;oBACrB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACrB;aACJ;SACJ;QACD,SAAS,CAAC,IAAI,CAAC,SAAC,CAAC,EAAE,CAAC;YAAK,OAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAAjB,CAAiB,CAAC,CAAC;QAG5C,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;YACvC,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE;gBACzD,UAAU,GAAG;oBAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAAE,QAAQ,EAAE,EAAE;gBAAA,CAAE,CAAC;gBAC5C,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACjC;YACD,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC/B;QACD,OAAO,YAAY,CAAC;IACxB,CAAC;IASM,WAAA,SAAS,GAAhB,SAAiB,CAAS,EAAE,CAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAW;QACxE,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO;QACnB,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,SAAA,CAAC;YAAI,OAAA,IAAI,OAAA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAArB,CAAqB,CAAC,CAAC;QAClD,IAAI,EAAE,GAAG,EAAE,CAAC;QACZ,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;YACxB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;gBACxB,IAAI,CAAC,KAAK,CAAC,EAAE,SAAS;gBACtB,IAAI,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,EAChB,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,EAChB,EAAE,GAAG,EAAE,CAAC,MAAM,EACd,EAAE,GAAG,EAAE,CAAC,MAAM,EACd,IAAI,GAAG,CAAC,CAAC,EACT,IAAI,GAAG,CAAC,CAAC,CAAC;gBAMd,IAAI,CAAC,IAAI,GAAG,EAAE;oBACV,IAAI,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;wBAEhB,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;4BACrB,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC;yBACtB,MAAM;4BACH,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC;yBACtB;qBACJ;iBACJ,MAAM;oBACH,IAAI,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;wBAChB,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;4BACrB,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC;yBACtB,MAAM;4BACH,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC;yBACtB;qBACJ;iBACJ;gBACD,IAAI,IAAI,IAAI,CAAC,EAAE;oBAEX,EAAE,CAAC,IAAI,CAAC,IAAI,OAAA,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;iBACpD;aACJ;SACJ;QACD,IAAI,MAAM,GAAG,IAAI,OAAA,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,EAAE,CAAC,OAAO,CAAC,SAAC,CAAC,EAAE,CAAC;YACZ,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;YACxB,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAC7B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;YACxC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QAC3D,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,WAAA,aAAa,GAApB,SAAqB,MAAM,EAAE,CAAS,EAAE,CAAS,EAAE,MAA2C,EAAE,GAAW;QACvG,IAAI,YAAY,GAAG,UAAU,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE3D,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;YAC1C,IAAI,EAAE,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;gBACzC,IAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACvB,MAAM,CAAC,IAAI,CAAC;oBAAE,IAAI,EAAE,CAAC;oBAAE,CAAC,EAAE,CAAC;oBAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAAA,CAAE,CAAC,CAAC;gBAChE,MAAM,CAAC,IAAI,CAAC;oBAAE,IAAI,EAAE,CAAC;oBAAE,CAAC,EAAE,CAAC;oBAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAAA,CAAE,CAAC,CAAC;aACnE;YACD,MAAM,CAAC,IAAI,CAAC,SAAC,CAAC,EAAE,CAAC;gBAAK,OAAA,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI;YAA/B,CAA+B,CAAC,CAAC;YACvD,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,IAAI,SAAS,GAAG,CAAC,CAAC;YAClB,MAAM,CAAC,OAAO,CAAC,SAAA,CAAC;gBACZ,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,EAAE;oBACd,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACf,SAAS,EAAE,CAAC;iBACf,MAAM;oBACH,SAAS,EAAE,CAAC;iBACf;gBACD,IAAI,SAAS,IAAI,CAAC,EAAE;oBAChB,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;oBACtD,IAAI,GAAG,EAAE,CAAC;iBACb;YACL,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IASD,WAAA,SAAA,CAAA,UAAU,GAAV,SAAiB,KAAa,EAAE,QAAgB,EAAE,MAA2B,EAAE,MAA2B;QAA1G,IAAA,QAAA,IAAA,CAQC;QAPG,IAAI,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,SAAA,CAAC;YAAG,OAAA,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;QAAhC,CAAgC,CAAC,CAAC;QACjE,IAAI,KAAK,GAAG,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC,SAAU,CAAC;YAAI,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAAC,CAAC,CAAC,CAAC;QACjF,UAAU,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC5D,UAAU,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC5D,UAAU,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QAC9C,OAAO,MAAM,CAAC;IAClB,CAAC;IAIM,WAAA,cAAc,GAArB,SAAsB,MAAM,EAAE,UAAU;QACpC,MAAM,CAAC,OAAO,CAAC,SAAC,QAAQ,EAAE,CAAC;YACvB,IAAI,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YACzB,IAAU,IAAK,CAAC,QAAQ,EAAE;gBACtB,QAAQ,CAAC,OAAO,EAAE,CAAC;gBACnB,QAAQ,CAAC,OAAO,CAAC,SAAU,OAAO;oBAC9B,OAAO,CAAC,OAAO,EAAE,CAAC;gBACtB,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,WAAA,kBAAkB,GAAzB,SAA0B,KAAc,EAAE,KAAc;QACpD,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAC3C,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAC3C,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAI,IAAI,GAAG,MAAM,GAAG,MAAM,CAAC;QAC3B,IAAI,IAAI,GAAG,IAAI,CAAC,EAAE,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE;YACnC,IAAI,GAAG,MAAM,GAAG,MAAM,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAGc,WAAA,MAAM,GAArB,SAAsB,CAAC,EAAE,CAAC,EAAE,CAAC;QACzB,OAAO,AAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAI,CAAC,CAAC;IACxE,CAAC;IAIc,WAAA,QAAQ,GAAvB,SAAwB,KAAiC;QACrD,IAAI,QAAQ,GAAG,CAAA,CAAE,CAAC;QAClB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;YACnC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAA,CAAE,CAAC;YAC7D,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SAC7B;QACD,OAAO,SAAC,CAAC,EAAE,CAAC;YAAK,OAAA,OAAO,QAAQ,CAAC,CAAC,CAAC,KAAK,WAAW,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAApD,CAAoD,CAAC;IAC1E,CAAC;IAIM,WAAA,UAAU,GAAjB,SAAkB,KAAK;QACnB,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;YACvC,IAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;gBACvC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EACZ,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EACZ,GAAG,GAAG,IAAI,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC7C,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;gBACd,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAChB,SAAS;gBACb,IAAI,GAAG,CAAC,QAAQ,EAAE;oBAGd,CAAC,CAAC,OAAO,EAAE,CAAC;oBACZ,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;oBAClB,GAAG,GAAG,IAAI,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC5C;gBACD,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,IAC5B,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,IAAI,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE;oBAEtE,SAAS,CAAC,IAAI,CAAC;wBAAE,CAAC,EAAE,CAAC;wBAAE,CAAC,EAAE,CAAC;oBAAA,CAAE,CAAC,CAAC;oBAC/B,SAAS;iBACZ;gBACD,IAAI,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,IAAI,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,EAAE;oBAMpE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;oBAClB,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;oBACnB,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;iBACtB,MAAM;oBACH,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBAC/B,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;oBAC5B,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;iBAC/B;gBACD,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;oBAC9B,SAAS,CAAC,IAAI,CAAC;wBAAE,CAAC,EAAE,CAAC;wBAAE,CAAC,EAAE,CAAC;oBAAA,CAAE,CAAC,CAAC;iBAClC,MAAM;oBACH,SAAS,CAAC,IAAI,CAAC;wBAAE,CAAC,EAAE,CAAC;wBAAE,CAAC,EAAE,CAAC;oBAAA,CAAE,CAAC,CAAC;iBAClC;aACJ;SACJ;QAED,OAAO,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IAC1C,CAAC;IAKM,WAAA,YAAY,GAAnB,SAAoB,IAAa;QAC7B,SAAS,SAAS,CAAC,CAAQ;YACvB,OAAc;gBAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAAA,CAAE,CAAC;QACrC,CAAC;QACD,IAAI,UAAU,GAAG,SAAC,CAAC,EAAE,CAAC,EAAE,CAAC;YAAK,OAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK;QAAvE,CAAuE,CAAC;QACtG,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;YAClC,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACzE,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;gBAC5B,QAAQ,CAAC,IAAI,CAAC;oBAAC,CAAC;oBAAE,CAAC;iBAAC,CAAC,CAAC;gBACtB,CAAC,GAAG,CAAC,CAAC;aACT;SACJ;QACD,OAAO,QAAQ,CAAC;IACpB,CAAC;IAID,WAAA,SAAA,CAAA,KAAK,GAAL,SAAM,CAAS,EAAE,CAAS;QAA1B,IAAA,QAAA,IAAA,CA4DC;QA3DG,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAS,CAAC,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,KAAK,CAAS,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAEvD,IAAI,cAAc,GAAG,CAAA,CAAE,CAAC;QACxB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAA,CAAC;YAAI,OAAA,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;QAAxB,CAAwB,CAAC,CAAC;QACtD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAA,CAAC;YACpC,IAAI,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,EACxB,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAC7B,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,cAAc,IACvC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,cAAc,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAGH,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;YAC1C,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC3B,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;gBACpB,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,CAAC;aACZ,CAAC,CAAC;SACN;QACD,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;YAC1C,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC3B,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;gBACpB,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,CAAC;aACZ,CAAC,CAAC;SACN;QAED,IAAI,SAAS,GAAG,SAAA,CAAC;YAAG,OAAA,CAAC,CAAC,MAAM;QAAR,CAAQ,EACxB,SAAS,GAAG,SAAA,CAAC;YAAG,OAAA,CAAC,CAAC,MAAM;QAAR,CAAQ,EACxB,SAAS,GAAG,SAAA,CAAC;YAAG,OAAA,CAAC,CAAC,MAAM;QAAR,CAAQ,CAAC;QAE7B,IAAI,sBAAsB,GAAG,IAAI,gBAAA,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QACpH,IAAI,WAAW,GAAG,SAAC,CAAC,EAAE,CAAC,EAAE,CAAC;YACtB,IAAI,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5D,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAEvD,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,EAChF,OAAO,CAAC,CAAC;YACb,OAAO,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC;QAGF,IAAI,YAAY,GAAG,sBAAsB,CAAC,8BAA8B,CACpE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,EACtC,WAAW,CAAC,CAAC;QAGjB,IAAI,UAAU,GAAG,YAAY,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,SAAA,EAAE;YAAI,OAAA,KAAI,CAAC,KAAK,CAAC,EAAE,CAAC;QAAd,CAAc,CAAC,CAAC;QAClE,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAGhD,OAAO,UAAU,CAAC,MAAM,CAAC,SAAC,CAAC,EAAE,CAAC;YAC1B,OAAA,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,IAAI,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,MAAM,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,IAC9E,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,IAAI,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC;QADvE,CACuE,CAAC,CAAC;IACjF,CAAC;IAEM,WAAA,YAAY,GAAnB,SAAoB,KAAgB,EAAE,YAAoB,EAAE,UAAkB,EAAE,WAAmB;QAC/F,IAAI,MAAM,GAAG;YACT,SAAS,EAAE,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;YAC3D,SAAS,EAAE,EAAE;SAChB,CAAC;QACF,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAClB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;gBACnC,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrB,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBACtB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;wBAClB,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC;qBACzC,MAAM;wBACH,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC;qBACzC;oBACD,MAAM,CAAC,SAAS,IAAI,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;oBAC7C,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACrB,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7B,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChB,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChB,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;oBACb,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;oBACb,IAAI,KAAK,GAAG,UAAU,CAAC,kBAAkB,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAE7D,IAAI,EAAE,EAAE,EAAE,CAAC;oBACX,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;wBAClB,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC;wBAC3C,EAAE,GAAG,EAAE,CAAC;qBACX,MAAM;wBACH,EAAE,GAAG,EAAE,CAAC;wBACR,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC;qBAC9C;oBACD,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;oBAC1B,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;oBAC1B,MAAM,CAAC,SAAS,IAAI,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,OAAO,GAAG,KAAK,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;iBAC1F,MAAM;oBACH,IAAI,QAAQ,GAAG;wBAAC,CAAC;wBAAE,CAAC;qBAAC,CAAC;oBACtB,IAAI,YAAY,EAAE,YAAY,CAAC;oBAC/B,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;wBAClB,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC;wBACrC,YAAY,GAAG;4BAAC,CAAC;4BAAE,CAAC,GAAG,UAAU;yBAAC,CAAC;wBACnC,YAAY,GAAG;4BAAC,CAAC;4BAAE,CAAC,GAAG,UAAU;yBAAC,CAAC;qBACtC,MAAM;wBACH,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC;wBACrC,YAAY,GAAG;4BAAC,CAAC,GAAG,UAAU;4BAAE,CAAC;yBAAC,CAAC;wBACnC,YAAY,GAAG;4BAAC,CAAC,GAAG,UAAU;4BAAE,CAAC;yBAAC,CAAC;qBACtC;oBACD,MAAM,CAAC,SAAS,IAAI,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;oBAC7C,IAAI,WAAW,GAAG,CAAC,EAAE;wBACjB,MAAM,CAAC,SAAS,GAAG,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC,GACzG,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;qBACrD;iBACJ;aACJ;SACJ,MAAM;YACH,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,QAAQ,GAAG;gBAAC,CAAC;gBAAE,CAAC;aAAC,CAAC;YACtB,IAAI,YAAY,EAAE,YAAY,CAAC;YAC/B,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;gBAClB,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC;gBACrC,YAAY,GAAG;oBAAC,CAAC;oBAAE,CAAC,GAAG,UAAU;iBAAC,CAAC;gBACnC,YAAY,GAAG;oBAAC,CAAC;oBAAE,CAAC,GAAG,UAAU;iBAAC,CAAC;aACtC,MAAM;gBACH,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC;gBACrC,YAAY,GAAG;oBAAC,CAAC,GAAG,UAAU;oBAAE,CAAC;iBAAC,CAAC;gBACnC,YAAY,GAAG;oBAAC,CAAC,GAAG,UAAU;oBAAE,CAAC;iBAAC,CAAC;aACtC;YACD,MAAM,CAAC,SAAS,IAAI,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;YAC7C,IAAI,WAAW,GAAG,CAAC,EAAE;gBACjB,MAAM,CAAC,SAAS,GAAG,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC,GACzG,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;aACrD;SACJ;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IACL,OAAA,UAAC;AAAD,CAAC,AAzlBD,IAylBC;AAzlBY,QAAA,UAAA,GAAA,WAAU","ignoreList":[0]}},
    {"offset": {"line": 4695, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4700, "column": 0}, "map": {"version":3,"file":"layout3d.js","sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/node_modules/webcola/WebCola/src/layout3d.ts"],"sourcesContent":["import {Calculator} from './shortestpaths'\r\nimport {Descent} from './descent'\r\nimport {Projection, GraphNode, Rectangle} from './rectangle'\r\nimport {Variable} from './vpsc'\r\nimport {jaccardLinkLengths, LinkLengthAccessor} from './linklengths'\r\n\r\nexport class Link3D {\r\n        length: number;\r\n        constructor(public source: number, public target: number) { }\r\n        actualLength(x: number[][]) {\r\n            return Math.sqrt(\r\n                x.reduce((c: number, v: number[]) => {\r\n                    const dx = v[this.target] - v[this.source];\r\n                    return c + dx * dx;\r\n                }, 0));\r\n        }\r\n    }\r\n    export class Node3D implements GraphNode {\r\n        // if fixed, layout will not move the node from its specified starting position\r\n        fixed: boolean;\r\n        width: number;\r\n        height: number;\r\n        px: number;\r\n        py: number;\r\n        bounds: Rectangle;\r\n        variable: Variable;\r\n        constructor(\r\n            public x: number = 0,\r\n            public y: number = 0,\r\n            public z: number = 0) { }\r\n    }\r\n    export class Layout3D {\r\n        static dims = ['x', 'y', 'z'];\r\n        static k = Layout3D.dims.length;\r\n        result: number[][];\r\n        constraints: any[] = null;\r\n\r\n        constructor(public nodes: Node3D[], public links: Link3D[], public idealLinkLength: number = 1) {\r\n            this.result = new Array(Layout3D.k);\r\n            for (var i = 0; i < Layout3D.k; ++i) {\r\n                this.result[i] = new Array(nodes.length);\r\n            }\r\n            nodes.forEach((v, i) => {\r\n                for (var dim of Layout3D.dims) {\r\n                    if (typeof v[dim] == 'undefined') v[dim] = Math.random();\r\n                }\r\n                this.result[0][i] = v.x;\r\n                this.result[1][i] = v.y;\r\n                this.result[2][i] = v.z;\r\n            });\r\n        };\r\n\r\n        linkLength(l: Link3D): number {\r\n            return l.actualLength(this.result);\r\n        }\r\n\r\n        useJaccardLinkLengths: boolean = true;\r\n\r\n        descent: Descent;\r\n        start(iterations: number = 100): Layout3D {\r\n            const n = this.nodes.length;\r\n\r\n            var linkAccessor = new LinkAccessor();\r\n\r\n            if (this.useJaccardLinkLengths)\r\n                jaccardLinkLengths(this.links, linkAccessor, 1.5);\r\n\r\n            this.links.forEach(e => e.length *= this.idealLinkLength);\r\n\r\n            // Create the distance matrix that Cola needs\r\n            const distanceMatrix = (new Calculator(n, this.links,\r\n                e=> e.source, e=> e.target, e => e.length)).DistanceMatrix();\r\n\r\n            const D = Descent.createSquareMatrix(n, (i, j) => distanceMatrix[i][j]);\r\n\r\n            // G is a square matrix with G[i][j] = 1 iff there exists an edge between node i and node j\r\n            // otherwise 2.\r\n            var G = Descent.createSquareMatrix(n, function () { return 2 });\r\n            this.links.forEach(({ source, target }) => G[source][target] = G[target][source] = 1);\r\n\r\n            this.descent = new Descent(this.result, D);\r\n            this.descent.threshold = 1e-3;\r\n            this.descent.G = G;\r\n            //let constraints = this.links.map(e=> <any>{\r\n            //    axis: 'y', left: e.source, right: e.target, gap: e.length*1.5\r\n            //});\r\n            if (this.constraints)\r\n                this.descent.project = new Projection(<GraphNode[]>this.nodes, null, null, this.constraints).projectFunctions();\r\n\r\n            for (var i = 0; i < this.nodes.length; i++) {\r\n                var v = this.nodes[i];\r\n                if (v.fixed) {\r\n                    this.descent.locks.add(i, [v.x, v.y, v.z]);\r\n                }\r\n            }\r\n\r\n            this.descent.run(iterations);\r\n            return this;\r\n        }\r\n\r\n        tick(): number {\r\n            this.descent.locks.clear();\r\n            for (var i = 0; i < this.nodes.length; i++) {\r\n                var v = this.nodes[i];\r\n                if (v.fixed) {\r\n                    this.descent.locks.add(i, [v.x, v.y, v.z]);\r\n                }\r\n            }\r\n            return this.descent.rungeKutta();\r\n        }\r\n    }\r\n\r\n    class LinkAccessor implements LinkLengthAccessor<any> {\r\n        getSourceIndex(e: any): number { return e.source; }\r\n        getTargetIndex(e: any): number { return e.target; }\r\n        getLength(e: any): number { return e.length; }\r\n        setLength(e: any, l: number) { e.length = l; }\r\n    }\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4854, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4859, "column": 0}, "map": {"version":3,"file":"batch.js","sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/node_modules/webcola/WebCola/src/batch.ts"],"sourcesContent":["import {Node, Link, Layout} from './layout'\r\nimport {GridRouter} from './gridrouter'\r\nimport {Point} from './geom'\r\n\r\n/**\r\n * @property nudgeGap spacing between parallel edge segments\r\n * @property margin space around nodes\r\n * @property groupMargin space around groups\r\n */\r\nexport function gridify(pgLayout, nudgeGap: number, margin: number, groupMargin: number) {\r\n    pgLayout.cola.start(0, 0, 0, 10, false);\r\n    let gridrouter = route(pgLayout.cola.nodes(), pgLayout.cola.groups(), margin, groupMargin);\r\n    return gridrouter.routeEdges<any>(pgLayout.powerGraph.powerEdges, nudgeGap, e=> e.source.routerNode.id, e=> e.target.routerNode.id);\r\n}\r\n\r\nfunction route(nodes, groups, margin: number, groupMargin: number) {\r\n    nodes.forEach(d => {\r\n        d.routerNode = <any>{\r\n            name: d.name,\r\n            bounds: d.bounds.inflate(-margin)\r\n        };\r\n    });\r\n    groups.forEach(d => {\r\n        d.routerNode = <any>{\r\n            bounds: d.bounds.inflate(-groupMargin),\r\n            children: (typeof d.groups !== 'undefined' ? d.groups.map(c=> nodes.length + c.id) : [])\r\n                .concat(typeof d.leaves !== 'undefined' ? d.leaves.map(c=> c.index) : [])\r\n        };\r\n    });\r\n    let gridRouterNodes = nodes.concat(groups).map((d, i) => {\r\n        d.routerNode.id = i;\r\n        return d.routerNode;\r\n    });\r\n    return new GridRouter(gridRouterNodes, {\r\n        getChildren: (v: any) => v.children,\r\n        getBounds: v => v.bounds\r\n    }, margin - groupMargin);\r\n}\r\n\r\nexport function powerGraphGridLayout(\r\n    graph: { nodes: Node[], links: Link<Node>[] },\r\n    size: number[],\r\n    grouppadding: number)\r\n{\r\n    // compute power graph\r\n    var powerGraph;\r\n    graph.nodes.forEach((v,i) => (<any>v).index = i);\r\n    new Layout()\r\n        .avoidOverlaps(false)\r\n        .nodes(graph.nodes)\r\n        .links(graph.links)\r\n        .powerGraphGroups(function (d) {\r\n            powerGraph = d;\r\n            powerGraph.groups.forEach(v=> v.padding = grouppadding);\r\n        });\r\n\r\n    // construct a flat graph with dummy nodes for the groups and edges connecting group dummy nodes to their children\r\n    // power edges attached to groups are replaced with edges connected to the corresponding group dummy node\r\n    var n = graph.nodes.length;\r\n    var edges = [];\r\n    var vs = graph.nodes.slice(0);\r\n    vs.forEach((v, i) => (<any>v).index = i);\r\n    powerGraph.groups.forEach(g => {\r\n        var sourceInd = g.index = g.id + n;\r\n        vs.push(g);\r\n        if (typeof g.leaves !== 'undefined')\r\n            g.leaves.forEach(v => edges.push({ source: sourceInd, target: v.index }));\r\n        if (typeof g.groups !== 'undefined')\r\n            g.groups.forEach(gg => edges.push({ source: sourceInd, target: gg.id + n }));\r\n    });\r\n    powerGraph.powerEdges.forEach(e=> {\r\n        edges.push({ source: e.source.index, target: e.target.index });\r\n    });\r\n\r\n    // layout the flat graph with dummy nodes and edges\r\n    new Layout()\r\n        .size(size)\r\n        .nodes(vs)\r\n        .links(edges)\r\n        .avoidOverlaps(false)\r\n        .linkDistance(30)\r\n        .symmetricDiffLinkLengths(5)\r\n        .convergenceThreshold(1e-4)\r\n        .start(100, 0, 0, 0, false);\r\n\r\n    // final layout taking node positions from above as starting positions\r\n    // subject to group containment constraints\r\n    // and then gridifying the layout\r\n    return {\r\n        cola:\r\n            new Layout()\r\n            .convergenceThreshold(1e-3)\r\n            .size(size)\r\n            .avoidOverlaps(true)\r\n            .nodes(graph.nodes)\r\n            .links(graph.links)\r\n        //.flowLayout('y', 30)\r\n            .groupCompactness(1e-4)\r\n            .linkDistance(30)\r\n            .symmetricDiffLinkLengths(5)\r\n            .powerGraphGroups(function (d) {\r\n                powerGraph = d;\r\n                powerGraph.groups.forEach(function (v) {\r\n                    v.padding = grouppadding\r\n                });\r\n            }).start(50, 0, 100, 0, false),\r\n        powerGraph: powerGraph\r\n    };\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4956, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4961, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/node_modules/webcola/WebCola/index.ts"],"sourcesContent":["export * from './src/adaptor'\r\nexport * from './src/d3adaptor'\r\nexport * from './src/descent'\r\nexport * from './src/geom'\r\nexport * from './src/gridrouter'\r\nexport * from './src/handledisconnected'\r\nexport * from './src/layout'\r\nexport * from './src/layout3d'\r\nexport * from './src/linklengths'\r\nexport * from './src/powergraph'\r\nexport * from './src/pqueue'\r\nexport * from './src/rbtree'\r\nexport * from './src/rectangle'\r\nexport * from './src/shortestpaths'\r\nexport * from './src/vpsc'\r\nexport * from './src/batch'\r\n"],"names":[],"mappings":";;;;;;;AAAA,mCAA6B;AAC7B,qCAA+B;AAC/B,mCAA6B;AAC7B,gCAA0B;AAC1B,sCAAgC;AAChC,8CAAwC;AACxC,kCAA4B;AAC5B,oCAA8B;AAC9B,uCAAiC;AACjC,sCAAgC;AAChC,kCAA4B;AAC5B,kCAA4B;AAC5B,qCAA+B;AAC/B,yCAAmC;AACnC,gCAA0B;AAC1B,iCAA2B","ignoreList":[0]}},
    {"offset": {"line": 4984, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}