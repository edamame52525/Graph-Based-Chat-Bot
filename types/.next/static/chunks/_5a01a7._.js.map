{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/components/cytoscape/CytoscapeGraph.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useEffect, useRef } from \"react\";\nimport { NodeSingular,LayoutOptions } from \"cytoscape\";\nimport cytoscape from \"cytoscape\";\nimport type { NodeData } from \"@/types/node_types\";\nimport cola from 'cytoscape-cola';\n\n\n// 初期ノード登録\nconst graphData = {\n  nodes: [{ data: { id: \"1\", label: \"Node 1\", query: \"This is node 1\",response: \"\", color: \"#ff5733\" } }],\n  edges: [],\n}\n\ncytoscape.use( cola );\n\n/*ーーーーーーーーーーーーーーーーーーーーーーーー\nまだ使用するかわからないもの\nvar gridGuide = require('cytoscape-grid-guide');\ngridGuide( cytoscape ); // register extension\n\nーーーーーーーーーーーーーーーーーーーーーーーーー*/\n\n//関数型のアノテーションを返す。通常はname: stringみたいに書くが、ここでは、関数が何の引数を受け取って、何を返すかを明示的に示している。\n//この場合、引数はonNodeClickという関数で、引数は一つ。NodeData型で、そして何も返さない。\ninterface CytoscapeGraphProps {\n  onNodeClick: (nodeData: NodeData) => void\n}\n\n\n// 初回init用\nexport default function CytoscapeGraph({ onNodeClick }: CytoscapeGraphProps) {\n  const containerRef = useRef<HTMLDivElement>(null)\n  const cyRef = useRef<cytoscape.Core | null>(null)\n\n  useEffect(() => {\n    if (!containerRef.current) return\n\n    \n    cytoscape.use( cola );\n\n    const cy = cytoscape({\n      container: containerRef.current,\n      elements: [...graphData.nodes, ...graphData.edges],\n      layout: {\n        name: \"cola\",\n        animate: true,\n        fit: false,\n        animateDuration: 500,\n        animateEasing: \"ease-out\",\n        nodeRepulsion: (node:NodeSingular) => 450, // ノード間の反発力\n        gravity: 0.25, // 重力\n        idealEdgeLength: 20, // エッジの長さ\n        centerGraph: true, // グラフを中央に寄せる\n      \n\n      }as LayoutOptions,\n      style: [\n        {\n          selector: \"node\",\n          style: {\n            \"background-color\": \"data(color)\",\n            label: \"data(label)\",\n            color: \"#fff\",\n            \"text-outline-color\": \"#000\",\n            \"text-outline-width\": 1,\n            \"font-size\": 14,\n            width: 40,\n            height: 40,\n          },\n        },\n        {\n          selector: \"edge\",\n          style: {\n            width: 2,\n            \"line-color\": \"#ccc\",\n            \"curve-style\": \"bezier\",\n          },\n        },\n      ],\n\n    });\n\n    cyRef.current = cy     \n  }, []);\n\n  //ノードがクリックされたときの処理\n  useEffect(() => {\n    const cy = cyRef.current\n    if (cy === null) return\n\n\n    cy.on(\"tap\", \"node\", (event) => {\n      const node = event.target\n      const nodeData: NodeData = {\n        id: node.id(),\n        query: node.data(\"label\"),\n        response: node.data(\"response\"),\n        edges: node.connectedEdges().length,\n        color: node.data(\"color\"),\n      }\n\n      onNodeClick(nodeData)\n    })\n\n  }, [graphData])\n\n  return <div ref={containerRef} className=\"w-full h-full\" />\n}\n\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;;;AANA;;;;AASA,UAAU;AACV,MAAM,YAAY;IAChB,OAAO;QAAC;YAAE,MAAM;gBAAE,IAAI;gBAAK,OAAO;gBAAU,OAAO;gBAAiB,UAAU;gBAAI,OAAO;YAAU;QAAE;KAAE;IACvG,OAAO,EAAE;AACX;AAEA,yJAAA,CAAA,UAAS,CAAC,GAAG,CAAE,yJAAA,CAAA,UAAI;AAiBJ,SAAS,eAAe,EAAE,WAAW,EAAuB;;IACzE,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAC5C,MAAM,QAAQ,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAyB;IAE5C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,IAAI,CAAC,aAAa,OAAO,EAAE;YAG3B,yJAAA,CAAA,UAAS,CAAC,GAAG,CAAE,yJAAA,CAAA,UAAI;YAEnB,MAAM,KAAK,CAAA,GAAA,yJAAA,CAAA,UAAS,AAAD,EAAE;gBACnB,WAAW,aAAa,OAAO;gBAC/B,UAAU;uBAAI,UAAU,KAAK;uBAAK,UAAU,KAAK;iBAAC;gBAClD,QAAQ;oBACN,MAAM;oBACN,SAAS;oBACT,KAAK;oBACL,iBAAiB;oBACjB,eAAe;oBACf,aAAa;uDAAE,CAAC,OAAsB;;oBACtC,SAAS;oBACT,iBAAiB;oBACjB,aAAa;gBAGf;gBACA,OAAO;oBACL;wBACE,UAAU;wBACV,OAAO;4BACL,oBAAoB;4BACpB,OAAO;4BACP,OAAO;4BACP,sBAAsB;4BACtB,sBAAsB;4BACtB,aAAa;4BACb,OAAO;4BACP,QAAQ;wBACV;oBACF;oBACA;wBACE,UAAU;wBACV,OAAO;4BACL,OAAO;4BACP,cAAc;4BACd,eAAe;wBACjB;oBACF;iBACD;YAEH;YAEA,MAAM,OAAO,GAAG;QAClB;mCAAG,EAAE;IAEL,kBAAkB;IAClB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,MAAM,KAAK,MAAM,OAAO;YACxB,IAAI,OAAO,MAAM;YAGjB,GAAG,EAAE,CAAC,OAAO;4CAAQ,CAAC;oBACpB,MAAM,OAAO,MAAM,MAAM;oBACzB,MAAM,WAAqB;wBACzB,IAAI,KAAK,EAAE;wBACX,OAAO,KAAK,IAAI,CAAC;wBACjB,UAAU,KAAK,IAAI,CAAC;wBACpB,OAAO,KAAK,cAAc,GAAG,MAAM;wBACnC,OAAO,KAAK,IAAI,CAAC;oBACnB;oBAEA,YAAY;gBACd;;QAEF;mCAAG;QAAC;KAAU;IAEd,qBAAO,6LAAC;QAAI,KAAK;QAAc,WAAU;;;;;;AAC3C;GA7EwB;KAAA"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,8JAAM,UAAU,MAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,6QACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AACA,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport CytoscapeEventHandle from \"@/utils/CytoscapeEventHandle\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\n\n\nconst Button = () => React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAMA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAWF,MAAM,SAAS,kBAAM,8JAAM,UAAU,CACnC,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;QACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;QAC9B,qBACE,6LAAC;YACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;gBAAE;gBAAS;gBAAM;YAAU;YACxD,KAAK;YACJ,GAAG,KAAK;;;;;;IAIf;KAXI;AAaN,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/components/node-controls/NodeManager.tsx"],"sourcesContent":["import React, { useEffect, useRef ,useContext } from \"react\";\nimport { NodeSingular,LayoutOptions } from \"cytoscape\";\nimport cytoscape from \"cytoscape\";\nimport type { NodeData } from \"@/types/node_types\";\nimport cola from 'cytoscape-cola';\nimport { Button } from \"../ui/button\";\n\n\ninterface NodeManagerProps {\n    action: 'update' | 'create' | 'delete';\n    nodeData?: NodeData;\n}\n\ncytoscape.use( cola );\n\nconst NodeManager: React.FC<NodeManagerProps> = ({ action, nodeData }) => {\n    const cyRef = useRef<cytoscape.Core | null>(null)\n    const cy = cyRef.current\n\n    if (cy === null) return\n\n    const node :NodeData = nodeData;\n\n    const CreateNodes = () => {\n        // let count = randomInt(100).toString();\n      let id = Math.floor(Math.random()*10000)  // 新しいノードの ID\n      console.log(\"id:\",id)\n      let sourceId = node.id() // クリックされたノードの ID\n\n      // デバッグ用出力\n      console.log(\"Existing nodes before add:\", cy.nodes().map(n => n.data()))\n      console.log(\"Existing edges before add:\", cy.edges().map(e => e.data()))\n\n      // 新しいノードとエッジを追加\n      const newNode = cy.add([\n        {\n          group: \"nodes\",\n          data: { id: `${id}`, label: `${id}`, color: \"#33ff57\" },\n          position: { x: centerX, y: centerY }, // 画面の中心に追加\n        },\n        {\n          group: \"edges\",\n          data: { id: `edge-${sourceId}-${id}`, source: id, target: sourceId },\n        },\n      ])\n\n    //   デバッグ用出力\n      console.log(\"New node added:\", newNode.map(n => n.data()))\n      console.log(\"Existing nodes after add:\", cy.nodes().map(n => n.data()))\n      console.log(\"Existing edges after add:\", cy.edges().map(e => e.data()))\n\n      // ノード追加後にレイアウトを適用（アニメーションなし）\n      const layout = cy.layout(\n        {\n          name: \"cola\",\n          animate: true,\n          fit: false, \n          animeduration: 500, \n          nodeDimensionsIncludeLabels: true, \n          nodeRepulsion: (node: NodeSingular) => 450,\n          gravity: 0.25, \n          maxSimulationTime: 10000000,\n          convergenceThreshold: 1e-9,\n          idealEdgeLength: 20,\n        } as LayoutOptions)\n\n      layout.run()\n\n      // 追加したノードを画面の中心に配置\n      cy.center(cy.$(`#${id}`));\n      // デバッグ用出力\n      // console.log(\"Layout run completed\")\n      // console.log(\"Existing nodes after layout:\", cy.nodes().map(n => n.data()))\n      // console.log(\"Existing edges after layout:\", cy.edges().map(e => e.data()))\n      // console.log(\"clicked\")\n        \n    };\n\n    const UpdateNodes = () => {\n\n    };\n\n    const DeleteNodes = () => {\n\n    };\n\n    const handleAction = () => {\n        switch (action) {\n            case 'create':\n                CreateNodes();\n                break;\n            case 'update':\n                UpdateNodes();\n                break;\n            case 'delete':\n                DeleteNodes();\n                break;\n            default:\n                break;\n\n        };\n    }\n\n    return (\n        <div>\n          <Button onClick={() => NodeManager(action='create',nodeData)}>Create Node</Button>\n        </div>\n      );\n\n}\n\nexport default NodeManager;\n\n\n\n\n"],"names":[],"mappings":";;;;AAAA;AAEA;AAEA;AACA;;;;;;;AAQA,yJAAA,CAAA,UAAS,CAAC,GAAG,CAAE,yJAAA,CAAA,UAAI;AAEnB,MAAM,cAA0C,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE;;IACjE,MAAM,QAAQ,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAyB;IAC5C,MAAM,KAAK,MAAM,OAAO;IAExB,IAAI,OAAO,MAAM;IAEjB,MAAM,OAAiB;IAEvB,MAAM,cAAc;QAChB,yCAAyC;QAC3C,IAAI,KAAK,KAAK,KAAK,CAAC,KAAK,MAAM,KAAG,OAAQ,aAAa;;QACvD,QAAQ,GAAG,CAAC,OAAM;QAClB,IAAI,WAAW,KAAK,EAAE,GAAG,iBAAiB;;QAE1C,UAAU;QACV,QAAQ,GAAG,CAAC,8BAA8B,GAAG,KAAK,GAAG,GAAG,CAAC,CAAA,IAAK,EAAE,IAAI;QACpE,QAAQ,GAAG,CAAC,8BAA8B,GAAG,KAAK,GAAG,GAAG,CAAC,CAAA,IAAK,EAAE,IAAI;QAEpE,gBAAgB;QAChB,MAAM,UAAU,GAAG,GAAG,CAAC;YACrB;gBACE,OAAO;gBACP,MAAM;oBAAE,IAAI,GAAG,IAAI;oBAAE,OAAO,GAAG,IAAI;oBAAE,OAAO;gBAAU;gBACtD,UAAU;oBAAE,GAAG;oBAAS,GAAG;gBAAQ;YACrC;YACA;gBACE,OAAO;gBACP,MAAM;oBAAE,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE,IAAI;oBAAE,QAAQ;oBAAI,QAAQ;gBAAS;YACrE;SACD;QAEH,YAAY;QACV,QAAQ,GAAG,CAAC,mBAAmB,QAAQ,GAAG,CAAC,CAAA,IAAK,EAAE,IAAI;QACtD,QAAQ,GAAG,CAAC,6BAA6B,GAAG,KAAK,GAAG,GAAG,CAAC,CAAA,IAAK,EAAE,IAAI;QACnE,QAAQ,GAAG,CAAC,6BAA6B,GAAG,KAAK,GAAG,GAAG,CAAC,CAAA,IAAK,EAAE,IAAI;QAEnE,6BAA6B;QAC7B,MAAM,SAAS,GAAG,MAAM,CACtB;YACE,MAAM;YACN,SAAS;YACT,KAAK;YACL,eAAe;YACf,6BAA6B;YAC7B,eAAe,CAAC,OAAuB;YACvC,SAAS;YACT,mBAAmB;YACnB,sBAAsB;YACtB,iBAAiB;QACnB;QAEF,OAAO,GAAG;QAEV,mBAAmB;QACnB,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI;IACvB,UAAU;IACV,sCAAsC;IACtC,6EAA6E;IAC7E,6EAA6E;IAC7E,yBAAyB;IAE3B;IAEA,MAAM,cAAc,KAEpB;IAEA,MAAM,cAAc,KAEpB;IAEA,MAAM,eAAe;QACjB,OAAQ;YACJ,KAAK;gBACD;gBACA;YACJ,KAAK;gBACD;gBACA;YACJ,KAAK;gBACD;gBACA;YACJ;gBACI;QAER;;IACJ;IAEA,qBACI,6LAAC;kBACC,cAAA,6LAAC,8HAAA,CAAA,SAAM;YAAC,SAAS,IAAM,YAAY,SAAO,UAAS;sBAAW;;;;;;;;;;;AAIxE;GA9FM;KAAA;uCAgGS"}},
    {"offset": {"line": 375, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/components/sidebar/Sidebar.tsx"],"sourcesContent":["import React from \"react\"\nimport { Link, X } from \"react-feather\"\nimport type { NodeData } from \"@/types/node_types\"\nimport { Textarea } from \"../ui/textarea\"\nimport { Label } from \"@radix-ui/react-label\"\nimport { Button } from \"../ui/button\"\nimport NodeManager from \"../node-controls/NodeManager\"\n\n\ninterface SidebarProps {\n    isOpen: boolean\n    onClose: () => void\n    nodeData: NodeData | null\n}\n\n  const ResourceContext = React.createContext(\"\");\n  \n  export default function Sidebar({ isOpen, onClose, nodeData }: SidebarProps) {\n\n    return (\n      <div\n        className={`fixed top-0 right-0 w-1/3 h-full bg-white shadow-lg transform transition-transform duration-300 ease-in-out z-10 ${\n          isOpen ? \"translate-x-0\" : \"translate-x-full\"\n        }`}\n      >\n        <div className=\"p-6 h-full overflow-auto\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h2 className=\"text-2xl font-bold\">○○に関する情報</h2>\n            <button onClick={onClose} className=\"p-1 rounded-full hover:bg-gray-100\" aria-label=\"Close sidebar\">\n              <X className=\"h-6 w-6\" />\n            </button>\n          </div>\n  \n          {nodeData ? (\n            <div className=\"space-y-4\">\n              <div className=\"w-16 h-16 rounded-full mb-4\" style={{ backgroundColor: nodeData.color }} />\n\n              <div>\n                <h3 className=\"text-lg font-semibold\">質問:</h3>\n                <p>○○とはなんでしょうか</p>\n              </div>\n\n              <div>\n                <h3 className=\"text-lg font-semibold \">AIの回答:</h3>\n                <p>○○とは△△ということです。</p>\n              </div>\n  \n              <div className=\"grid w-full gap-1.5\">\n                <Label htmlFor=\"message\" className=\"mt-4 font-semibold\">つづけて質問</Label>\n                <Textarea placeholder=\"入力してください\" id=\"message\" />\n                <p className=\"text-sm text-muted-foreground mt-0 text-xs\">\n                  Ctrl + Enterで送信\n                </p>\n                <NodeManager action=\"create\" nodeData={nodeData}/>\n              </div>\n  \n              {/* <div>\n                <h3 className=\"text-lg font-semibold\">Description</h3>\n                <p>{nodeData.response}</p>\n              </div> */}\n  \n             \n  \n              {/* Additional node information can be added here */}\n              {/* <div className=\"mt-8 p-4 bg-gray-50 rounded-lg\">\n                <h3 className=\"text-lg font-semibold mb-2\">Actions</h3>\n                <div className=\"flex flex-col gap-2\">\n                  <button className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\">Edit Node</button>\n                  <button className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300\">\n                    View Connections\n                  </button>\n                </div>\n              </div> */}\n            </div>\n          ) : (\n            <p>Select a node to view details</p>\n          )}\n        </div>\n      </div>\n    )\n  }\n  \n  "],"names":[],"mappings":";;;;AAAA;AAGA;AAGA;AALA;AAGA;;;;;;;AAWE,MAAM,gCAAkB,6JAAA,CAAA,UAAK,CAAC,aAAa,CAAC;AAE7B,SAAS,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAgB;IAEzE,qBACE,6LAAC;QACC,WAAW,CAAC,iHAAiH,EAC3H,SAAS,kBAAkB,oBAC3B;kBAEF,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAqB;;;;;;sCACnC,6LAAC;4BAAO,SAAS;4BAAS,WAAU;4BAAqC,cAAW;sCAClF,cAAA,6LAAC,yLAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;;;;;;;;;;;;gBAIhB,yBACC,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;4BAA8B,OAAO;gCAAE,iBAAiB,SAAS,KAAK;4BAAC;;;;;;sCAEtF,6LAAC;;8CACC,6LAAC;oCAAG,WAAU;8CAAwB;;;;;;8CACtC,6LAAC;8CAAE;;;;;;;;;;;;sCAGL,6LAAC;;8CACC,6LAAC;oCAAG,WAAU;8CAAyB;;;;;;8CACvC,6LAAC;8CAAE;;;;;;;;;;;;sCAGL,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,oKAAA,CAAA,QAAK;oCAAC,SAAQ;oCAAU,WAAU;8CAAqB;;;;;;8CACxD,6LAAC,gIAAA,CAAA,WAAQ;oCAAC,aAAY;oCAAW,IAAG;;;;;;8CACpC,6LAAC;oCAAE,WAAU;8CAA6C;;;;;;8CAG1D,6LAAC,iJAAA,CAAA,UAAW;oCAAC,QAAO;oCAAS,UAAU;;;;;;;;;;;;;;;;;yCAsB3C,6LAAC;8BAAE;;;;;;;;;;;;;;;;;AAKb;KA/DwB"}},
    {"offset": {"line": 567, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 573, "column": 0}, "map": {"version":3,"sources":["file:///home/edama/dev/next_js_tutorial/network-chat-application/app/test/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport CytoscapeGraph from \"@/components/cytoscape/CytoscapeGraph\"\nimport Sidebar from \"@/components/sidebar/Sidebar\"\nimport type { NodeData } from \"@/types/node_types\"\n\nexport default function Home() {\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [selectedNode, setSelectedNode] = useState<NodeData | null>(null)\n\n  const handleNodeClick = (nodeData: NodeData) => {\n    setSelectedNode(nodeData)\n    setSidebarOpen(true)\n  }\n\n  const closeSidebar = () => {\n    setSidebarOpen(false)\n  }\n\n  return (\n    <main className=\"flex min-h-screen flex-col items-center justify-between\">\n      <div className=\"relative flex w-full h-screen\">\n        <div className={`flex-1 transition-all duration-300 ${sidebarOpen ? \"pr-[33.333%]\" : \"\"}`}>\n          <CytoscapeGraph onNodeClick={handleNodeClick} /> \n        </div>\n        <Sidebar isOpen={sidebarOpen} onClose={closeSidebar} nodeData={selectedNode} />\n      </div>\n      \n    </main>\n  )\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAOe,SAAS;;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAmB;IAElE,MAAM,kBAAkB,CAAC;QACvB,gBAAgB;QAChB,eAAe;IACjB;IAEA,MAAM,eAAe;QACnB,eAAe;IACjB;IAEA,qBACE,6LAAC;QAAK,WAAU;kBACd,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAW,CAAC,mCAAmC,EAAE,cAAc,iBAAiB,IAAI;8BACvF,cAAA,6LAAC,6IAAA,CAAA,UAAc;wBAAC,aAAa;;;;;;;;;;;8BAE/B,6LAAC,oIAAA,CAAA,UAAO;oBAAC,QAAQ;oBAAa,SAAS;oBAAc,UAAU;;;;;;;;;;;;;;;;;AAKvE;GAxBwB;KAAA"}},
    {"offset": {"line": 644, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}